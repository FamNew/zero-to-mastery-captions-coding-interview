WEBVTT

00:01.660 --> 00:10.580
What is a linked list as the name suggests it's a list that is linked Andre.

00:10.630 --> 00:11.770
That's not very helpful.

00:11.770 --> 00:13.910
Can you actually explain it to us.

00:13.930 --> 00:14.310
All right.

00:14.410 --> 00:17.130
Well I have a little diagram here for you.

00:18.020 --> 00:28.050
A list or in this case as we'll find out soon a singly linked list contains a set of notes and think

00:28.050 --> 00:30.470
of nodes as these blocks.

00:31.300 --> 00:40.130
Both the bread and green block together is a note these notes have two elements the value of the data

00:40.370 --> 00:41.260
you want to store.

00:41.270 --> 00:47.210
In this case the number five and a pointer to the next node in line.

00:47.570 --> 00:56.560
So you can see the green block here points to the next node the first node is called the head.

00:56.780 --> 01:04.880
And the last node is called the tail now depending on some people some people like to call the tail

01:05.180 --> 01:09.600
anything that is after the head so including this block over here.

01:09.720 --> 01:20.250
But I prefer the term tail referring to the very last note finally linked lists are what we call null

01:20.460 --> 01:26.220
terminated which signifies that it's the end of the list.

01:26.400 --> 01:31.080
So we know that this is the tail node because it points to.

01:31.150 --> 01:33.350
No there's nothing coming after it.

01:34.270 --> 01:40.460
Now pointer is a term that you hear a lot in programming and computer science.

01:40.600 --> 01:44.870
And we have a video coming up discussing what a pointer actually is.

01:45.220 --> 01:52.200
But defocus just on linked lists for now you can see that it's a very simple data structure.

01:53.010 --> 01:59.220
It's simply an element that links to the next element that links to the next element and it keeps going

01:59.220 --> 02:06.430
keeps going keeps going until the last element that points to no you can have them sorted.

02:06.430 --> 02:09.070
You can have them on sorted and you can have.

02:09.220 --> 02:13.130
No it's pretty much contain any sort of data type.

02:13.190 --> 02:17.460
But let's take a look at some pseudo code.

02:17.500 --> 02:22.040
Up until now we learned how arrays work and here I can just create a simple array.

02:22.120 --> 02:31.090
Let's say a basket that contains our grocery list we have apples we have grapes the most delicious soda

02:31.090 --> 02:35.120
fruits and we have pears.

02:35.160 --> 02:41.520
Now how can we have a basket that's not an array but a linked list.

02:42.800 --> 02:48.970
Well we can just say that our linked list and this is not actual code just pseudo code.

02:49.100 --> 02:58.430
I can say that our linked list will contain apples that then points to grapes that then points to pears

03:00.730 --> 03:06.660
and these little arrows are essentially pointers saying apples to grapes to pierce.

03:06.740 --> 03:10.410
Remember this isn't actually code I'm just creating a nice diagram for you.

03:12.080 --> 03:20.240
A more accurate diagram might be something like this where we have apples in memory of memory space

03:20.240 --> 03:28.580
of let's say a 9 4 7 and this node points to the next node which is grapes that is at this location

03:28.580 --> 03:34.650
in memory and then that node points to Paris that is at this location in memory.

03:34.700 --> 03:39.510
And because this is the end of the list the tale it points to no.

03:39.550 --> 03:44.230
Now you're thinking to yourself Andre How come you're not just coding this in javascript just show us

03:44.230 --> 03:52.170
how linked lists work and Javascript and stop with this pseudo code jibberish Well javascript doesn't

03:52.170 --> 03:55.590
actually come with Linked Lists built in.

03:55.590 --> 04:00.880
Remember what I said different languages have different tools available to them.

04:01.330 --> 04:10.060
Languages like Java have linked lists while javascript doesn't come pre-built with linked lists.

04:10.900 --> 04:13.470
But luckily for us we can build one.

04:13.730 --> 04:18.850
And this is why you typically do in programming when you don't have something you build it.

04:18.890 --> 04:24.290
And we have the building blocks to be able to build a linked list and that's what we're going to do

04:24.650 --> 04:32.170
as part of an exercise coming up but before we code our own linked list and create our own linked list

04:32.500 --> 04:35.590
data structure let's do a fun little exercise.
