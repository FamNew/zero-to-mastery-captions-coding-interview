WEBVTT

00:01.180 --> 00:04.250
Womack Bagaimana latihan ini.

00:04.470 --> 00:09.220
Mari kita selangkah demi selangkah dan melihat bagaimana jawaban Anda cocok.

00:09.300 --> 00:10.720
Jenis pertama.

00:10.740 --> 00:14.030
Sepuluh sekolah di sekitar rumah Anda dengan jarak.

00:14.310 --> 00:16.370
Jadi inputnya hanya 10.

00:16.410 --> 00:18.430
Cukup kecil.

00:18.450 --> 00:20.370
Kami membutuhkan sesuatu yang sederhana.

00:20.550 --> 00:23.860
Dalam hal ini saya mungkin akan menggunakan jenis penyisipan.

00:25.530 --> 00:28.750
Sangat cepat untuk jenis kecil.

00:28.800 --> 00:37.280
Sangat mudah untuk kode dan memiliki kompleksitas ruang satu.

00:37.300 --> 00:44.860
Bisa juga bahwa 10 sekolah ini sudah diprogramkan atau hampir diurutkan dalam daftar kami.

00:44.920 --> 00:48.460
Jadi penyisipan adalah yang paling sederhana untuk jenis data kecil ini.

00:48.570 --> 00:52.090
Saya suka jenis penyisipan untuk jenis hal ini.

00:52.140 --> 00:53.120
Bagaimana dengan yang ini.

00:53.130 --> 01:01.920
Yang satu ini merupakan jenis daftar yang sulit di situs Web mereka dengan jumlah tawaran saat ini.

01:01.940 --> 01:05.750
Jadi apa yang akan Anda gunakan untuk tembok ini untuk ini?

01:05.750 --> 01:15.710
Saya benar-benar akan menggunakan sesuatu seperti radix atau menghitung semacam karena dengan baik tawaran biasanya angka

01:16.310 --> 01:21.600
antara katakanlah $ 1 hingga katakanlah 50.000.

01:21.710 --> 01:23.550
Mungkin bahkan kurang.

01:23.690 --> 01:28.040
Dalam hal pembayaran di eBay, katakanlah $ 1 hingga $ 100.

01:28.040 --> 01:31.190
Ini adalah angka yang perlu disortir.

01:31.310 --> 01:31.730
Kanan.

01:31.850 --> 01:35.900
Dan karena itu adalah bilangan bulat yang tetap.

01:35.930 --> 01:42.050
Bilangan bulat kemungkinan besar tidak akan menjadi seratus juta karena semoga tidak ada yang menawar sebanyak

01:42.050 --> 01:43.250
itu di eBay.

01:43.250 --> 01:46.800
Jadi, bagaimana Anda menggunakan jenis radix atau menghitung untuk mengalahkan itu.

01:46.820 --> 01:55.110
Semua dan log dan waktu mengetahui bahwa tawaran akan selalu menjadi nomor dalam rentang tertentu.

01:55.270 --> 01:56.920
Bagaimana dengan itu.

01:56.920 --> 02:02.190
Skor olahraga pada skor olahraga ESPN dapat bervariasi.

02:02.190 --> 02:09.560
Ada tempat desimal kadang ada format yang berbeda seperti tenis dan sepak bola dan hal-hal yang

02:09.560 --> 02:14.650
berbeda dan pasti ada banyak olahraga dan banyak skor untuk ditangani.

02:14.880 --> 02:18.100
Dalam hal ini saya akan menggunakan pengurutan cepat.

02:18.810 --> 02:25.170
Ini akan menjadi yang paling efisien dan walaupun kita mungkin memiliki kasus terburuk saya ragu bahwa skor

02:25.170 --> 02:28.690
akan diurutkan karena ada begitu banyak jenis yang berbeda.

02:28.770 --> 02:33.070
Tapi saya juga khawatir tentang penyortiran memori.

02:33.330 --> 02:40.740
Jadi jika saya menggunakan Myrt sort mungkin sedikit terlalu banyak untuk ini karena kami meningkatkan kompleksitas

02:41.250 --> 02:47.500
ruang versus quicksort yang jika Anda ingat memiliki kompleksitas ruang yang lebih baik.

02:47.650 --> 02:50.410
Dan omong-omong Anda mungkin memiliki jawaban sendiri untuk ini.

02:50.410 --> 02:56.330
Mungkin Anda berpikir bahwa skor olahraga pada ESPN adalah input mereka akan sedikit berbeda.

02:56.380 --> 02:58.780
Anda dapat memiliki berbagai jenis jawaban.

02:58.780 --> 03:05.350
Gagasan di sini dalam situasi wawancara adalah untuk menjelaskan diri Anda dan jika Anda tahu prinsip-prinsipnya maka mereka akan mewawancarai

03:05.350 --> 03:09.030
Anda, akan berkata oh dia tahu apa yang mereka bicarakan.

03:09.130 --> 03:14.980
Database besar nomor empat sehingga kita bisa mengisi semua data ini ke dalam memori untuk mengurutkannya.

03:15.040 --> 03:22.400
Jadi kita mungkin perlu mengatasinya secara eksternal dan katakanlah kita perlu memilah data pengguna tahun lalu.

03:22.450 --> 03:27.950
Jadi ini adalah satu ton data dan kita perlu mengurutkannya, katakanlah dengan semacam tanggal.

03:28.470 --> 03:33.100
Apa berdasarkan informasi yang saya dapatkan di sini, sepertinya saya perlu melakukan sesuatu yang

03:35.990 --> 03:38.480
disebut Mertz atau jenis penyortiran favorit saya.

03:39.990 --> 03:47.010
Dan alasan saya akan memilih ini adalah karena kedengarannya baik bahwa kita sekarang akan mulai benar-benar dalam

03:47.010 --> 03:53.260
memori karena datanya sangat besar tetapi karena datanya sangat besar saya benar-benar khawatir dengan kinerjanya.

03:53.280 --> 03:56.920
Saya tidak ingin kasus terburuk quicksort dari semua dan kuadrat.

03:57.000 --> 04:01.720
Saya ingin memastikan bahwa apa pun yang saya dapatkan dan masuk.

04:01.980 --> 04:03.510
Bagaimana dengan yang kelima.

04:03.700 --> 04:10.370
Ada Anda yang hampir diurutkan, ulasan Danny data yang perlu memperbarui dan menambahkan dua ulasan baru.

04:10.530 --> 04:13.670
Jadi kami memiliki daftar besar ulasan Anda.

04:13.880 --> 04:21.650
Katakanlah Anda menyerbu kursus dan skor ini mengatakan bahwa Anda mengambil memiliki 500 ulasan dan Anda telah menambahkan Anda dan teman

04:21.660 --> 04:25.050
Anda hanya menambahkan dua ulasan baru ke dalam skor.

04:25.230 --> 04:30.100
Dalam hal ini saya akan menggunakan jenis penyisipan.

04:30.130 --> 04:33.090
Dan mengapa begitu baik.

04:33.140 --> 04:37.870
Meskipun data ini mungkin sangat besar dan mungkin saya punya banyak ulasan.

04:39.010 --> 04:47.030
Saya berasumsi bahwa sebagian besar data sebelumnya sudah diurutkan dan semua yang saya lakukan adalah menambahkan dua ulasan baru ke

04:47.570 --> 04:48.600
data ini.

04:49.490 --> 04:56.730
Jenis penyisipan untuk daftar yang telah dipesan sebelumnya akan berfungsi lebih baik daripada jenis lainnya yang telah disiapkan.

04:56.880 --> 05:01.730
Catatan suhu nomor enam selama 50 tahun terakhir di Kanada.

05:01.920 --> 05:04.240
Astaga, apa yang harus kita lakukan dengan ini.

05:04.300 --> 05:06.080
Dan ini sedikit rumit.

05:06.360 --> 05:13.450
Saya akan mengatakan bahwa Pertama kami, saya akan menggunakan sesuatu seperti radix atau jenis penghitungan jika suhu tidak memiliki

05:13.450 --> 05:14.520
tempat desimal.

05:14.530 --> 05:25.240
Jika kami mengatakan Anda tahu itu minus 30 hingga katakanlah 40 derajat itu adalah bilangan bulat antara rentang kecil di tempat kerja saya,

05:25.300 --> 05:32.050
tetapi jika saya ingin memilah-milah data yang juga memiliki suhu yang mungkin sangat akurat

05:32.050 --> 05:38.290
dan memiliki tempat desimal yang dapat lakukan dengan radix atau menghitung sort maka

05:38.290 --> 05:47.340
saya mungkin akan menggunakan sort cepat lagi hanya supaya kita bisa melakukan beberapa dalam penyortiran memori dan mudah-mudahan menghemat

05:47.340 --> 05:48.880
kompleksitas ruang itu.

05:48.900 --> 05:54.930
Baiklah, terakhir untuk basis data nama pengguna yang lebih besar atau basis data pengguna besar perlu diurutkan.

05:55.130 --> 05:57.890
Data sangat sangat acak.

05:59.120 --> 06:03.110
Baiklah, jadi kita memiliki basis data pengguna bernama yang perlu diurutkan.

06:03.140 --> 06:07.090
Saya tidak begitu yakin saya tidak memiliki informasi yang cukup untuk membuat keputusan di sini.

06:07.160 --> 06:17.130
Mungkin saya akan menggunakan semacam penggabungan jika kita memiliki cukup memori dan memori tidak terlalu mahal pada mesin.

06:17.130 --> 06:25.040
Atau mungkin saya akan menggunakan quicksort jika saya tidak terlalu khawatir tentang kasus terburuk dan bahwa nama pengguna basis

06:25.210 --> 06:26.760
data yang besar.

06:26.810 --> 06:33.750
Mungkin saya hanya akan menggunakan quicksort hanya untuk menghemat ruang memori dan akhirnya nomor 8.

06:33.930 --> 06:38.490
Anda ingin mengajar Sir menyortir untuk pertama kalinya, jadi ini adalah pertanyaan yang menyenangkan.

06:38.520 --> 06:43.780
Saya mengatakan semacam gelembung agar saya dapat menambahkan jenis gelembung ke daftar ini dan jenis pilihan.

06:45.770 --> 06:46.420
Benci.

06:46.740 --> 06:49.270
Semoga Anda bersenang-senang dengan pertanyaan-pertanyaan ini.

06:49.440 --> 06:50.900
Algoritma penyortiran.

06:50.970 --> 06:52.710
Ini mungkin yang terbaik yang bisa saya dapatkan.

06:52.710 --> 06:58.290
Sebenarnya tidak, saya suka menari Hungaria terlalu menyortir adalah menyenangkan karena Anda dapat dengan menyortir tapi saya

06:58.290 --> 07:03.710
harap Anda memiliki ide bagus tentang bagaimana menjawab pertanyaan-pertanyaan ini ketika mereka datang ke wawancara.

07:04.290 --> 07:05.800
Saya akan lihat di video berikutnya.

07:06.130 --> 07:06.400
Babay
