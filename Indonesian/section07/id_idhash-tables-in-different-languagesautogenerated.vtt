WEBVTT

00:01.800 --> 00:02.960
Selamat datang kembali.

00:03.090 --> 00:10.560
Sekarang tabel hash diimplementasikan secara berbeda dalam bahasa yang berbeda tetapi sebagian besar waktu kunci

00:10.560 --> 00:14.940
dan nilainya dapat berupa semua jenis struktur data.

00:15.240 --> 00:23.010
Kita melihat di sini bahwa kita dapat memiliki fungsi sebagai nilai, kita dapat memiliki objek lain jika kita ingin sebagai nilai,

00:23.790 --> 00:27.340
kita dapat memiliki array sebagai nilai jika kita mau.

00:27.590 --> 00:30.760
Dan maksud saya Anda dapat melakukan ini dalam array juga.

00:30.830 --> 00:33.950
Kami tidak hanya memiliki angka dan string dalam perlombaan.

00:34.040 --> 00:42.790
Kami dapat memiliki array objek tetapi terkadang Anda juga dapat memiliki kunci yang lebih dari sekadar string.

00:43.190 --> 00:52.890
Anda berpotensi memiliki fungsi sebagai kunci dan nilai yang juga merupakan fungsi atau mungkin angka atau

00:52.890 --> 00:56.540
array apa pun yang Anda inginkan.

00:56.620 --> 01:04.900
Sekarang di Javascript dalam objek seperti ini jika Anda melewati kunci yang merupakan angka atau fungsi itu

01:04.900 --> 01:13.540
benar-benar mendapatkan string yang Anda temukan dan itu hanya memungkinkan kunci string tetapi dengan versi baru javascript dan E6

01:14.440 --> 01:19.330
Anda benar-benar memiliki sesuatu yang disebut Peta dan set .

01:20.250 --> 01:23.460
Yang juga mungkin tidak asing dalam bahasa lain.

01:23.460 --> 01:28.650
Peta dibuat seperti ini.

01:29.730 --> 01:38.170
Dan perbedaan antara peta dan objek adalah kenyataan bahwa peta memungkinkan Anda untuk menyimpan tipe data apa pun

01:38.940 --> 01:40.230
sebagai kunci.

01:40.240 --> 01:46.740
Ingat dengan objek Anda hanya dapat menyimpan kunci sebagai string dengan peta.

01:46.740 --> 01:53.700
Ini memungkinkan kita jika kita ingin memiliki fungsi sebagai kunci atau array sebagai kunci.

01:53.790 --> 02:00.150
Dan manfaat lain dari peta adalah mempertahankan urutan penyisipan.

02:00.210 --> 02:01.010
Apa artinya.

02:02.070 --> 02:07.140
Nah dengan sebuah objek tidak ada pesanan ada.

02:07.140 --> 02:14.900
Jika kita kembali ke diagram kita, data kita dimasukkan secara acak di tempat yang berbeda.

02:15.830 --> 02:26.180
Jika kita kembali ke contoh pengguna kita, kita melihat bahwa pasti tidak ada urutan ketika kita mengambil semua nilai

02:26.180 --> 02:27.420
suatu objek.

02:27.770 --> 02:35.390
Kita mulai dengan katakanlah Lisa Smith yang dimasukkan kedua kemudian John Smith kemudian mungkin Sandra

02:36.020 --> 02:38.930
Dee Sam Doe terpilih terakhir.

02:38.960 --> 02:47.770
Tidak ada urutan seperti ada dengan perlombaan tetapi ada beberapa versi tabel hash seperti peta dan javascript

02:47.860 --> 02:56.050
yang mempertahankan urutan penyisipan ini sehingga ketika kita melakukan perulangan melalui item dalam suatu objek kita

02:56.590 --> 03:04.670
memiliki set urutan yang dipelihara ini adalah fitur nother yang sangat mirip untuk memetakan.

03:04.740 --> 03:10.050
Satu-satunya perbedaan adalah ia hanya menyimpan kunci tanpa nilai.

03:10.050 --> 03:17.670
Jadi, Anda lihat di sini setiap bahasa seperti yang kami sebutkan hadir dengan versi struktur data yang sudah dibuat sebelumnya.

03:17.940 --> 03:21.270
Tetapi pada akhirnya mereka semua adalah tabel hash.

03:21.270 --> 03:28.920
Tetapi untuk benar-benar memahami bagaimana tabel hash bekerja saya pikir kita harus membangun satu di video berikutnya kita akan melakukan

03:29.090 --> 03:30.000
hal itu.
