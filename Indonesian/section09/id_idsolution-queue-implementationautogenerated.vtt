WEBVTT

00:01.630 --> 00:08.320
Mari kita terapkan dua struktur data kita, hal pertama yang akan kita lakukan adalah

00:08.350 --> 00:15.300
mengintip yang bagus dan sederhana yang hanya memberi tahu kita apa item pertama dalam antrian kita.

00:15.340 --> 00:28.020
Jadi ini yang pertama adalah di mana kita ingin mengintip ke dalam jika saya menjalankan isyarat saya mengintip saya harus mendapatkan.

00:28.340 --> 00:36.560
Tidak karena sementara sama sekali tidak ada apa-apa di antrian kami.

00:36.810 --> 00:37.980
Saya tidak yakin bagaimana cara mengucapkannya.

00:37.980 --> 00:40.670
Ayo pergi denganmu di sana.

00:40.890 --> 00:47.070
Kami ingin menambah daftar tunggu kami lagi mirip dengan apa yang kami lakukan dengan tumpukan.

00:47.070 --> 00:53.790
Kita akan membuat simpul baru dan kita akan instantiate note baru ini dengan sebuah nilai.

00:53.790 --> 00:55.960
Ingat kita memiliki kelas di sini.

00:57.700 --> 01:04.330
Dan nilai ini akan ditambahkan ke node yang memiliki nilai ini dan titik ini selanjutnya.

01:04.620 --> 01:14.130
Kami kemudian ingin memeriksa dan mengatakan hei jika DOD ini dipanggil ke nol.

01:14.160 --> 01:16.970
Itu berarti tidak ada apa-apa di antrian kami.

01:17.430 --> 01:28.930
Maka katakan saja hal ini terlebih dahulu akan sama dengan simpul baru dan sama dengan titik ini terakhir karena hanya ada

01:28.940 --> 01:32.040
satu simpul dalam daftar kami.

01:32.050 --> 01:38.410
Ini sangat mirip dengan apa yang kami terapkan di tumpukan.

01:38.510 --> 01:50.120
Kalau tidak, kita dapat mengatakan bahwa ini tidak dapat berlangsung dot selanjutnya.

01:50.130 --> 01:53.200
Jadi itu adalah apa pun yang ada di baris paling akhir.

01:53.520 --> 01:59.860
Dan apa pun nilai berikutnya adalah yang awalnya apa pun yang terakhir menunjukkan tidak

01:59.970 --> 02:07.880
Tetapi kami ingin memperbarui itu untuk mengatakan kali ini daripada Point No Point maka Anda perhatikan sebagai baris terakhir.

02:08.550 --> 02:19.010
Dan kami ingin memperbarui yang dilakukan dua terakhir ini sekarang sama dengan simpul baru sehingga apa pun yang terakhir

02:19.010 --> 02:25.490
sejalan sekarang menunjuk ke simpul baru dan simpul baru sekarang terakhir

02:25.730 --> 02:38.640
yang akan memastikan bahwa ini menunjukkan terakhir tidak ada akhirnya kita bisa lupa menambah panjangnya dengan 1 dan kemudian kita cukup mengembalikan struktur

02:38.930 --> 02:40.390
data kita.

02:40.470 --> 02:41.640
Jadi mari kita lihat.

02:41.640 --> 02:45.270
Kami ingin membuat garis ini.

02:45.370 --> 02:52.840
T Jadi yang akan kita lakukan adalah mengatakan kita ingin memberi isyarat sukacita.

02:53.090 --> 02:57.520
Bahkan seperti catatan pertama Ron, aku senang dengan yang berikutnya.

02:57.740 --> 03:02.620
Dan simpul terakhir adalah lagi Sukacita dengan no berikutnya dan panjang satu.

03:02.630 --> 03:03.820
Sejauh ini baik.

03:04.010 --> 03:08.130
Bagaimana jika Matt datang dan mengantre juga.

03:08.340 --> 03:13.010
Kami Matt kami sekarang memiliki catatan pertama yaitu sukacita dan simpul terakhir.

03:13.070 --> 03:14.020
Itu adalah Matt.

03:14.090 --> 03:21.210
Dan Anda dapat melihat di sini bahwa nada sukacita pertama menunjuk ke simpul berikutnya yang tidak.

03:21.340 --> 03:23.360
Baiklah mari kita tambahkan beberapa lagi akan

03:26.050 --> 03:27.910
menambahkan Pawel yang baru saja mengantri.

03:28.040 --> 03:32.220
Dan akhirnya menyimpulkan sedikit terlambat tapi dia juga mengantre.

03:32.310 --> 03:36.700
Jika saya klik Jalankan dengan sempurna, catatan terakhir kami adalah sumir.

03:36.760 --> 03:45.480
Kami memiliki lentil untuk dan kami memiliki simpul bergabung yang merupakan item pertama dalam antrian kami. Sekarang katakanlah kita membuka pintu

03:45.480 --> 03:48.510
dan kita mulai membiarkan orang masuk.

03:48.600 --> 03:55.430
Kami ingin mengeluarkan daftar ini dan pergi dari yang pertama pertama masuk pertama keluar sampai

03:56.480 --> 04:03.740
akhir sekali lagi sangat mirip dengan tumpukan kecuali bahwa kami mengambil simpul dari awal bukan itu.

04:03.750 --> 04:13.520
Jadi kita pertama-tama akan mengatakan jika tidak ada ini terlebih dahulu jika tidak ada item pertama kita juga dapat memeriksa Leontine jika

04:13.520 --> 04:14.810
kita mau.

04:14.810 --> 04:17.330
Jadi daftarnya kosong.

04:17.330 --> 04:20.010
Dalam hal itu hanya mengembalikan no.

04:20.480 --> 04:26.270
Dan dengan daftar yang saya maksud adalah antrian jika antrian kosong lalu mengembalikan no.

04:26.390 --> 04:33.950
Kami juga ingin memeriksa apakah ini adalah simpul terakhir dalam antrian kami sehingga kami dapat

04:33.950 --> 04:44.120
melakukan sesuatu yang mirip dengan mengapa kami tidak membujuk kami dapat mengatakan jika ada mulai pertama sama dengan ini lagi lagi kami

04:44.130 --> 04:54.160
hanya dapat memeriksa beberapa tahun dengan baik jika kami ingin tetapi untuk sekarang ini akan baik-baik saja jika itu yang saya

04:54.880 --> 05:05.590
inginkan titik ini terakhir sama dengan Knol ingat pastikan sekarang poin terakhir untuk semua dan terlepas begitu kita dequeue kita ingin mengatakan ini.

05:05.800 --> 05:16.950
Pertama sama dengan titik ini, titik pertama berikutnya adalah siapa pun yang pertama sekarang karena kita akan menghapus sukacita,

05:17.280 --> 05:24.490
kita ingin siapa yang pernah bahagia, yang menjadi prioritas utama sekarang.

05:25.380 --> 05:35.090
Maka kita cukup mengatakan ini minus minus minus untuk mengurangi panjangnya dan kita bisa kembali.

05:35.320 --> 05:40.310
Jika saya menjalankan ini dengan baik, itu adalah hal yang sama karena kami belum menjalankannya di sini.

05:40.450 --> 05:42.060
Jadi mari kita lanjutkan dan lakukan itu.

05:42.580 --> 05:52.710
Mari kita pertama-tama jalankan isyarat titik mengintip saya untuk melihat siapa yang harus keluar dari antrian dan itu adalah sukacita.

05:52.720 --> 06:03.110
Jadi jika saya melakukan dequeue Q Dot saya dan saya klik run kita melihat bahwa sekarang Matt adalah yang pertama di baris.

06:03.110 --> 06:08.900
Sukacita telah dihapus dan lenth adalah tiga dan satu hal untuk ditunjukkan di sini.

06:09.090 --> 06:19.500
Begitu kita menjalankan dequeue di sini, kita benar-benar kehilangan simpul sukacita dari ingatan kita karena kita tidak memiliki referensi lagi

06:19.590 --> 06:20.660
untuk itu.

06:20.670 --> 06:27.420
Tidak ada yang menunjuk ke ruang memori dan Javascript cara kerjanya akan mengumpulkan

06:27.750 --> 06:33.930
sampah dan menghapus sukacita jika kita ingin memegang pointer ke sukacita.

06:33.970 --> 06:36.490
Lalu kita bisa mengatakan

06:39.240 --> 06:51.080
Konst memegang pointer dan mengatakan titik ini terlebih dahulu sehingga sebelum kita memperbarui siapa pun yang pertama kita dapat referensi dengan variabel ini sehingga kita

06:51.080 --> 06:57.550
bisa berpotensi jika kita masih ingin menggunakan sukacita misalnya dalam aplikasi daftar tunggu mungkin

06:57.590 --> 07:00.950
kita masih ingin melakukan sesuatu kepada pengguna.

07:01.160 --> 07:07.130
Kita dapat melakukan ini dan masih memiliki akses ke simpul bergabung.

07:07.130 --> 07:08.350
Baiklah mari kita selesaikan kemiringannya.

07:08.370 --> 07:14.810
Mari kita beri tahu semua orang dari sini jika saya melakukannya dan mari kita kembali ke sini.

07:14.810 --> 07:16.330
Jadi kita melihat apa yang terjadi.

07:16.850 --> 07:22.960
Jika saya menjalankan sekarang Pavel adalah yang pertama dalam garis dan sumir adalah yang terakhir dalam baris.

07:22.970 --> 07:32.400
Jika saya mengklik atau jika saya memiliki dequeue lagi dan saya klik Run sumir adalah orang terakhir dalam daftar.

07:32.400 --> 07:34.810
Tapi akhirnya kita bisa membiarkannya masuk juga.

07:35.690 --> 07:36.950
Itu dia.

07:37.010 --> 07:45.640
Sekarang kami memiliki kubus kosong dan kami baru saja mengimplementasikan struktur data Q kami dengan baik.

07:45.660 --> 07:47.190
Semoga Anda bersenang-senang.

07:47.190 --> 07:48.730
Saya akan lihat di video berikutnya.

07:49.040 --> 07:49.270
Babai.
