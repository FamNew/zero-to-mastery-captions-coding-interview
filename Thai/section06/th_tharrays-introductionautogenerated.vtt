WEBVTT

00:01.050 --> 00:20.070
ในที่สุดก็ถึงเวลาที่จะเรียนรู้โครงสร้างข้อมูลแรกของเราแล้วและเป็นไปได้ว่าคุณคุ้นเคยกับอาเรย์อาร์เรย์ซึ่งบางครั้งเรียกว่าลิซท์จัดเรียงรายการตามลำดับ

00:20.070 --> 00:23.280
นั่นหมายถึงหนึ่งในความทรงจำ

00:23.280 --> 00:35.670
อย่างที่เรามีตรงนี้เรามีข้อมูลบางอย่างที่ดัชนี 0 สมมุติว่าน้ำแล้วหลังจากดัชนี 1 เรามีอย่างอื่น

00:35.670 --> 00:43.290
บางที Apple

00:43.290 --> 00:47.520
อาจเป็นรายชื่อร้านขายของชำในหน่วยความจำคอมพิวเตอร์ของเราเพราะจะจำได้ว่าแรมของเราใหญ่กว่าช่องเสียบเพียงเจ็ดช่อง

00:48.360 --> 00:53.710
และอาร์เรย์น่าจะเป็นโครงสร้างข้อมูลที่ง่ายและใช้กันอย่างแพร่หลายที่สุด

00:53.800 --> 01:04.240
และโชคดีสำหรับเราที่เราเริ่มต้นด้วยสิ่งนี้เพราะอาร์เรย์มีกฎจำนวนน้อยที่สุดและเพราะมันถูกเก็บไว้ในหน่วยความจำต่อเนื่อง

01:04.240 --> 01:07.720
พวกเขายังมีรอยขนาดเล็กที่สุดของโครงสร้างข้อมูลใด ๆ

01:08.710 --> 01:15.560
ดังนั้นหากสิ่งที่คุณต้องการคือการจัดเก็บข้อมูลบางส่วนและทำซ้ำมากกว่านั้นทีละขั้นตอน

01:15.790 --> 01:30.110
อาร์เรย์เป็นตัวเลือกที่ดีที่สุดโดยเฉพาะอย่างยิ่งถ้าคุณรู้ดัชนีที่อยู่ทางด้านซ้ายของรายการที่คุณจัดเก็บและเพียงแค่มองอย่างรวดเร็วเราจะอธิบายรายละเอียดเพิ่มเติมในวิดีโอต่อไป

01:30.990 --> 01:37.190
แต่ค้นหาหรือเข้าถึงด้วยการลบ Constantine หนึ่ง

01:37.200 --> 01:39.420
มันเร็วมากสุด ๆ

01:39.420 --> 01:44.090
การกระทำหรือวิธีการอื่น ๆ ที่เรากำลังจะข้ามไปดังนั้นการผลักก็รวดเร็วเช่นกัน

01:44.100 --> 01:49.830
แต่แทรกแล้วและลบเป็น O ของ N หรือเวลาเชิงเส้น

01:49.950 --> 01:56.510
แต่เพื่อแสดงให้เห็นถึงอาร์เรย์ลองใช้รหัสเพื่อแสดงตัวอย่างให้คุณดู

01:56.770 --> 01:58.900
เรามีสนามเด็กเล่นเล็ก ๆ ตรงนี้

01:59.230 --> 02:01.710
และอีกครั้งคุณสามารถใช้ภาษาที่คุณต้องการ

02:01.750 --> 02:05.540
ฉันจะแสดงให้เห็นถึงสิ่งนี้ใน javascript

02:05.590 --> 02:10.140
เราสามารถสร้างอาร์เรย์ที่เรียบง่าย

02:10.230 --> 02:13.560
ลองเรียกมันว่าสตริงและอาร์เรย์นี้

02:13.560 --> 02:24.220
การใช้สัญกรณ์วงเล็บเหลี่ยมอีกครั้งจะมี B แล้ว C และ D

02:25.100 --> 02:29.860
และเราเพิ่งสร้างอาร์เรย์ในจาวาสคริปต์

02:29.900 --> 02:36.080
ตอนนี้ดูที่นี่และจากสิ่งที่เราได้เรียนรู้จนถึงตอนนี้เราสามารถตั้งสมมติฐานได้สองข้อ

02:36.760 --> 02:42.900
ตัวอย่างเช่นการจัดเก็บจดหมายตัวอักษรตัวอักษร B ตัวอักษร C ตัวอักษร D

02:42.910 --> 02:47.230
นั่นคือหนึ่งสองสามสี่สี่รายการ

02:47.230 --> 03:00.030
หากเราอยู่ในระบบ 32 บิตนั่นคือเรามีชั้นวางของ 1 2 3 4 สำหรับเก็บจดหมาย A ในศูนย์และอีกชั้น

03:00.050 --> 03:11.010
ถ้าเป็นอย่างนั้นเราแค่ขยับสี่ครั้งเพื่อให้ได้สี่รายการและแต่ละรายการก็เก็บสี่ชั้นในหน่วยความจำของเรา

03:11.050 --> 03:24.000
นั่นหมายความว่าเราใช้พื้นที่เก็บข้อมูล 20 หรือ 16 ไบต์ถ้าเราจำได้ในตัวอย่างเล็ก ๆ ของเราที่นี่ด้วยระบบ 32

03:24.480 --> 03:34.490
บิตเรามี 1 2 3 4 ชั้นวางเพื่อเก็บหมายเลขนี้อีกครั้ง

03:34.670 --> 03:40.670
นี่เป็นเวอร์ชั่นง่าย ๆ ของการดูมัน แต่ฉันหวังว่าคุณจะเห็นสิ่งที่เรากำลังทำอยู่ที่นี่เราเพียงแค่เก็บ

03:40.670 --> 03:48.550
b c d ตามลำดับในหน่วยความจำ Random Access Memory

03:48.770 --> 03:53.260
ดังนั้นคอมพิวเตอร์จึงรู้ว่าจะหาสิ่งของเหล่านี้ได้ที่ไหน

03:53.280 --> 04:05.570
ดังนั้นเมื่อฉันทำสายให้ฉันบอกคอมพิวเตอร์เฮ้ไปที่ array เรียกว่า strength คุณควรรู้ว่ามันอยู่ที่ไหน

04:05.570 --> 04:12.400
เพราะใต้ฝากระโปรงคุณเก็บไว้ให้ฉันแล้วหยิบของชิ้นที่สาม

04:12.400 --> 04:16.570
โปรดจำไว้ว่าดัชนีเป็น 0 1 2

04:16.670 --> 04:23.580
ดังนั้นหยิบไอเท็มที่สามจากที่เก็บอาเรย์ไว้ในหน่วยความจำของคุณ

04:23.690 --> 04:33.360
และถ้าฉันทำสิ่งนี้ฉันจะได้เห็นคอมพิวเตอร์กำลังจะคว้าข้อมูลนั้นมาให้ฉันเพราะที่นี่มันเก็บไว้ให้ฉัน

04:33.400 --> 04:36.170
และที่นี่ก็คว้าไว้เพื่อฉัน

04:36.190 --> 04:41.520
เอาล่ะลองทำอีกสองสามอย่างกับอาเรย์และดูว่าข้อดีข้อเสียคืออะไร

04:42.830 --> 04:47.180
ในจาวาสคริปต์เรามีวิธีการสองสามอย่างที่เราสามารถใช้กับการแข่งขัน

04:48.150 --> 04:54.510
หนึ่งคือโปลิชที่ช่วยให้เราสามารถเพิ่มบางอย่างในตอนท้ายของอาร์เรย์

04:54.810 --> 05:01.580
ดังนั้นสตริงดอทจะผลัก

05:01.830 --> 05:09.830
และถ้าเราเพียงแค่เอาสิ่งนี้ออกมาแล้วเราจะได้คอนโซลของ Daut log of strength

05:09.950 --> 05:21.100
หากฉันเรียกใช้งานนี้ฉันจะได้รับ B C D E การดำเนินการพุชของสตริงนี้เพราะมันเพิ่งจะเพิ่มที่ท้ายอาร์เรย์

05:22.860 --> 05:25.780
เป็นการดำเนินการ 0 1

05:28.000 --> 05:31.310
สิ่งที่เราทำคือการเพิ่มสิ่งที่เราต้องการในตอนท้าย

05:31.330 --> 05:33.310
เราไม่ได้ห่วงอะไรเลย

05:33.310 --> 05:37.860
หวังว่านั่นจะเป็นเหตุผลว่าทำไมถึงเป็นเช่นนั้นสะดวก

05:38.260 --> 05:39.870
เรามีวิธีอื่นอีกไหม

05:40.270 --> 05:55.550
นอกจากนี้เรายังสามารถใช้ป๊อปและป๊อปตรงข้ามของป๊อปอัปจะหมายถึงการลบรายการสุดท้ายจากสตริงจากอาร์เรย์

05:55.550 --> 05:58.820
ถ้าฉันคลิกที่นี่คุณจะเห็นว่าอีเมลถูกย้ายแล้ว

05:59.030 --> 06:12.410
ถ้าฉันทำสตริงปรากฏขึ้นอีกครั้งและกดรอนเราจะเห็นว่าในเวลานี้เราได้เพิ่มเขาแล้วเราก็ลบออก

06:12.640 --> 06:16.930
จากนั้นในที่สุดก็ต้องเหลือ B และ C

06:17.080 --> 06:22.190
คุณคิดอย่างไรกับความซับซ้อนของเวลาในการดำเนินการนี้

06:22.390 --> 06:26.770
อีกครั้งคือ 0 0 1 เพราะเราไม่ได้วนลูปอะไร

06:26.770 --> 06:29.440
เราเพิ่งลบรายการสุดท้ายที่ฉันจำได้

06:29.440 --> 06:34.110
คอมพิวเตอร์ของเรารู้ว่ารายการสุดท้ายถูกเก็บไว้ที่ไหน

06:35.140 --> 06:40.130
เราแค่บอกไปที่ดัชนีของสมมติว่า 7

06:40.130 --> 06:42.810
รายการสุดท้ายและลบขนมปัง

06:44.920 --> 06:46.920
เรามาทำสิ่งที่น่าสนใจตอนนี้

06:48.020 --> 06:52.200
ถ้าเราต้องการเพิ่มรายการที่จุดเริ่มต้นของอาร์เรย์

06:52.340 --> 07:03.990
บางทีในที่นี้เราต้องการเพิ่มตัวอักษร x เรามีบางอย่างที่เรียกว่า shift ใน javascript

07:03.990 --> 07:07.040
และขึ้นอยู่กับภาษาของคุณคุณอาจจะมีบางสิ่งที่แตกต่าง

07:07.170 --> 07:12.540
แต่ความคิดที่นี่คือเราเพียงแค่ทำจุดสตริงในการเปลี่ยนแปลง

07:12.760 --> 07:20.820
และตามวิธีที่คุณเห็นที่นี่ว่า REPL ที่ I-T ให้พารามิเตอร์ที่คุณสามารถป้อนได้อย่างไร

07:20.950 --> 07:23.310
ในกรณีนี้มันแค่บอกว่ารายการอะไร

07:23.350 --> 07:24.140
ซึ่งเป็นสตริง

07:24.140 --> 07:25.420
ฉันควรจะเข้า

07:25.420 --> 07:31.690
ในกรณีของเราฉันจะบอกว่าฉันต้องการเลื่อน x ซึ่งบอกว่าเพียงแค่เพิ่ม X ที่จุดเริ่มต้นของอาร์เรย์

07:32.110 --> 07:38.500
ถ้าฉันคลิกวิ่งที่นี่เราจะเห็นว่ามีการเพิ่ม x ในตอนต้นของการชุมนุม

07:38.500 --> 07:41.970
คุณคิดอย่างไรกับความซับซ้อนของเวลาในการดำเนินการนี้

07:42.190 --> 07:49.780
และโดยวิธีที่เราผ่านโครงสร้างข้อมูลและเนื่องจากเรารู้ว่า

07:49.780 --> 07:57.800
Big-O สัญกรณ์อยู่ในนั้นค่อนข้างเจ๋งที่เราสามารถคิดเกี่ยวกับรหัสเกินเพียงโอ้ฉันแค่ทำสิ่งนี้เราสามารถคิดอย่างลึกซึ้งเกี่ยวกับสิ่งที่เกิดขึ้นภายใต้ กระโปรงหน้ารถ

07:58.150 --> 08:02.090
เหตุใดการดำเนินการนี้อาจนานกว่าการดำเนินการนี้

08:02.110 --> 08:14.490
ฉันพบว่ามีเสน่ห์และเมื่อฉันเข้าใจจุดนี้เป็นครั้งแรกมันทำให้ฉันเป็นวิศวกรที่ดีขึ้นและฉันหวังว่าคุณจะเริ่มได้รับช่วงเวลาที่ดีสำหรับคุณเช่นกัน

08:14.650 --> 08:18.070
ตอนนี้เรากำลังทำอะไรอยู่ที่นี่

08:18.070 --> 08:30.500
จำไว้ว่าสตริงจะถูกเก็บไว้เป็นหลักหากฉันย้ายสิ่งนี้ไปยังบรรทัดใหม่คอมพิวเตอร์รู้ว่านี่เป็นศูนย์

08:30.550 --> 08:35.790
นี่คือดัชนีของ 1

08:35.790 --> 08:46.910
นี่คือดัชนีสองและนี่คือดัชนีสามเมื่อฉันเพิ่ม X ด้วยการเปลี่ยนฉันทั้งหมดทันทีเพิ่ม X

08:47.000 --> 08:51.400
ลงในอาร์เรย์ของเรา

08:51.600 --> 09:00.810
แต่ตอนนี้เราต้องเปลี่ยนตัวเลขเหล่านี้เพราะดัชนียังคงเป็นเช่นนี้

09:01.050 --> 09:15.990
แต่คราวนี้เราต้องบอกว่าตกลง 0 ตอนนี้ 8 x A ตอนนี้ 1 B ตอนนี้ 2 และ C คือดัชนี 3

09:16.000 --> 09:19.850
และ D นั่นคือดัชนีสำหรับ

09:20.090 --> 09:50.890
และเพียงแค่ฉันทำสิ่งนี้คุณอาจเห็นบางสิ่งบางอย่างที่เราทำซ้ำวนซ้ำทุกอย่างและกำหนดดัชนีใหม่และฉันทำหนึ่งสองสามสี่ห้าการเคลื่อนไหวหรือการปฏิบัติการห้าครั้งเพื่อปรับดัชนีใหม่ และขึ้นอยู่กับขนาดของอาเรย์นั่นคือระยะเวลาที่ใช้ในการดำเนินการที่เรากำลังวนซ้ำ

09:50.970 --> 10:01.630
ดังนั้นเรารู้ทันทีว่าการเพิ่มอาจไม่ใช่โครงสร้างข้อมูลที่ดีที่สุดสำหรับการเพิ่มรายการในตอนต้นของอาร์เรย์

10:01.650 --> 10:08.530
จะเกิดอะไรขึ้นถ้าเราต้องการเพิ่มบางอย่างที่อยู่ตรงกลางของอาร์เรย์เพื่อให้เราสามารถใช้วิธีการประกบกันที่นี่

10:08.580 --> 10:20.260
ขอผมเลื่อนลงมาหน่อยและด้วยรอยต่อฉันสามารถพูดว่าจุดต่อเชือกและอีกครั้งฉันได้รับคำใบ้ว่าฉันสามารถทำ

10:20.270 --> 10:22.330
ที่แรกก็คือหมายเลขเริ่มต้น

10:22.340 --> 10:25.130
ฉันอยากเริ่มดัชนี 2

10:25.540 --> 10:28.050
ฉันจำได้ว่าเรามีอาร์เรย์นี้ที่นี่

10:28.100 --> 10:29.690
X A B C.

10:29.690 --> 10:37.890
ดังนั้นเราเริ่มที่ B และพารามิเตอร์ตัวที่สองคือจำนวนลบ

10:38.070 --> 10:42.810
เราต้องการลบอะไรหรือเราต้องการลบหลายสิ่งจากดัชนีนี้

10:42.930 --> 10:45.560
ในกรณีของเราเราไม่ต้องการลบสิ่งที่เราต้องการเพิ่ม

10:45.690 --> 10:46.930
ดังนั้นฉันจะบอกว่าศูนย์

10:47.070 --> 10:49.200
แล้วรายการที่เราต้องการเพิ่ม

10:49.200 --> 10:57.990
งั้นลองเพิ่มสตริงที่บอกว่าเอเลี่ยนและเอา X นี้ออกจากอาร์เรย์เดิมของเรา

10:59.770 --> 11:00.340
มันดีกว่า.

11:00.370 --> 11:03.040
เรามาที่ไบรอันกันเถอะ

11:03.070 --> 11:17.020
เรามี X เพราะเราได้เปลี่ยนเอเลี่ยน b c แล้ว splice บอกให้เราไปที่ดัชนีของ 2 0 1 2

11:17.020 --> 11:23.490
โดยที่ B นั้นเริ่มแรกและเพิ่มเอเลี่ยนแทน B และเปลี่ยนสิ่งต่าง

11:23.890 --> 11:35.300
ดังนั้นสิ่งที่เราทำที่นี่คือถ้าเรากลับไปที่ตัวอย่างของเราเรามี X ในอาร์เรย์ของเรา

11:36.860 --> 11:48.940
และเราเปลี่ยนดัชนี X เหล่านี้และพวกมันยังคงเหมือนเดิม แต่เราเลื่อน B ไปแล้วพูดและตรงนี้ฉันต้องการเพิ่ม

11:49.030 --> 11:59.060
Ilian และตอนนี้เราต้องข้ามทุกอย่างแล้วบอกว่า 3:58 เอเลี่ยน

11:59.190 --> 12:05.610
เราต้องการสาม forby สี่สำหรับ C และห้าสำหรับ D

12:05.640 --> 12:07.310
แล้วโอใหญ่ของเราตรงนี้คืออะไร

12:07.410 --> 12:13.310
และเราไม่ต้องการสิ่งนี้มาได้ดี O ใหญ่ของเราในกรณีนี้เราทำ

12:13.320 --> 12:19.960
ครึ่งหนึ่งของการดำเนินการเพราะเราเปลี่ยนอาร์เรย์ครึ่งหนึ่งที่เราวนซ้ำผ่านอาร์เรย์ครึ่งหนึ่ง

12:20.040 --> 12:24.890
มันจะเป็น 0 ของและหารด้วยสอง

12:25.020 --> 12:33.250
แต่จำกฎของเราเมื่อมันมาถึงใหญ่ -O เราเอาค่าคงที่และลดความซับซ้อนที่จะเพียงแค่โทรแล้ว

12:33.390 --> 12:36.870
กรณีที่แย่ที่สุดมันจะเป็นการผ่าตัด

12:37.730 --> 12:39.960
เอาล่ะฉันจะทิ้งเรื่องนี้ให้คุณ

12:39.960 --> 12:48.910
มันสามารถเล่นไปรอบ ๆ และลองวิธีการต่าง ๆ

12:49.140 --> 12:57.830
ในการแข่งขัน แต่ฉันหวังว่าคุณจะเข้าใจวิธีการทำงานและวิธีการที่มีบางสิ่งที่ดีที่เราสามารถทำได้เช่นการเข้าถึงอาร์เรย์ที่เป็นของหนึ่ง

12:57.950 --> 13:05.960
เพราะมันเร็วมากในกุ้งเรารู้ว่ามันอยู่ในความทรงจำและเราสามารถกดและป๊อป

13:06.050 --> 13:12.860
แต่เมื่อพูดถึงการขยับหรือการประกบหรือแม้กระทั่งการลบเพราะด้วยการประกบกันเราก็สามารถทำการลบได้

13:12.860 --> 13:14.620
นั่นจะเป็นงานของเรา

13:15.050 --> 13:23.880
และถ้าเรากลับไปที่ชาร์ตของเราซึ่งตอนนี้เรามีความเข้าใจที่ดีขึ้นว่าเหตุใดการค้นหาอาร์เรย์จึงรวดเร็วมาก

13:23.880 --> 13:25.070
เรารู้ว่าพวกเขาอยู่ที่ไหน

13:25.140 --> 13:36.850
เรารู้ว่าทำไมการผลักดันแพ็ดในตอนท้ายของอาเรย์นั้นเร็วมาก แต่ทำไมการแทรกและลบอาจไม่ดีที่สุดหรือเร็วที่สุดเมื่อมาแข่ง

13:37.760 --> 13:40.250
แต่นี่คือสิ่งที่

13:40.300 --> 13:50.080
ที่จริงแล้วมีสองประเภทของอาร์เรย์และในวิดีโอหน้าเราจะพูดถึงสองประเภทนี้ที่ฉันจะเห็นในนั้น
