WEBVTT

00:00.910 --> 00:07.810
ยินดีต้อนรับกลับมาตามที่ฉันพูดถึงในวิดีโอก่อนหน้านี้ว่ามีการแข่งขันสองประเภท

00:07.830 --> 00:13.820
หนึ่งเรียกว่าคงที่และการแข่งขันแบบไดนามิกอื่น ๆ

00:13.830 --> 00:16.940
ทีนี้ความแตกต่างระหว่างสองสิ่งนี้คืออะไร

00:16.940 --> 00:30.940
ข้อ จำกัด หนึ่งเดียวของสแตติกหรือการแข่งขันก็คือพวกมันถูกกำหนดขนาดไว้ซึ่งหมายความว่าคุณต้องระบุจำนวนองค์ประกอบที่อาเรย์ของคุณจะถือไว้ล่วงหน้า

00:31.810 --> 00:53.390
ดังนั้นในกรณีนี้ถ้าเป็นอาร์เรย์คงที่ฉันจะบอกว่าสร้างอาร์เรย์เจ็ดรายการที่รู้ล่วงหน้าว่าในรายการขายของชำของฉันฉันจะมีเพียงเจ็ดรายการเท่านั้นเพราะอาร์เรย์ถูกจัดสรรในบล็อกหน่วยความจำที่อยู่ติดกันเมื่อสร้างขึ้น .

00:53.720 --> 01:01.810
ไม่มีการรับประกันว่าหลังจากที่เราได้จัดสรรหน่วยความจำ 7

01:02.680 --> 01:10.830
ชั้นที่คุณสามารถเพิ่มสิ่งต่าง ๆ โดยเฉพาะอย่างยิ่งในการที่เราจะแก้ปัญหานี้ด้วยอาร์เรย์คงที่ที่เราต้องบอกล่วงหน้า

01:10.910 --> 01:26.690
เฮ้ฉันต้องการเพียง 7 ชั้นของหน่วยความจำที่มีการแข่งขันแบบไดนามิกและอาร์เรย์แบบไดนามิกช่วยให้เราสามารถคัดลอกและสร้างอาร์เรย์ที่สถานที่ใหม่ซึ่งมีหน่วยความจำมากขึ้น

01:26.690 --> 01:36.820
ถ้าเราต้องการหน่วยความจำเพิ่มขึ้นตัวอย่างเช่นกับอาร์เรย์คงที่ของเราถ้าเรารู้ว่าเราลืมรายการอื่นในรายการของเราและเราต้องการ 8 รายการ

01:37.050 --> 01:42.080
สิ่งที่เกิดขึ้นคือเราคัดลอกอาร์เรย์ทั้งหมดนี้

01:42.180 --> 01:53.380
เราจัดสรรหน่วยความจำ 14 บล็อกและวางรายการนี้บวกรายการที่แปดลงในตำแหน่งใหม่นั้น

01:53.460 --> 02:00.130
ให้ฉันแสดงวิธีการทำงานกับรหัสที่คุณเห็นในภาษาเช่น C ++

02:00.180 --> 02:08.130
ขอผมเลื่อนลงมาตรงนี้ใน C ++ ที่มีอาร์เรย์คงที่เพื่อสร้างอาร์เรย์

02:08.130 --> 02:09.770
คุณทำอะไรแบบนี้

02:11.360 --> 02:18.460
คุณจะพูดว่า int

02:18.560 --> 02:24.900
และนี่บอกว่าฉันต้องการอาร์เรย์ใหม่ที่มีช่องว่าง 20 รายการ

02:26.690 --> 02:28.180
หรือเราสามารถทำอะไรเช่น

02:28.240 --> 02:33.140
ภายในข

02:33.290 --> 02:40.750
จากนั้นเติมอาร์เรย์ของห้ารายการด้วยจำนวนเต็ม 1 2 3 4 5

02:40.850 --> 02:42.830
นั่นคือสิ่งที่มันหมายถึงตัวเลข

02:43.770 --> 03:00.560
และเนื่องจากสิ่งนี้และเพราะนี่เป็นอาร์เรย์แบบสแตติกเพื่อให้เราเพิ่มรายการหกรายการที่นี่เราจะต้องคัดลอกอาร์เรย์ทั้งหมดนี้และย้ายไปยังพื้นที่หน่วยความจำที่แตกต่างกันโดยสิ้นเชิง

03:01.220 --> 03:03.680
เพื่อที่จะสร้างพื้นที่สำหรับมัน

03:03.830 --> 03:18.640
ตอนนี้โชคดีสำหรับเราเมื่อฉันแสดงให้คุณเห็นด้วยจาวาสคริปต์วิธีการทำสิ่งที่ดีเราไม่ต้องกังวลเกี่ยวกับมันเราทำในตัวอย่างจาวาสคริปต์เราไม่เคยจัดสรรหน่วยความจำจริง ใน Java

03:18.700 --> 03:27.850
พวกเขาทำงานเหมือนอาร์เรย์แบบไดนามิก

03:28.060 --> 03:35.070
พวกเขาจัดสรรหน่วยความจำโดยอัตโนมัติตามขนาดที่เพิ่มขึ้นของอาร์เรย์

03:35.500 --> 03:40.470
ดังนั้นทันทีที่คุณกำลังคิดว่าอาร์เรย์แบบไดนามิกนั้นง่ายกว่า

03:40.480 --> 03:46.800
ฉันไม่ต้องคิดเกี่ยวกับหน่วยความจำเนื่องจากการปรับขนาดอัตโนมัติและการอภิปรายเกี่ยวกับการจัดการหน่วยความจำซึ่งภาษาระดับต่ำเช่น C ++

03:46.800 --> 03:51.570
อนุญาต

03:51.750 --> 03:59.790
ในขณะที่ภาษาระดับสูงขึ้นเช่นจาวาสคริปต์ทำให้เราไม่ต้องนึกถึงหน่วยความจำและให้เครื่องดูแลคุณ

03:59.790 --> 04:07.970
มีบางครั้งที่คุณอาจต้องการจัดการหน่วยความจำของคุณและเวลาที่คุณไม่ต้องการตามความต้องการของคุณ

04:08.280 --> 04:13.950
เห็นได้ชัดว่าการมีการควบคุมหน่วยความจำมากขึ้นช่วยให้คุณสามารถปรับแต่งสิ่งต่าง ๆ และทำให้สิ่งต่าง ๆ เร็วขึ้นและนั่นเป็นสาเหตุที่ภาษาอย่าง

04:13.950 --> 04:18.420
C ++ สามารถเร็วกว่าภาษาที่สูงกว่ามาก

04:18.420 --> 04:23.820
ภาษาระดับสูงขึ้นเช่นจาวาสคริปต์ แต่เราไม่จำเป็นต้องทำเช่นนั้น

04:24.170 --> 04:29.230
สิ่งที่เราต้องการออกจากบทเรียนนี้คืออาร์เรย์แบบไดนามิกขยายเมื่อคุณเพิ่มองค์ประกอบเพิ่มเติม

04:29.330 --> 04:36.270
ดังนั้นคุณไม่จำเป็นต้องกำหนดขนาดล่วงหน้า แต่คุณอาจสังเกตเห็นบางสิ่งด้วยอาร์เรย์แบบไดนามิก

04:37.810 --> 04:46.660
คุณเห็นตรงนี้ว่าฉันมีจุดหนึ่งที่เหมือนกันกับคำสั่ง push ที่เราทำในบทเรียนก่อนหน้านี้อย่างไร

04:46.930 --> 04:52.670
แต่ฉันมีดาวที่นี่ที่บอกว่ามันอาจเป็น 0 สาเหตุ

04:53.030 --> 05:01.560
ถ้าเราจำอาร์เรย์ของเราและเอารายการพิเศษที่นี่ที่เราไม่ต้องการให้พูด abcd

05:01.560 --> 05:15.460
ถ้าอยู่ใต้ hoods javascript และเครื่องของเราสร้างหน่วยความจำเพียงสี่ช่วงตึกสำหรับอาร์เรย์นี้และเราเพิ่มจดหมายอีกอันไว้ใต้หมวกเพราะ

05:15.460 --> 05:23.170
เป็นอาร์เรย์แบบไดนามิก

05:23.270 --> 05:26.140
มันจะวนรอบรายการเหล่านี้

05:26.330 --> 05:31.360
คัดลอกและย้ายไปยังตำแหน่งอื่นด้วย

05:31.390 --> 05:34.310
ตอนนี้พื้นที่แปดบล็อก

05:35.200 --> 05:37.660
เพื่อให้เราสามารถเพิ่มไปที่นี่

05:39.450 --> 05:50.750
และคุณเห็นที่นี่เพราะเราทำแบบนี้ลูปการดำเนินการจะจบลงและนั่นคือสิ่งที่คุณควรคำนึงถึง

05:51.030 --> 06:03.330
เป็นการดีที่จะรู้ว่าสิ่งต่าง ๆ ทำงานอย่างไรภายใต้ประทุนและใช้เวลาส่วนใหญ่กับภาษาที่คุณใช้งานและในระหว่างการสัมภาษณ์คุณจะพูดถึงอาร์เรย์แบบไดนามิกและคุณไม่ต้องกังวลกับการจัดสรรหน่วยความจำและคิดเกี่ยวกับความเป็นไปได้ที่

06:03.660 --> 06:10.020
คุณอาจต้องคัดลอกอาร์เรย์

06:10.110 --> 06:17.400
นั่นเป็นระดับที่ต่ำมาก แต่ฉันต้องการแสดงให้คุณเห็นว่าพวกเขาทำงานอย่างไรเพื่อที่คุณจะได้มีความรู้พื้นฐานเหล่านั้นเกิดขึ้น

06:17.670 --> 06:24.180
และฉันเข้าใจว่าเมื่อพูดถึงการเพิ่มเพียงเพราะคุณเพิ่มในตอนท้ายโดยใช้คำสั่ง push คุณสามารถสรุปได้ว่ามันเป็น

06:24.180 --> 06:31.770
0 ของ 1 ส่วนใหญ่หรือเวลาคงที่

06:31.830 --> 06:37.190
แต่ทุกครั้งในขณะที่คุณอาจพบสถานการณ์ที่ มันคือเวลาเชิงเส้นทั้งหมด

06:37.300 --> 06:38.290
ฉันจะดูในวิดีโอหน้า
