WEBVTT

00:00.940 --> 00:12.100
ยินดีต้อนรับกลับมาถึงเวลาที่จะจัดเรียง morays กันเถอะคว้าฟังก์ชั่นนี้ไว้ที่ท้ายสุดเพราะหวังว่ามันจะทำงานได้ในตอนท้ายสุด

00:12.420 --> 00:19.200
และเริ่มเขียนรหัสของเรา

00:19.360 --> 00:25.090
เราจะเริ่มด้วยการกำหนดฟังก์ชั่นที่เรียกว่าการผสานการเรียงลำดับแรก

00:25.120 --> 00:38.490
มันจะใช้พารามิเตอร์ตัวแรกซึ่งเป็นอาร์เรย์แรกจากนั้นพารามิเตอร์ตัวที่สองซึ่งก็คือรองที่ฉันจะก่อนกำหนดตัวแปรบางอย่างที่เราจะใช้ตลอดทั้งฟังก์ชั่น

00:38.560 --> 00:47.760
คนแรกจะเป็นค่าคงที่ซึ่งรวมอาร์เรย์ซึ่งจะเป็นคำตอบของเรา

00:47.790 --> 00:49.910
สำหรับตอนนี้มันจะเป็นอาร์เรย์ที่ว่างเปล่า

00:51.280 --> 00:56.420
และเราอาจจะต้องตรวจสอบให้แน่ใจว่าเราได้คืนอาเรย์ที่ผสานนี้ในตอนท้าย

00:56.500 --> 01:03.160
หวังว่ามันจะใช้ได้ดีและเราสามารถเติมมันด้วยสองอาร์เรย์นี้ได้

01:03.240 --> 01:18.700
ตอนนี้ที่นี่ฉันต้องการคว้าอาเรย์หนึ่งไอเท็มเพื่อการอ้างอิงและนี่จะเป็นไอเท็มอาเรย์ตัวแรกของเรา

01:18.750 --> 01:23.090
นี่ก็แค่มีรายการศูนย์ตรงนี้

01:23.190 --> 01:29.720
และอาร์เรย์แรกของเราจากนั้นเราจะทำสิ่งเดียวกัน

01:30.300 --> 01:39.280
อาเรย์ 2 ไอเท็มที่จะคว้าหมายเลขสี่จากที่นี่

01:40.580 --> 02:02.360
ตอนนี้สิ่งแรกที่ฉันชอบทำในฟังก์ชั่นคือการตรวจสอบอินพุตบางชนิดเพื่อให้แน่ใจว่าทุกอย่างทำงานได้ฉันจะให้เวลาคุณกับฉันเพราะคุณควรมีความคิดในการตรวจสอบว่าเป็นอาร์เรย์ ไม่ว่าคุณจะมีสองพารามิเตอร์

02:03.520 --> 02:10.820
แต่อินพุตเดียวที่ฉันคิดว่าคุ้มค่ากับการตรวจสอบคือถ้าเรามีอะไรเช่นนี้

02:11.670 --> 02:15.910
ในกรณีที่อาร์เรย์ที่สองเป็นอัตราว่างเปล่า

02:16.260 --> 02:19.040
ในกรณีของเราเราสามารถคืนอัตราแรกได้

02:19.380 --> 02:24.210
เพราะในขณะที่มันถูกจัดเรียงแล้วเรายังคงรวมรังสีสองดวงเข้าด้วยกัน

02:24.570 --> 02:29.700
และนั่นก็เหมือนกันถ้าอาร์เรย์แรกนั้นว่างเปล่าเช่นกัน

02:30.660 --> 02:42.390
ดังนั้นเพื่อหลีกเลี่ยง X ให้แน่ใจว่าทำงานได้ตรวจสอบเงื่อนไขเหล่านั้นทันทีที่เราสามารถให้คำตอบและทำให้การทำงานของเรามีประสิทธิภาพ

02:42.390 --> 02:43.780
ในกรณีเหล่านั้น

02:44.010 --> 02:45.650
ดังนั้นฉันสามารถทำคำสั่ง if

02:45.810 --> 02:51.800
ฉันจะบอกว่าต้องการ lenth ถ้านั่นเท่ากับศูนย์

02:52.910 --> 02:54.790
ดังนั้นถ้าอาร์เรย์แรกว่างเปล่า

02:54.980 --> 03:14.690
เพียงแค่คืนค่าลำดับที่สองและเราสามารถทำเช่นเดียวกันสำหรับกรณีอื่น ๆ ถ้าอาร์เรย์ถึง lenth ว่างเปล่าจากนั้นเราสามารถส่งคืนอาร์เรย์แรกที่ดีและเรียบง่าย

03:14.760 --> 03:20.920
ทีนี้มาถึงหัวข้อที่ยากขึ้นซึ่งจะเกิดอะไรขึ้นถ้าทั้งสองอาร์เรย์เต็มเหมือนตอนนี้

03:22.410 --> 03:30.250
ทีนี้แค่เปลี่ยนสิ่งต่าง ๆ

03:30.550 --> 03:36.940
เพราะฉันใช้ลูปเป็นเวลาระยะหนึ่งฉันจะใช้ลูปในขณะที่ในจาวาสคริปต์และนี่ก็บอกว่าวนรอบรายการในขณะที่เงื่อนไขตรง

03:37.030 --> 03:48.520
ในกรณีของเราฉันจะบอกว่าในขณะที่มีอาร์เรย์หนึ่งรายการหรือมีอาร์เรย์ 2

03:51.360 --> 04:04.960
รายการทำอะไรบางอย่างและจำไว้ว่าตัวแปรเหล่านี้เป็นเพียงตอนนี้รายการแรกในแต่ละอาร์เรย์และโดยวิธีถ้าคุณ สงสัยว่าทำไมบางครั้งฉันถึงต้องเสียค่าใช้จ่ายบางครั้งฉันก็ใช้ LET

04:05.340 --> 04:12.680
ราคาดีหมายความว่าเมื่อฉันกำหนดตัวแปรนี้ให้กับอาร์เรย์นี้ฉันไม่สามารถแก้ไขได้

04:12.720 --> 04:15.940
ฉันไม่สามารถบอกได้ว่าอาเรย์ที่ผสานนั้นเท่ากับสอง

04:16.080 --> 04:24.480
มันจะให้คำเตือนแก่ฉันเพราะมันเป็นค่าคงที่ฉันสามารถเพิ่มสิ่งต่างๆลงในอาร์เรย์ได้ แต่ฉันไม่สามารถเปลี่ยนการอ้างอิงนี้ไปยังอาร์เรย์ได้

04:24.630 --> 04:27.770
ในทางกลับกันให้ฉันทำอย่างนั้นได้

04:27.870 --> 04:35.890
ดังนั้นในภายหลังฉันสามารถพูดอาร์เรย์หนึ่งรายการเท่ากับสิ่งใหม่เช่นอาร์เรย์หนึ่งในดัชนีของหนึ่ง

04:36.330 --> 04:39.300
นั่นคือสาเหตุที่เราใช้ไวยากรณ์นี้

04:39.300 --> 04:42.680
มันเป็นไวยากรณ์ ESX และ Javascript ใหม่

04:42.800 --> 04:43.910
เอาล่ะ

04:43.910 --> 04:57.810
ดังนั้นในขณะที่เรามีสิ่งต่าง ๆ และอาร์เรย์ที่เราต้องการตรวจสอบก่อนสมมติว่าถ้าหนึ่งรายการมีค่าน้อยกว่ารายการ Array

04:58.710 --> 05:15.630
2 นั่นคือถ้า 0 มีค่าน้อยกว่า 4 เราต้องการเพิ่มเข้าไปในอาเรย์ที่ว่าง

05:15.660 --> 05:20.860
เราต้องการที่จะบอกว่าผลักดันและเราจะผลักดันรายการแรกในอาร์เรย์

05:21.060 --> 05:34.610
ดังนั้นเราจะกด 0 และเนื่องจากตอนนี้เราได้ผลักรายการศูนย์เข้าในอาร์เรย์นี้เราไม่จำเป็นต้องกังวลอีกต่อไป

05:34.970 --> 05:49.230
ดังนั้นเราสามารถบอกได้ง่ายๆว่าอาเรย์หนึ่งไอเท็มตอนนี้จะเท่ากับอาเรย์หนึ่งที่ดัชนี

05:49.350 --> 05:54.710
ถูกต้องเพราะตอนนี้เราต้องการย้ายไปยังรายการอาร์เรย์

05:54.710 --> 06:00.040
ตรงนี้ที่ดัชนี 1 ซึ่งเป็น 3 เพื่อให้เราสามารถเปรียบเทียบสามกับสี่ได้

06:00.150 --> 06:02.450
ตอนนี้เราต้องการที่จะเพิ่มขึ้นทุกครั้ง

06:02.610 --> 06:12.740
และเพราะเรากำลังวนรอบตรงนี้ลองแปลงนี่เป็นดัชนีที่สูงและเพิ่มขึ้นโดยบวกบวก

06:12.970 --> 06:22.910
และที่ด้านบนตรงนี้เราก็บอกได้ว่าจุดเริ่มต้นนั้นเท่ากับหนึ่ง

06:23.000 --> 06:28.610
วิธีที่เมื่อเราวนรอบนี่จะเพิ่มขึ้นกับ I บวกบวกนั่นคือการเพิ่มขึ้น 1

06:28.610 --> 06:37.590
เพื่อให้เราสามารถไป 0 3 4 31 และโดยวิธีที่ฉันเพิ่งสังเกตว่า เธอ

06:37.590 --> 06:40.550
8

06:40.550 --> 06:46.430
ตอนนี้เป็นกรณีที่อาร์เรย์หนึ่งรายการมีค่าน้อยกว่าอาร์เรย์ไปยังรายการไปอีกด้านหนึ่ง

06:46.580 --> 06:55.310
หากรายการอาร์เรย์ 2 มีค่าน้อยกว่าอาร์เรย์ 1 ตอนนี้เราจะรวมเข้าไปในอาร์เรย์

06:57.970 --> 07:07.370
Array to item เพราะถ้า array หนึ่งรายการไม่น้อยกว่า array ไปยัง item เราไม่จำเป็นต้องเพิ่มเงื่อนไขที่นี่

07:07.370 --> 07:16.400
เรารู้ว่าอาเรย์หนึ่งไอเท็มนั้นมากกว่าอาเรย์สองไอเท็มซึ่งในกรณีนี้เราสามารถเพิ่มไอเท็มที่สองได้

07:16.400 --> 07:19.470
นั่นคือเราเพิ่มรายการนี้แทน

07:20.860 --> 07:25.980
และอีกครั้งเราต้องการทำสิ่งเดียวกันแน่นอนที่เราทำกับรายการแรกหรืออาร์เรย์แรก

07:26.110 --> 07:35.110
นั่นคืออาร์เรย์ของไอเท็มตอนนี้จะเท่ากับอาร์เรย์และเราต้องการดัชนีที่แตกต่างจากอันนี้

07:35.110 --> 07:43.160
เราสามารถใช้หนึ่งอัตราเดียวกันดังนั้นเราสามารถบอกได้ว่านี่จะเป็น J และปรากฏ

07:43.360 --> 07:45.920
เราทำสิ่งเดียวกัน

07:45.940 --> 07:49.000
J จะเท่ากับ 1

07:49.390 --> 07:58.290
ดังนั้นเมื่อเราหารายการดัชนีศูนย์แล้วเราก็สามารถย้ายไปยังดัชนีหนึ่งมากกว่าดัชนีของสองดัชนีสาม

07:58.300 --> 08:00.280
เป็นต้นไปเรื่อย ๆ

08:00.280 --> 08:02.480
ตอนนี้ลองตรวจสอบรหัสนี้และดูว่ามันใช้งานได้หรือไม่

08:02.530 --> 08:08.790
ถ้าฉันเรียกใช้นี่คุณจะเห็นว่าเบราว์เซอร์ของฉันเพิ่งพัง

08:08.790 --> 08:15.960
และนั่นเป็นเพราะฉันมีการตั้งค่า REPL ที่ ID

08:15.960 --> 08:19.480
ซึ่งอนุญาตให้ใช้ในขณะนี้สิ่งนี้เกิดขึ้นได้มากที่สุดหากคุณใช้การตั้งค่าเริ่มต้นที่นี่มันจะให้คำเตือน

08:19.800 --> 08:27.130
แต่ลองย้อนกลับไปว่าทำไมมันถึงเกิดขึ้น

08:27.800 --> 08:33.780
นี่คือเหตุผลที่มันเป็นความคิดที่ดีเสมอที่จะไปทีละขั้นตอน

08:33.800 --> 08:39.130
เราทำการเข้ารหัสจำนวนมากที่นี่โดยไม่มีการทดสอบว่ามีสิ่งใดที่ได้ผลจริงหรือไม่

08:39.930 --> 08:47.230
ดังนั้นข้อความที่ดีที่นี่คือหยุดชั่วคราวทุกครั้งและทดสอบสมมติฐานของคุณเพื่อหาคำตอบ

08:47.390 --> 09:06.660
ในกรณีนี้เราพลาดจุดวิกฤติที่อยู่ในการตรวจสอบตรงนี้ถ้าเราวนลูปตราบใดที่อาร์เรย์หนึ่งไอเท็มหรืออาร์เรย์สองไอเท็มถูกเติมข้อมูล

09:06.780 --> 09:19.690
แต่ปัญหาที่นี่คือเราอาจมีกรณีที่หนึ่งในนั้นเพราะเรากำลังใช้หรืออาจไม่ได้กำหนดหรือเรามาถึงจุดสิ้นสุดของบรรทัดเพื่อพิจารณา

09:19.800 --> 09:27.280
สิ่งสำคัญที่ต้องทำที่นี่คือการรู้ว่ารหัสของคุณทำงานอยู่อย่างไรดังนั้นให้ยกเลิกหรือล็อคที่นี่บอกว่าhoræต้องการไอเท็ม man array

09:27.300 --> 09:34.160
ไปยังไอเท็ม

09:34.640 --> 09:37.790
เรามาดูกันว่าเราได้อะไรมาบ้าง

09:38.640 --> 09:44.600
หากฉันเรียกใช้สิ่งนี้มันจะผิดพลาดอีกครั้งและเราจะไม่สามารถดูบันทึกของเราได้

09:44.610 --> 09:50.410
ดังนั้นฉันจะเขียนเวอร์ชันที่ถูกต้องที่นี่แล้วอธิบายว่าทำไมเราถึงทำในสิ่งที่เราทำ

09:50.750 --> 10:06.570
ฉันกำลังจะบอกว่าถ้ารายการอีกครั้งถ้าอาร์เรย์ไปยังรายการไม่ได้ดังนั้นถ้าเราไม่ได้กำหนดมันจะกลายเป็นจริง

10:06.580 --> 10:08.510
ดังนั้นเราจึงวิ่งผ่านสิ่งนี้

10:08.800 --> 10:10.100
ทำไมเป็นอย่างนั้น

10:10.120 --> 10:10.900
มาดูกัน

10:13.180 --> 10:15.470
สังเกตสิ่งที่เราเพิ่งล็อคที่นี่

10:15.520 --> 10:18.780
เราได้บันทึกทุกรายการแล้วอาร์เรย์สองรายการ

10:18.790 --> 10:26.770
นี่คือเหตุผลที่เราเปรียบเทียบระหว่างศูนย์ลูปของเรามากกว่า 3 และ 4 จากนั้นสำหรับเขาแล้วสำหรับสี่และหกจากนั้นและ

10:26.770 --> 10:38.040
31 และหกและ 31 และ 30 และ 31 และตามกำหนดคุณเห็นที่นี่ว่ารายการอาร์เรย์ที่สองไม่ได้กำหนด

10:38.880 --> 10:54.610
และเพื่อให้เราหลีกเลี่ยงสิ่งที่ไม่ได้กำหนดซึ่งจะกลายเป็นสิ่งที่กำหนดไว้ที่นี่และเราใช้เครื่องหมายอัศเจรีย์ใน javascript เพื่อทำให้สิ่งนี้กลายเป็นคำสั่งที่แท้จริง

10:54.610 --> 11:04.670
ดังนั้นมันจึงกลายเป็นสิ่งนี้เพื่อให้เราสามารถเพิ่มสามสิบหนึ่งในอาร์เรย์หนึ่งเข้าไปในสล็อตสุดท้ายของอาร์เรย์

11:06.140 --> 11:16.420
ทีนี้ถ้านี่เป็นแบบนี้และผมก็เรียกใช้เราไม่ได้กำหนดสำหรับอาร์เรย์แรก

11:17.490 --> 11:26.480
อย่างไรก็ตามเนื่องจากเราทำการตรวจสอบครั้งที่สองซึ่งเป็นอาร์เรย์หนึ่งรายการน้อยกว่ารายการ Array

11:26.480 --> 11:36.670
2 และในกรณีของเราหากเราทำตามที่กำหนดน้อยกว่า 6 ซึ่งเป็นสิ่งที่เรากำลังทำที่นี่ในการเปรียบเทียบนี้

11:36.750 --> 11:48.760
ถ้าฉันเรียกใช้สิ่งนี้และให้ Konsole บันทึกนี้ดูว่าฉันได้คำตอบว่าอะไรเท็จ

11:48.770 --> 11:59.330
ดังนั้นแม้ว่าในเวลานี้อาเรย์หนึ่งจะไม่ได้ถูกกำหนดเพราะเราผ่านมันไปแล้วเพราะข้อความนี้เป็นเท็จ

11:59.420 --> 12:09.290
เราไปที่คำแถลงอื่นและเติมอาเรย์ที่เหลือด้วย 6 และ

12:09.380 --> 12:19.390
13 หรือ 30 ซึ่งมาจากอาเรย์ถึงฉันอยากจะชี้เรื่องนี้ให้คุณเพราะตอนนี้มันอาจเป็นทางออกที่สะอาด

12:19.420 --> 12:29.480
ฉันหมายถึงการดูที่รหัสนี้แค่คิดเกี่ยวกับสิ่งที่ฉันต้องอธิบายและดึงออกมาเพื่อให้คุณเข้าใจอย่างถ่องแท้ว่ามันทำงานอย่างไร

12:29.530 --> 12:33.930
ฉันและฉันทำสิ่งนี้ด้วยเหตุผลเฉพาะในระหว่างการสัมภาษณ์

12:33.940 --> 12:41.350
หากคุณต้องอธิบายรายละเอียดอย่างนี้และเขียนสิ่งต่าง ๆ ออกมาให้ดีบางทีมันอาจจะเป็นวิธีที่ดีกว่าในการเขียน

12:43.070 --> 12:52.250
เพราะผู้สัมภาษณ์จะสับสนว่ามันหมายถึงอะไรแล้วมันหมายความว่าอย่างไรและมันก็ไม่ได้อ่านอย่างที่พูดภาษาอังกฤษ

12:52.400 --> 12:57.540
ฟังก์ชั่นเหล่านี้เป็นการดีที่จะอ่าน

12:57.610 --> 13:10.640
ดังนั้นบางทีฉันสามารถใช้ส่วนนี้ของฟังก์ชั่นและแปลงเป็นฟังก์ชั่นของตัวเองและเพียงแค่ชื่อนี้ควรผลักรายการอาร์เรย์แรก

13:11.110 --> 13:20.170
และสิ่งนี้ควรผลักดันอาเรย์ไปยังไอเท็มและโดยการแยกโค้ดเหล่านี้ออกเป็นฟังก์ชั่นเล็ก ๆ

13:21.260 --> 13:28.700
คุณสามารถล้างคำตอบนี้และทำให้อ่านง่ายขึ้นและผู้สัมภาษณ์จะเป็นเช่นนั้น

13:28.750 --> 13:42.960
ตอนนี้ในระหว่างการสัมภาษณ์คุณอาจไม่มีเวลาทำเช่นนั้น แต่คุณสามารถให้ผู้สัมภาษณ์ทราบว่าคุณเขียนวิธีแก้ปัญหาอย่างไรและคุณเข้าใจว่านี่อาจไม่ใช่วิธีแก้ปัญหาที่อ่านง่ายที่สุดและนี่คือสิ่งที่คุณต้องทำความสะอาด

13:42.970 --> 13:48.600
คุณไม่จำเป็นต้องเขียนมันจริง ๆ ตราบใดที่คุณบอกพวกเขาและคุณเข้าใจว่าคุณจะปรับปรุงสิ่งไหน

13:48.890 --> 13:54.830
ในสายตาของผู้สัมภาษณ์นั้นดีพอ ๆ กับที่คุณเขียนมันแบบนั้น

13:54.910 --> 13:57.220
ดูเหมือนว่านี่ใช้ได้

13:57.220 --> 14:06.340
ถ้าฉันทำอาร์เรย์ว่างเปล่าที่นี่ฉันเห็นว่ามันยังทำงานอยู่คำตอบของเราดูดี

14:07.600 --> 14:09.000
หวังว่าคุณจะได้มาไกลขนาดนี้

14:09.040 --> 14:11.330
ฉันจะเห็นคุณในวิดีโอถัดไปโดย
