WEBVTT

00:01.170 --> 00:08.630
เพื่อที่จะเข้าใจว่าการเขียนโปรแกรมแบบไดนามิกทำงานอย่างไรเราต้องเข้าใจความหมายของแคช

00:09.000 --> 00:13.970
การแคชเป็นวิธีการจัดเก็บค่าเพื่อให้คุณสามารถใช้ในภายหลัง

00:14.310 --> 00:25.520
เป็นการดีที่คุณสามารถคิดว่าการแคชเป็นกระเป๋าเป้สะพายหลังที่พวกเขาไปโรงเรียนแทนที่จะไปตลอดทางกลับบ้านเมื่อคุณต้องการอะไรเช่นดินสอ

00:25.640 --> 00:38.340
คุณมีกล่องเล็ก ๆ ที่หลังของคุณที่เก็บของที่คุณต้องการเพื่อที่เมื่อคุณไปโรงเรียนคุณสามารถนำมันกลับมาใช้ซ้ำได้อย่างรวดเร็ว

00:38.350 --> 00:40.720
ตอนนี้เป็นตัวอย่างที่โง่

00:40.750 --> 00:57.640
การแคชเป็นเพียงวิธีหนึ่งในการเพิ่มความเร็วของโปรแกรมและเก็บข้อมูลบางส่วนไว้ในกล่องที่เข้าถึงได้ง่ายและการบันทึกเป็นรูปแบบเฉพาะของการแคชที่เราจะพูดถึงเพราะเราใช้มันในการเขียนโปรแกรมแบบไดนามิก

00:58.090 --> 01:06.270
แต่แทนที่จะพูดถึงมันลองมาสาธิตในรหัสว่าเราสามารถเก็บข้อมูลได้อย่างไร

01:06.550 --> 01:14.940
ลองจินตนาการว่าเรามีฟังก์ชั่นที่บอกว่าเราต้องการที่จะเพิ่มถึง 80

01:16.040 --> 01:21.310
และฟังก์ชั่นนี้ใช้ตัวเลขและสิ่งที่มันทำคือคืนค่าของ

01:21.330 --> 01:22.960
และนั่นคือพารามิเตอร์

01:22.960 --> 01:25.940
เราให้และเพิ่มแปดสิบ

01:26.870 --> 01:37.450
ดังนั้นเมื่อเราเรียกใช้ฟังก์ชันเพิ่มไปที่ 80 และสมมุติว่าเราใส่ในห้าเราได้ 85

01:38.030 --> 01:46.920
อัตราที่ดีและง่าย แต่ถ้าฉันเรียกใช้ฟังก์ชันนี้อีกครั้ง

01:46.970 --> 01:59.160
และถ้าฉันทำมันอีกครั้งทำสิ่งเดียวกันฉันได้คำนวณสามครั้ง แต่ถ้าการผ่าตัดนี้ใช้เวลานาน

01:59.600 --> 02:06.540
ถ้าฉันมีคอนโซลเช่นนี้และเราสามารถจินตนาการได้ว่าการดำเนินการนี้ใช้เวลาหลายวินาที

02:06.710 --> 02:07.990
มันใช้เวลานาน.

02:08.800 --> 02:17.440
ทุกครั้งที่คุณใช้งานฟังก์ชั่นนี้เราจะต้องใช้เวลานานสามครั้งและทำตามขั้นตอนทีละหนึ่ง

02:17.620 --> 02:25.100
แม้ว่าเราจะทำการคำนวณแบบเดียวกันแน่นอนสามครั้งมีวิธีที่เราสามารถปรับให้เหมาะสม

02:25.260 --> 02:35.230
และนี่คือที่ที่เราสามารถใช้แคชและบันทึกช่วยจำลองปรับปรุงฟังก์ชั่นด้านบนโดยทำสิ่งที่แตกต่าง

02:35.280 --> 02:42.480
ฉันจะสร้างวัตถุใหม่ที่ชื่อว่าแคชซึ่งจะเก็บของว่างไว้

02:42.480 --> 02:50.570
เราจะมีฟังก์ชั่นที่จะถูกเรียกว่าจดจำไม่ได้จดจำแล้วท่องจำเพิ่มไปยัง

02:52.120 --> 03:01.590
DD ที่ใช้ตัวเลขและภายในที่นี่เราจะทำสิ่งที่แตกต่างเล็กน้อยจากข้างต้น

03:01.600 --> 03:06.990
เรายังคงเพิ่ม 280 แต่เราจะทำมันในวิธีพิเศษ

03:07.120 --> 03:19.220
ฉันจะบอกว่าถ้า n เป็นเงินสดและนี่เป็นวิธีการตรวจสอบว่าทรัพย์สินมีอยู่ในวัตถุใน Javascript หรือไม่

03:19.270 --> 03:25.630
มันคล้ายกับที่ฉันทำจุดเงินสดและตรวจสอบอสังหาริมทรัพย์

03:25.630 --> 03:27.730
หนึ่งนี้อ่านเกี่ยวกับเพลงและเพื่อให้มันเป็นอย่างนั้น

03:27.730 --> 03:30.170
ดังนั้นหากมีเงินสด

03:30.250 --> 03:43.610
ดังนั้นหากเราได้ทำการแคชก่อนแล้วเพียงแค่คืนจุดเงินสดและหรือเงินสดและคืนค่าแคช

03:44.020 --> 03:45.820
แต่เห็นได้ชัดว่ามันว่างเปล่า

03:45.820 --> 03:53.410
ครั้งแรกรอบนี้จะไม่ทำงานถ้าไม่มีอะไรในแคชซึ่งเป็นกรณีแรกรอบ

03:53.490 --> 04:07.170
ทีนี้เรามีคำสั่งอย่างอื่นและที่นี่เราจะได้เงินของเราที่ยังไม่มีอยู่และกำหนดมันบวก 80 ดังนั้นหลังจากนี้ถ้าเราทำอะไรอย่าง

04:07.170 --> 04:24.260
Moammar ใกล้ถึงแปดสิบห้าจะบอกว่า บวก 80

04:24.340 --> 04:40.870
ดังนั้นในที่นี่เราจะเงินสดทรัพย์สินห้าเพื่อให้มีค่าแปดสิบห้าซึ่งเป็นสิ่งที่เราทำที่นี่เพื่อครั้งต่อไปที่เราทำอะไรแบบนี้

04:41.150 --> 04:47.870
เราผ่านคำสั่ง if

04:47.930 --> 04:55.960
พบความจริงที่ว่าเราได้คำนวณห้าข้อแล้วและเข้าถึงคุณสมบัติแบบง่าย ๆ ซึ่งอย่างที่เราทราบกันดีว่าครั้งหนึ่งเร็วมากด้วยตารางแฮชแบบนี้

04:56.090 --> 04:59.220
มาทำตัวอย่างนี้ให้สมบูรณ์เพื่อแสดงให้คุณเห็นว่ามันทำงานอย่างไร

04:59.360 --> 05:12.140
ฉันแค่จะกลับมาเพราะเราเติมมันตรงนี้

05:12.140 --> 05:20.450
และขอบันทึกคอนโซลที่นี่ซึ่งใช้เวลานานในการดูว่าเรากำลังทำการคำนวณที่ใช้เวลานาน

05:21.380 --> 05:28.940
ครั้งแรกที่ฉันเรียกใช้ฟังก์ชั่นนี้ฉันได้แปดสิบห้าและฉันมีเงินสดที่เติมไว้ล่วงหน้า

05:29.020 --> 05:30.940
ดังนั้นมันจึงคำนวณและใช้เวลานาน

05:30.940 --> 05:32.020
ลองอีกครั้ง

05:32.290 --> 05:42.450
คลิกเรียกใช้มานานการผ่านครั้งแรกผ่านไปที่นี่และทำการคำนวณนี้ว่าสมมุติว่าจะใช้เวลานานจริงๆ

05:42.450 --> 05:47.490
อีกครั้งเราใช้ตัวอย่างง่าย

05:47.490 --> 06:01.440
ๆ ที่นี่ แต่คุณสามารถจินตนาการว่านี่เป็นการคำนวณที่ใช้เวลานานหลายวินาทีถ้าเราทำอีกครั้งเราสามารถปลอบเหมือนสุนัขที่นี่เพื่อให้แน่ใจว่าเราได้เก็บค่าเหล่านี้

06:04.580 --> 06:12.700
และเราจะติดป้ายกำกับพวกเขาหนึ่งและสองเพื่อที่เราจะได้แยกแยะได้

06:12.700 --> 06:20.150
ดังนั้นเป้าหมายแรกและสายที่สองถ้าฉันกดวิ่งดูครั้งแรกที่รอบ

06:20.180 --> 06:23.440
เราเรียกกันมานานและเราคำนวณถึง 85

06:23.630 --> 06:33.870
แต่ครั้งที่สองเพราะค่านี้เป็นเงินสดที่เราต้องทำการคำนวณที่ยาวนานและเราเพิ่งคืนมันทันที

06:35.300 --> 06:45.220
ดังนั้นการบันทึกความจำคืออะไรการบันทึกข้อมูลจึงเป็นรูปแบบเฉพาะของการแคชที่เกี่ยวข้องกับการ cashing ค่าที่ส่งคืน

06:46.260 --> 06:53.510
ฟังก์ชั่นทั้งหมดที่เป็นค่าตอบแทนของฟังก์ชั่นนี้ขึ้นอยู่กับพารามิเตอร์ของมัน

06:53.960 --> 07:03.260
และถ้าพารามิเตอร์ของฟังก์ชั่นนี้ไม่เปลี่ยนเหมือนอยู่ที่นี่ก็จะถูกจดจำ

07:03.260 --> 07:14.410
นั่นคือมันใช้แคชเพราะมันคำนวณสิ่งเดียวกันก่อนหน้านี้ด้วยพารามิเตอร์เดียวกันและมันจะส่งคืนฟังก์ชันรุ่นแคช

07:14.630 --> 07:18.960
มันจะถูกจดจำหากพารามิเตอร์เปลี่ยนแปลง

07:19.340 --> 07:26.220
มันเป็นพารามิเตอร์ที่แตกต่างที่ไม่เคยเห็นมาก่อนดังนั้นมันจึงคำนวณทั้งสองครั้ง

07:27.060 --> 07:28.040
สิ่งที่แตกต่าง.

07:28.230 --> 07:30.930
และฉันเพิ่งสังเกตเห็นว่าไม่ควรมีห้าประเด็น

07:31.190 --> 07:33.150
และตรงนี้มันเป็นพลวัต

07:33.150 --> 07:33.770
ไปแล้ว

07:33.840 --> 07:35.670
มันดีกว่า.

07:35.670 --> 07:42.810
ดังนั้นโปรดจำไว้ว่าการบันทึกช่วยจำนี้เป็นเพียงวิธีในการจดจำวิธีแก้ไขปัญหาที่แก้ไขแล้ว

07:42.990 --> 07:45.600
ดังนั้นคุณไม่ต้องคำนวณอีกครั้ง
