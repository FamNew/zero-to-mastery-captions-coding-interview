WEBVTT

00:01.020 --> 00:07.650
ยินดีต้อนรับกลับมาใช้การเขียนโปรแกรมแบบไดนามิกและการท่องจำเพื่อปรับปรุงฟังก์ชั่นนี้

00:08.420 --> 00:16.540
เช่นเดียวกับที่เราทำเมื่อเราเรียนรู้เกี่ยวกับการท่องจำมันค่อนข้างง่ายลองลบสิ่งนี้ก่อน

00:16.540 --> 00:27.050
ฉันจะเก็บไว้ที่ด้านบนแล้วสร้างฟังก์ชันใหม่ที่เราจะเรียกมันว่า Fibonacci master

00:27.080 --> 00:37.320
ฟังก์ชั่นนี้จะมีตารางแฮชแคชหรือวัตถุเพื่อเก็บคำตอบที่คำนวณไว้ล่วงหน้าของเรา

00:37.480 --> 00:43.780
และถ้าคุณจำได้เพราะเราต้องการให้แน่ใจว่าเราจะไม่รีเซ็ตสิ่งนี้ทุกครั้งที่เราเรียกใช้ฟังก์ชั่นนี้เราจะกลับมาฟังก์ชั่น nother

00:44.110 --> 00:53.360
อีกครั้งโดยใช้การปิดและ Javascript และภาษาอื่น ๆ คุณอาจต้องใช้เทคนิคที่แตกต่างกัน

00:54.010 --> 01:01.320
และในที่นี้เราสามารถมีฟังก์ชั่นที่เราสามารถตั้งชื่อได้ในสิ่งที่เรียกว่าป่วนที่ใช้

01:01.440 --> 01:03.820
และนั่นคือจำนวนที่เราให้

01:04.210 --> 01:11.840
และภายในที่นี่เราจะทำสิ่งที่คล้ายกับข้างบนยกเว้นว่าเราจะตรวจสอบพวกเรา

01:12.070 --> 01:29.510
เรากำลังจะบอกว่าถ้าอยู่ในแคชเช่นเดียวกับที่เราทำในวิดีโอบันทึกช่วยจำและเราจะตรวจสอบว่ามีแคชอยู่หรือไม่และหากเป็นเช่นนั้นเราจะคืนเงินให้หรือไม่

01:30.340 --> 01:37.990
และครั้งแรกรอบนี้จะว่างเปล่าดังนั้นมันจะไม่ทำงานมันจะเข้าสู่เงื่อนไขอื่น

01:40.040 --> 01:44.270
แล้วตรงนี้เรามีสองเงื่อนไขเหมือนที่เราทำตรงนี้

01:46.360 --> 01:51.800
และมีน้อยกว่าสองตัวที่เราต้องการคืน

01:51.930 --> 02:00.850
และเหมือนกับที่เราทำข้างบนตรงนี้ไม่อย่างนั้นเราจะวิ่งตามลำดับ

02:01.040 --> 02:10.010
เราก็ทำเสียงประกอบของและลบหนึ่งบวกด้วยเสียงของและลบ 2

02:10.260 --> 02:13.290
แต่เราต้องการเก็บค่านี้เป็นเงินสดของเรา

02:13.500 --> 02:24.030
ดังนั้นเราจะบอกว่าเงินสดและจะเท่ากับผลของสิ่งนี้

02:24.090 --> 02:39.170
และในที่สุดเราต้องการคืนค่านี้เพราะเราใช้การสอบถามซ้ำที่นี่และคืนเงินของและสิ่งที่เราเพิ่งตั้งและนั่นคือมัน

02:39.250 --> 02:41.310
นั่นไม่ถูกต้องยาก

02:41.570 --> 02:51.590
ฉันหมายความว่าเรามีขั้นตอนพิเศษไม่กี่ขั้นตอน แต่ทั้งหมดที่เราทำก็แค่เพิ่มผลลัพธ์ลงในตารางแฮชของเราดังนั้นตอนนี้ถ้าฉันทำ Konst สมมติว่า

02:51.680 --> 02:59.580
fib ที่เร็วขึ้นจะเท่ากับ Fibonacci

02:59.630 --> 03:08.210
เอ็ม จำครั้งแรกที่เราจะใช้ฟังก์ชันนี้และสร้างตัวแปรเงินสด

03:09.110 --> 03:16.680
อีกครั้งและสร้างตัวแปรเงินสดและมันจะกลับมาที่ฟังก์ชันนี้

03:17.030 --> 03:26.240
ดังนั้นมันจึงคล้ายกับการพูดว่าปดเร็วขึ้นเท่ากับฟังก์ชั่นนี้ในขณะนี้

03:26.370 --> 03:36.460
ยกเว้นตอนนี้เราสามารถเข้าถึงตัวแปรเงินสดเพื่อที่ตอนนี้ฉันสามารถคอนโซลบันทึกทั้งหมดและเรียก DP นี้สำหรับการเขียนโปรแกรมแบบไดนามิกและเราจะพูดเร็วขึ้นและให้มันบอกว่า 10 ถ้าฉันเรียกใช้นี้ฉันได้รับ 55

03:36.460 --> 03:49.580
0 1 2 3 4 5 6 7

03:49.670 --> 03:58.700
8 9 10 55

03:58.830 --> 04:00.030
นั่นเป็นสิ่งที่ดีงาม

04:00.960 --> 04:07.920
แต่ลองทำอะไรสนุก ๆ

04:07.920 --> 04:20.750
ที่นี่เพื่อดูว่ามันใช้การคำนวณนี้ได้หรือไม่ที่เราใช้ในจำนวนฟีโบนักชีลองย้ายไปฟีโบนักชี

04:20.750 --> 04:32.500
หรือแทนที่จะอยู่ที่นี่ในฟังก์ชั่นนี้เพราะนี่คือสิ่งที่เราเรียกซ้ำและเรามาดูว่าการคำนวณนี้เกิดขึ้นกี่ครั้งถ้าฉันเรียกใช้และเราต้องยกเลิกบันทึกการคำนวณ

04:32.500 --> 04:49.820
ดังนั้นที่ด้านล่างนี่ขอบันทึกคอนโซลและเราจะบอกว่าเราทำการคำนวณแบบนั้น

04:50.040 --> 05:02.790
ดังนั้นถ้าฉันทำสิ่งนี้เราจะเห็นว่าเราคำนวณ 19 ครั้งด้วย Fibonacci M. เมื่อเราป้อน

05:03.060 --> 05:09.480
10 กับถ้าเราย้ายการคำนวณย้อนกลับไปที่นี่เป็นเวอร์ชันเก่าของเรา

05:09.780 --> 05:12.100
และเราต้องเรียกใช้ฟังก์ชั่นนี้

05:12.240 --> 05:20.760
ดังนั้นที่นี่เราจะมีคอนโซลล็อคเพื่อเริ่มต้นว่าทุกอย่างสะอาดแล้วเราจะบอกว่ายกเลิกหรือเข้าสู่ระบบ

05:20.760 --> 05:28.060
นี่คือสิ่งนี้จะเรียกว่าช้าและจะถูกเรียกว่ามันคือฟีโบนักชี

05:28.260 --> 05:34.100
ดังนั้นเราจะทำฟังก์ชั่นดั้งเดิมของเรากับ Fibonacci 10

05:34.140 --> 05:34.820
ลองดูกัน

05:34.830 --> 05:47.080
และรอนเราได้คำตอบเดียวกัน 55 แต่เราใช้การคำนวณร้อยและเจ็ดสิบถึง 10

05:47.160 --> 05:48.000
moly ศักดิ์สิทธิ์

05:48.000 --> 05:51.930
ดังนั้น 19 กับการคำนวณร้อยเจ็ดสิบเจ็ด

05:52.230 --> 06:01.900
และถ้าเราทำ 20 ตรงนี้ดีเรามีการคำนวณมากมายและที่จริงแค่ 35

06:01.920 --> 06:06.490
ดูว่าเป็นไปได้ไหมที่เราจะเห็น 35

06:06.490 --> 06:07.270
ไปแล้ว

06:07.270 --> 06:18.490
ดูจำนวนการคำนวณที่เราต้องทำเทียบกับถ้าผมทำ 35 ด้วยฟังก์ชันที่น้อยที่สุดของเราย้ายการคำนวณที่นี่

06:23.830 --> 06:28.320
และเราวิ่งหกสิบเก้านี้

06:28.340 --> 06:29.490
การคำนวณ

06:29.610 --> 06:36.110
แทนที่จะเป็นก่อนหน้านั้นถ้าฉันป้อนฟีโบนักชี 50

06:36.410 --> 06:41.090
ตรงนี้มันจะทำให้เบราว์เซอร์พังเพราะเราจะทำการคำนวณจำนวนมากกับอันนี้

06:41.150 --> 06:45.940
ฉันสามารถทำได้แม้กระทั่งอาชีหนึ่งร้อยและฉันก็ไม่มีปัญหา

06:45.950 --> 06:48.020
ดูว่าพวกเขาคำนวณได้เร็วแค่ไหน

06:48.020 --> 06:49.030
ช่างเป็นเรื่องที่น่าอัศจรรย์มาก

06:49.040 --> 06:52.110
คำนวณได้ 199 รายการเท่านั้น

06:52.460 --> 06:56.760
ฉันหวังว่าคุณจะเห็นพลังของการเขียนโปรแกรมแบบไดนามิกและมันก็ไม่ยาก

06:56.840 --> 06:57.440
ขวา.

06:57.770 --> 07:00.130
เพียงคุณจำรูปแบบนี้

07:00.230 --> 07:08.630
และหากมีการคำนวณซ้ำ ๆ

07:08.630 --> 07:13.800
เพื่อบันทึกผลลัพธ์ของฟังก์ชันเพื่อให้พารามิเตอร์นั้นเหมือนกันเราจะตรวจสอบแคชก่อนเพื่อดูผลลัพธ์

07:13.880 --> 07:24.190
แต่เรามาพูดถึงความซับซ้อนของอวกาศและเวลาตรงนี้ดีเพราะเราแค่ทำการคำนวณที่จำเป็น

07:24.420 --> 07:38.430
ในกรณีนี้การคำนวณทั้งหมดของเราจะเป็นและถูกต้องเราทำการคำนวณหนึ่งสองสามสี่ห้าหกเจ็ดเมื่อเทียบกับที่เราทำมาก่อน

07:39.320 --> 07:46.330
เพื่อให้เวลาของเรามีความสลับซับซ้อนเต็มไปด้วยและ

07:46.340 --> 07:53.790
ด้วยอันนี้ที่เพิ่มขึ้นเป็นสองถึง 10 เท่าเราจึงประหยัดได้มหาศาล

07:55.440 --> 08:01.970
ข้อเสียเปรียบอย่างหนึ่งคือเราเพิ่มความซับซ้อนของพื้นที่

08:01.980 --> 08:02.600
ขวา.

08:02.970 --> 08:12.140
ฉันหมายถึงเลขฟีโบนักชีแรกที่เราต้องเพิ่มฟังก์ชั่นในสแต็กและฟังก์ชั่นเหล่านี้

08:12.180 --> 08:14.330
ยิ่งเราเพิ่มเข้าไปในสแต็กมากขึ้น

08:14.400 --> 08:21.870
แต่เมื่อเราไปถึงด้านล่างเราก็โผล่ออกมาจากกองเพื่อให้กองอยู่ลึกเหมือนต้นไม้

08:22.470 --> 08:30.020
แต่ด้วยเวอร์ชันที่จดจำเรายังมีตัวแปรใหม่นี้ตารางแฮชแคชที่เราต้องเก็บหน่วยความจำของเรา

08:30.020 --> 08:37.290
และในขณะที่เรารู้ว่าบางครั้งเราจำเป็นต้องแลกเปลี่ยนความซับซ้อนของพื้นที่เพื่อความซับซ้อนของเวลาที่ดีขึ้น

08:37.380 --> 08:39.100
และนี่คือสิ่งที่เรากำลังทำในกรณีนี้

08:39.330 --> 08:44.520
และในกรณีนี้การประหยัดเวลาที่ซับซ้อนมีขนาดใหญ่มาก

08:44.520 --> 08:47.880
เอาล่ะฉันหวังว่าคุณจะตื่นเต้นกับการเขียนโปรแกรมแบบไดนามิก

08:47.910 --> 08:52.020
มันน่าสนใจมากและไม่ท่วมท้นอย่างที่คุณคิด

08:52.130 --> 08:53.450
ขวา.

08:53.460 --> 09:07.760
ฉันจะทิ้งปัญหาสองสามอย่างไว้ให้คุณคุ้นเคยกับการเขียนโปรแกรมแบบไดนามิก แต่ฉันขอแนะนำให้คุณนำโค้ดที่นี่มาให้คุณและคุณสามารถคว้ามันจากแหล่งข้อมูลและเล่นกับมัน

09:08.570 --> 09:11.620
มิฉะนั้นฉันจะเห็นในวิดีโอถัดไปโดย
