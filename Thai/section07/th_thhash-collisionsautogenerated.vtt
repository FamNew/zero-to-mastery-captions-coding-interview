WEBVTT

00:01.700 --> 00:09.220
เมื่อดูที่ฟังก์ชันแฮชคุณสามารถเริ่มคิดเกี่ยวกับการกระทำที่กระทำและความเร็วที่สามารถทำได้

00:10.880 --> 00:18.080
เมื่อมีการแทรกบางอย่างในพื้นที่หน่วยความจำของเรา

00:18.170 --> 00:29.630
เราแฮชคีย์เช่นองุ่นผ่านฟังก์ชันแฮชและวางลงในพื้นที่ที่อยู่ที่มันปรากฏ

00:29.720 --> 00:41.860
เงยหน้าขึ้นมองเป็นสิ่งเดียวกันกับที่เราเข้าถึงสถานที่ให้บริการที่จะได้รับการแฮชและนำเราตรงไปยังที่อยู่เพื่อหาค่า

00:41.890 --> 00:43.640
สิ่งที่เกี่ยวกับการลบ

00:43.720 --> 00:54.600
สิ่งเดียวกันเราเพียงแค่ใช้กุญแจทันทีที่เรารู้ว่าจะลบรายการจากที่ไหนและเพราะมันไม่ได้รับคำสั่ง

00:54.820 --> 00:58.630
เราไม่ต้องเปลี่ยนดัชนีเหมือนที่เราทำกับอาร์เรย์

00:58.690 --> 01:01.430
ทุกอย่างดีและเรียบง่าย

01:01.540 --> 01:07.840
ถ้าเราต้องการค้นหาบางอย่างในตะกร้าของเราเช่นแอปเปิ้ล

01:07.850 --> 01:09.590
ก็ง่ายเช่นกัน

01:09.690 --> 01:26.250
เราเพียงแค่ใช้ฟังก์ชั่นแฮชถ้าเราไปที่สนามเด็กเล่นของเราในจาวาสคริปต์ฉันสามารถสร้างวัตถุให้พูดว่าให้ผู้ใช้และผู้ใช้รายนี้จะมีคุณสมบัติของแต่ละ 54

01:26.300 --> 01:34.940
สมมติว่าชื่อนั้นจะเป็นเวทย์มนตร์ Kylie

01:35.080 --> 01:42.850
สมมติว่า Kylie

01:43.480 --> 01:52.390
ใช้ทักษะเวทย์มนตร์ดังนั้นตั้งให้เป็น True และเพื่อความสนุกสมมติว่าเสียงกรีดร้องนั้นเป็นฟังก์ชั่นที่จะปลอบใจด้วยเสียงกรีด

01:53.440 --> 02:00.800
นั่นไม่ใช่เสียงกรีดร้องที่แข็งแกร่งที่สุด แต่ฉันไม่ต้องการทำให้ผู้คนรอบ ๆ ตัวฉันตกใจเมื่อฉันทำสิ่งนี้

02:00.930 --> 02:08.100
ฉันได้สร้างวัตถุผู้ใช้และอายุ 54 ชื่อว่า Kylie magic

02:08.160 --> 02:16.790
กรีดร้องที่แท้จริงและความผิดปกติทั้งหมดจะถูกวางไว้ที่ไหนสักแห่งในที่อยู่หน่วยความจำที่แตกต่างกัน

02:16.990 --> 02:19.050
แต่ฉันสามารถเข้าถึงสิ่งนี้ได้อย่างรวดเร็วจริงๆ

02:19.060 --> 02:30.320
ฉันสามารถบอกว่าอายุผู้ใช้ Daut ซึ่งจะให้ 54 ในครั้งเดียวอาจเพิ่มคุณสมบัติใหม่

02:30.340 --> 02:38.790
ฉันแค่บอกได้ว่าผู้ใช้สะกดจุดจะเท่ากับ Habra Berra

02:39.570 --> 02:52.900
และถ้าฉันรันสิ่งนี้และลองตรวจสอบว่าวัตถุผู้ใช้ให้อะไรเราดูว่าตอนนี้เราได้เพิ่มคาบาร่าคาบาร่าของ Habra แล้ว

02:52.920 --> 03:03.460
นี่คือการเข้าถึงทั้งหมดของ 0 เพราะเราใช้ฟังก์ชั่นแฮชและคอมพิวเตอร์ตัดสินใจว่าจะใส่ทั้งคาถาและ abracadabra

03:03.460 --> 03:07.660
ในหน่วยความจำ

03:09.360 --> 03:17.780
และผู้ใช้อาวุธปืน ADOT กรีดร้องในสิ่งเดียวกัน แต่ฉันไม่สามารถสะกดกรีดร้องได้

03:17.800 --> 03:19.500
สิ่งเดียวกันที่ฉันได้รับ

03:19.870 --> 03:29.390
ฉันได้รับการเข้าถึงฟังก์ชั่นนี้ในหน่วยความจำอย่างรวดเร็วจริงๆมันเป็นเรื่องที่น่าอัศจรรย์

03:29.800 --> 03:33.070
และฉันรู้ว่าที่คุณคิดว่าตารางแฮชนั้นน่าทึ่ง

03:33.070 --> 03:38.720
เราควรจะใช้มันตลอดเวลาและคุณพูดถูกเราควรจะใช้มันในหลายกรณี

03:38.980 --> 03:42.190
แต่อย่างที่เรารู้มีข้อดีและข้อเสียเสมอ

03:42.370 --> 03:48.370
ตอนนี้ให้ฉันพูดคุยกับคุณเกี่ยวกับปัญหาหลักอย่างหนึ่งของตารางแฮช

03:49.270 --> 03:51.920
และฉันมีภาพที่ดีที่จะแสดงให้คุณเห็น

03:51.960 --> 03:57.290
ฉันจะลิงค์ไปที่นี้และวิดีโอนี้เพื่อให้คุณสามารถเล่นกับมันในภายหลัง

03:57.300 --> 04:02.750
ฉันมีอนิเมชั่นเล็ก ๆ น้อย ๆ ตรงนี้ที่เรามี 12 หน่วยความจำ

04:02.880 --> 04:14.900
จำคอมพิวเตอร์ของเรามีพื้นที่ จำกัด และเมื่อเราสร้างวัตถุหรือตารางแฮชคอมพิวเตอร์จะตัดสินใจว่าจะจัดสรรพื้นที่เท่าใด

04:14.940 --> 04:18.150
มันจะไม่จัดสรรพื้นที่ทั้งหมดให้กับตารางแฮช

04:18.270 --> 04:24.630
มันจะทำการจัดสรรบิตของมันและฉันจะแสดงให้คุณในภายหลังเมื่อเราใช้ตารางแฮชของเราเอง

04:24.990 --> 04:31.150
เราจะปรับขนาดได้อย่างไร แต่เมื่อเห็นว่ามีเพียง 12 ช่องว่างที่คุณสามารถจินตนาการได้

04:31.150 --> 04:37.890
ถ้าฉันแทรกที่นี่สมมุติว่ามีคนดูว่าฉันจะทำให้ใหญ่กว่านี้ได้ไหมเพื่อให้คุณเห็นได้

04:38.070 --> 04:47.070
ไปแล้วฉันจะตอบสมมุติว่าเลขสามตัวถูกแทรกตรงนี้ลองทำ 55

04:47.330 --> 04:48.060
ใส่มัน

04:48.080 --> 04:49.550
โอ้เกิดอะไรขึ้นที่นั่น

04:50.660 --> 05:03.060
คุณเห็นฟังก์ชั่นแฮชกำหนดพื้นที่ในหน่วยความจำแบบสุ่มและจำไว้เป็นสามครั้ง

05:03.240 --> 05:09.010
ไม่มีอะไรบอกฟังก์ชันแฮชให้กระจายอย่างสม่ำเสมอจนกว่าทุกอย่างจะเต็ม

05:09.570 --> 05:15.640
แม้ว่าฟังก์ชั่นแฮชจะได้รับการปรับแต่งให้พยายามกระจายข้อมูลนี้ไปทั่ว

05:15.860 --> 05:17.910
มันยังสำคัญกับสิ่งที่เราใส่เข้าไป

05:17.990 --> 05:27.550
ดังนั้นเมื่อ 55 ถูกแฮ็กฟังก์ชันแฮชนี้จะสร้างตำแหน่งที่อยู่ของสามที่จะใส่เข้าไป

05:27.710 --> 05:31.630
และเพราะเรามีสามตัวอยู่แล้วมันจึงทำสิ่งที่ตลกที่นี่

05:31.820 --> 05:33.910
มาเพิ่มที่นี่ต่อไปและดูว่าเกิดอะไรขึ้น

05:33.950 --> 05:43.810
ฉันจะเพิ่มสองอาจเพิ่ม 12 และสุดท้ายเพิ่ม 14 0

05:43.860 --> 05:46.130
มันทำสิ่งเดียวกันอีกครั้ง

05:46.340 --> 05:56.700
และสิ่งที่เราเพิ่งสังเกตเห็นที่นี่คือสิ่งที่เรียกว่าการชนกันและการชนกันจะมีลักษณะเช่นนี้

05:56.740 --> 05:58.350
เรามีกุญแจ

05:58.600 --> 06:10.720
สมมติว่าเรากำลังใส่ชื่อและหมายเลขโทรศัพท์ของผู้ใช้และในขั้นต้นเราวางจอห์นสมิ ธ กุญแจนี้ถูกแฮชได้รับการวางในพื้นที่ที่อยู่ 1:52

06:10.960 --> 06:16.790
และได้รับการเก็บไว้

06:16.900 --> 06:22.960
โปรดจำไว้ว่าเขาพูดว่ามันเก็บทั้งกุญแจและค่าที่เก็บไว้ในสิ่งที่เรียกว่าถังของ John Smith

06:23.260 --> 06:27.480
ด้วยค่าที่เป็นหมายเลขโทรศัพท์ของเขาที่นี่

06:28.340 --> 06:35.980
จากนั้นเราไปกับลิซ่าสมิ ธ ต่อไปแล้วแซมโดกว่าแซนดร้าโอ้ไม่

06:35.990 --> 06:44.610
ทันทีที่เรามีบ้าน Sandra Dee มันจะกลายเป็นพื้นที่ที่อยู่เดียวกับ

06:45.600 --> 06:53.700
John Smith และเรามีการชนกันและเนื่องจากการชนกันนี้เราต้องการวิธีเก็บผู้ใช้ทั้งสองในพื้นที่ที่อยู่นี้

06:53.700 --> 06:58.730
แล้วจุด

06:58.740 --> 07:01.530
และแซนดร้าดี

07:01.530 --> 07:02.890
และคำใบ้ที่นี่

07:03.030 --> 07:09.880
นี่คือโครงสร้างข้อมูลใหม่ที่เราจะเรียนรู้เกี่ยวกับรายการลิงก์ที่เรียกว่าขึ้นมา

07:10.230 --> 07:17.630
คุณเห็นด้วยตารางแฮชเราไม่สามารถหลีกเลี่ยงการชนเหล่านี้ด้วยข้อมูลที่เพียงพอพร้อมหน่วยความจำที่ จำกัด

07:17.640 --> 07:20.470
เราจะมีการปะทะกันนี้เสมอ

07:20.610 --> 07:37.060
ดังนั้นมีความเป็นไปได้ถ้าเรากลับไปที่ตัวอย่างของเราและฉันรีเฟรชปีเพื่อเริ่มต้นจากศูนย์ที่เราเพิ่มอย่างต่อเนื่องแม้จะมีตารางแฮชที่รวดเร็วจริงๆ

07:38.100 --> 07:42.340
ราคาแพงเพียงเพิ่มไปยังพื้นที่หน่วยความจำเดียวกัน

07:42.930 --> 07:58.380
ซึ่งช้าลงความสามารถของเราในการเข้าถึงหรือแทรกข้อมูลเพราะตอนนี้ถ้าฉันต้องการตรวจสอบสิ่งที่อยู่ในพื้นที่ที่อยู่นี้ฉันต้องไปหนึ่งสองสามสี่ห้าและอื่น ๆ

07:58.570 --> 08:11.270
ในทางทฤษฎีเมื่อคุณมีการชนมันจะทำให้การอ่านและเขียนช้าลงด้วยตารางแฮชที่มี 0 และหารด้วย k โดยที่

08:11.750 --> 08:18.350
k คือขนาดของตารางแฮช

08:18.430 --> 08:26.730
และจำไว้เพราะเราลบค่าคงที่และทำให้สิ่งต่าง ๆ กลายเป็นเรื่องง่ายและใช้งานได้

08:26.730 --> 08:31.290
ตอนนี้แนวร่วมจะเกิดขึ้นในการติดตั้งตารางแฮช

08:31.470 --> 08:42.140
และโชคดีสำหรับคุณคุณจะไม่ต้องนำไปใช้กับตัวเองจริงๆและไม่ใช่คำถามสัมภาษณ์ที่พบบ่อยมาก แต่คุณอยากรู้เกี่ยวกับเรื่องนี้

08:43.060 --> 08:47.170
มีวิธีทั่วไปสองวิธีในการจัดการกับการชนเหล่านี้

08:47.170 --> 08:52.430
ฉันแสดงให้คุณหนึ่งในนั้นมีสิ่งที่เรียกว่ารายการลิงก์ที่เราจะพูดถึงในภายหลัง

08:52.960 --> 09:01.750
แต่ถ้าเราไปที่หน้าตาราง Wikipedia

09:01.810 --> 09:07.480
และดูที่ความละเอียดของการชนคุณจะเห็นว่ามีวิธีการแก้ปัญหาการชนที่แตกต่างกันมากมาย

09:07.730 --> 09:20.240
วิธีที่ฉันแสดงให้คุณเห็นนั้นเรียกว่าการผูกมัดแบบแยกส่วน แต่มีวิธีการที่แตกต่างกันเช่นการเปิดที่อยู่และการกดแป้นโร้ดโรบินซึ่งคุณสามารถอ่านได้หากคุณสนใจในหัวข้อนี้จริงๆ

09:20.660 --> 09:29.070
จุดที่ฉันต้องการทำคือมีข้อเสียเล็กน้อยเมื่อเราพูดถึง lockups

09:29.610 --> 09:34.870
เร็วและตารางแฮชบางครั้งขึ้นอยู่กับฟังก์ชั่นแฮช

09:35.010 --> 09:37.980
อาจใช้เวลาของ

09:38.150 --> 09:43.160
เอาล่ะเรามาต่อและขยายความรู้ของเราเกี่ยวกับตารางแฮชและวิดีโอถัดไป
