WEBVTT

00:01.800 --> 00:13.510
โครงสร้างข้อมูลอื่นลงในตารางแฮชโดยตอนนี้คุณควรรักพวกเขาอย่างแน่นอนเพราะพวกเขามีประโยชน์มากพวกเขาใช้ทุกที่

00:13.680 --> 00:39.420
และสิ่งที่ตลกคือมันอาจเป็นคำถามสัมภาษณ์ที่พบบ่อยที่สุดที่คุณใช้ตารางแฮชเพื่อเพิ่มประสิทธิภาพบางอย่างเหมือนที่เราเห็นในคำถามสัมภาษณ์ของเราโดยใช้ตารางแฮช เวลา.

00:39.420 --> 00:57.190
นี่เป็นคำถามที่เกิดขึ้นซ้ำแล้วซ้ำอีกที่ฉันสัญญากับคุณถ้าเราสังเกตเห็นรูปแบบนี้มันจะมีประโยชน์อย่างยิ่งสำหรับคุณในการสัมภาษณ์และไม่ต้องสงสัยเลยว่าคุณจะมีตัวอย่างที่คุณต้องใช้และทำตามขั้นตอนเดียวกันนี้ ส่วนนี้

00:57.210 --> 01:13.830
เราเรียนรู้ว่าตารางแฮชมีการล็อคอย่างรวดเร็ว แต่จำไว้ว่าเราต้องการความละเอียดในการชนที่ดีโดยปกติแล้วเราไม่จำเป็นต้องกังวลเกี่ยวกับเรื่องนี้เพราะภาษาของเราในคอมพิวเตอร์ใต้กระโปรงหน้ารถดูแลเรา

01:13.830 --> 01:22.020
มันช่วยให้เราสามารถตอบคำถามได้อย่างรวดเร็วและขึ้นอยู่กับประเภทของตารางแฮชเช่นแผนที่ในจาวาสคริปต์เราสามารถมีคีย์ที่ยืดหยุ่นได้แทนอาร์เรย์ที่มี 0

01:22.290 --> 01:31.840
1 2 3 ดัชนีที่เป็นตัวเลข

01:31.850 --> 01:35.950
ข้อเสียของตารางแฮชคือมันเป็นคำสั่ง

01:35.990 --> 01:39.440
มันยากที่จะผ่านทุกอย่างตามลำดับ

01:39.440 --> 01:42.560
และยังมีการวนซ้ำที่ช้า

01:42.590 --> 01:49.550
นั่นคือถ้าฉันต้องการคว้ากุญแจทั้งหมดจากตารางแฮชฉันจะต้องผ่านพื้นที่หน่วยความจำทั้งหมดอย่างที่เราเห็นเมื่อเราสร้างตารางแฮชของเราเองมองที่

01:49.880 --> 01:58.300
OTTF ขนาดใหญ่เราจะเห็นว่าตารางแฮชมีการแทรกการค้นหา

01:58.300 --> 02:05.420
การลบหนึ่งรายการ แต่ในกรณีที่เลวร้ายที่สุดเนื่องจากการชนมีบางส่วน

02:05.470 --> 02:09.200
การดำเนินการทั้งหมดที่อาจเกิดขึ้น

02:09.420 --> 02:16.550
และถ้าเราไปที่แผนที่ความคิดเราสามารถข้ามตารางแฮชออกจากรายการของเราได้

02:16.700 --> 02:19.920
เราเข้าใจถึงความซับซ้อนที่ยิ่งใหญ่

02:20.010 --> 02:29.390
นอกจากนี้เรายังเข้าใจว่าด้วยการชนเราอาจต้องการใช้รายการที่เชื่อมโยงซึ่งเราจะพูดถึงในไม่ช้าในการออกกำลังกายของเรา

02:29.400 --> 02:32.190
เราเพียงแค่ใช้อาร์เรย์

02:32.230 --> 02:43.620
นอกจากนี้เรายังได้เรียนรู้แนวคิดว่าตารางแฮชในการสัมภาษณ์มักจะมีประโยชน์สำหรับการปรับปรุงความซับซ้อนของเวลาโดยเฉพาะลูปซ้อนกัน

02:43.650 --> 02:54.780
ข้อดีข้อเสียของการที่เราสามารถเข้าถึงได้อย่างรวดเร็ว

02:55.530 --> 03:08.930
แต่มีความทรงจำกลับไปที่คำถามของเราว่าเรามีบทเรียนไม่กี่ที่แล้วที่เราต้องค้นหารายการทั่วไปของสองอาร์เรย์เรามีอาร์เรย์หนึ่งและสองอาร์เรย์ อาร์เรย์เหล่านี้มีรายการที่คล้ายกัน

03:09.000 --> 03:10.360
เรามีอันที่ไม่

03:10.650 --> 03:17.570
และเวอร์ชันที่สองที่ x และ x ทั้งสองอาร์เรย์มี X มันจะคืนค่าจริง

03:17.760 --> 03:25.320
การทำซ้ำครั้งแรกของการออกกำลังกายนั้นเราต้องใช้ 2 สำหรับลูปที่ซ้อน

03:25.470 --> 03:41.780
ดังนั้นมันจึงสร้างความซับซ้อนขึ้นมาหนึ่งครั้งโดยใช้แฮชแมปเราสามารถทำได้เพียงวนรอบหนึ่งและเพิ่มประสิทธิภาพของฟังก์ชั่นนี้

03:41.880 --> 03:49.590
อย่างที่ฉันบอกไปก่อนหน้านี้ว่าเป็นรูปแบบทั่วไปที่เราจะพูดถึงในภายหลังในหลักสูตรเช่นกัน

03:49.590 --> 04:05.950
เมื่อเราพูดถึงการเขียนโปรแกรมแบบไดนามิกถ้าเรากลับไปที่สูตรโกงของฉันที่ฉันแบ่งปันกับคุณในตอนเริ่มต้นของหลักสูตรนี้เราสามารถข้ามบางสิ่งออกจากรายการที่เราไม่ได้พูดถึงในรายการตรวจสอบรหัสที่ดี

04:06.440 --> 04:22.210
เราได้พูดคุยเกี่ยวกับการใช้โครงสร้างข้อมูลที่ดีเมื่อใช้ตารางแฮชเหนือความคิดของการใช้รหัสซ้ำและการไม่ทำซ้ำตัวเองเป็นสิ่งที่เราได้ติดตามและควรคุ้นเคยกับพวกเราทุกคน

04:23.350 --> 04:30.770
นอกจากนี้เรายังได้พูดคุยเกี่ยวกับรหัสโมดูลาร์และการทำให้โค้ดอ่านง่ายขึ้นซึ่งช่วยให้โค้ดสามารถบำรุงรักษาและทดสอบได้มากขึ้น

04:30.790 --> 04:41.810
เราได้พูดคุยเกี่ยวกับความถี่ในการสัมภาษณ์ที่เราต้องการหลีกเลี่ยงการแสดงและการดำเนินการยกกำลังสองและเราเห็นว่าเราสามารถทำได้ด้วยตารางแฮช แต่เราเห็นว่าด้วยตารางแฮชเราต้องเพิ่มความซับซ้อนของพื้นที่ให้กับทุกคน

04:44.610 --> 04:53.250
.

04:53.250 --> 04:59.850
และเนื่องจากเราสร้างตัวแปรใหม่นี้ที่ติดตามรายการทั้งหมดในอาร์เรย์

05:00.090 --> 05:01.480
นั่นคือการแลกเปลี่ยน

05:03.210 --> 05:23.180
และจากนั้นเราสามารถข้ามฮิวริสติกสองสามรายการสำหรับผู้ที่ไม่รู้ว่าข้อผิดพลาดนั้นเป็นเหมือนกฎหรือกลเม็ดง่ายๆที่จะเกิดขึ้นซ้ำแล้วซ้ำอีกซึ่งคุณสามารถใช้ในแผนที่แฮชสัมภาษณ์หรือตารางแฮช มักจะเป็นคำตอบในการปรับปรุงความซับซ้อนของเวลา

05:23.470 --> 05:28.080
ตารางแฮชอีกครั้งเป็นวิธีที่ดีที่สุดในการเพิ่มประสิทธิภาพรหัสของคุณ

05:28.990 --> 05:38.440
และการดูเวลาเทียบกับการแลกเปลี่ยนพื้นที่บางครั้งการเก็บสถานะพิเศษและหน่วยความจำอย่างที่เราทำกับตารางแฮชสามารถช่วยเวลาหรือรันไทม์

05:39.260 --> 05:41.750
และในที่สุดก็แลกกับ Space-Time

05:41.750 --> 05:43.770
ตารางแฮชมักจะแก้ปัญหานี้

05:43.820 --> 05:52.290
หลายครั้งที่ใช้พื้นที่มากขึ้น แต่คุณจะได้รับการปรับเวลาให้เหมาะสมกับกระบวนการ

05:52.300 --> 06:02.400
ฉันรู้ว่าเราพูดถึงโครงสร้างข้อมูลเพียงสองเรื่องเท่านั้น แต่ฉันคิดว่าสองสิ่งนี้เป็นก้าวสำคัญที่สุดที่เราจะใช้เพื่อเรียนรู้เกี่ยวกับผู้อื่น

06:02.440 --> 06:03.790
ทำได้ดีมาไกลขนาดนี้

06:03.790 --> 06:08.300
หยุดพักดื่มกาแฟสักหน่อยแล้วฉันจะพบคุณในวิดีโอหน้า

06:08.450 --> 06:08.690
ลาก่อนลาก่อน
