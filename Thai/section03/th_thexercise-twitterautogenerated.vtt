WEBVTT

00:01.220 --> 00:07.480
เอาล่ะมาทำแบบฝึกหัดสนุก ๆ กันเพื่อแสดงให้คุณเห็นว่าคุณเป็นวิศวกรที่ดีขึ้นจริงๆ

00:07.550 --> 00:09.270
มามีสถานการณ์กัน

00:09.290 --> 00:16.740
สมมติว่าคุณกำลังทำงานที่ Twitter และฉันหวังว่าทุกคนจะรู้จัก Twitter ที่นี่

00:16.980 --> 00:26.910
หากคุณกำลังทำงานที่ Twitter

00:27.300 --> 00:36.120
และหัวหน้าของคุณขอให้คุณสร้างฟีเจอร์บางทีอาจเป็นฟีเจอร์ที่อนุญาตให้ทุกคนคลิกปุ่มที่อยู่ถัดจากชื่อของพวกเขา

00:36.210 --> 00:45.840
นั่นคือทวีตแรกของพวกเขาและทวีตล่าสุดของพวกเขาตามสัญลักษณ์ Big-O และสิ่งที่เรารู้เกี่ยวกับสัญลักษณ์ Big-O

00:46.110 --> 00:48.460
สิ่งที่เราสามารถสันนิษฐานได้เกี่ยวกับปัญหานี้

00:50.000 --> 01:03.630
ถ้าไม่มีการเข้ารหัสอะไรที่เรารู้ว่าเราต้องค้นหาก่อนแล้วตามหา Anth หรืออะไรก็ตามที่เป็นรายการสุดท้าย

01:03.710 --> 01:11.960
ตอนนี้เราไม่ทราบว่าทวีตถูกจัดเก็บในฐานข้อมูลของเราหรือไม่ว่า

01:11.960 --> 01:20.500
Twitter จะจัดระเบียบสิ่งเหล่านี้อย่างไร แต่ขึ้นอยู่กับวิธีการจัดเก็บเราอาจสามารถคว้าทวีตพูดในอาร์เรย์

01:20.510 --> 01:25.580
สมมุติว่าอาร์เรย์คงที่และเราจะมีทวีต

01:25.820 --> 01:30.030
และสมมุติว่าเรามีทวีตสามอันที่นี่

01:31.280 --> 01:39.940
มีเพียงสาม tweets ง่าย ๆ ที่จะบอกว่าอันนี้เก่าแก่ที่สุดและอันนี้เป็นล่าสุด

01:40.190 --> 01:46.960
ถ้าเรามีอาร์เรย์ที่นี่เรารู้ว่ามันจะพาเราไปถ้าทวีตถูกเก็บไว้ในอาร์เรย์

01:47.210 --> 01:52.340
มันจะพาเราไปในขณะที่เราไปที่ศูนย์

01:52.400 --> 02:06.770
เราได้ทวีตที่เก่าแก่ที่สุดและถ้าเราไปที่อาร์เรย์อาร์เรย์จุดที่สิบลบหนึ่งเราจะได้สามลบ 1 ดังนั้นนั่นก็คือ 2 นั่นคือ 0 1

02:06.770 --> 02:10.100
2

02:10.100 --> 02:13.220
นี่จะเท่ากับ 2

02:13.550 --> 02:15.060
เราจะได้ 20

02:15.170 --> 02:27.670
ทวีตล่าสุดและเนื่องจากวิธีการทำงานของอาร์เรย์เรารู้ว่าการดำเนินการทั้งสองนี้จะเป็นเช่นนี้เพียงครั้งเดียว

02:28.000 --> 02:33.430
และอันนี้ก็จะเป็น 0 1 หรือเวลาคงที่

02:33.460 --> 02:36.420
ดังนั้นการดำเนินการทั้งหมด 0 2

02:36.430 --> 02:42.910
แต่เราใช้กฎหนังสือของเราอีกครั้ง

02:42.980 --> 02:43.610
นั่นเยี่ยมมาก

02:43.610 --> 02:50.430
เราสร้างแอพพลิเคชั่น Twitter ที่เรียบง่ายและเราสามารถรับข้อมูลนั้นได้อย่างง่ายดาย

02:50.720 --> 02:58.100
แต่ตอนนี้หัวหน้าของเรากลับมาหาเราและบอกว่าเฮ้ฉันต้องการให้คุณเปรียบเทียบวันที่ทวีต

02:58.250 --> 03:05.140
ดังนั้นฉันต้องการให้คุณดูทวีตทุก ๆ ตอนในแต่ละแถว

03:05.320 --> 03:21.240
มีวัตถุกับทวีตแต่ละรายการ

03:21.280 --> 03:25.560
ตอนนี้เรามีและคนนี้ไม่ทวีตมาก

03:25.570 --> 03:28.320
สามทวีตในหกปี

03:28.330 --> 03:37.790
แต่ตอนนี้เราต้องเปรียบเทียบทวีตแต่ละรายการกับทวีตอื่น ๆ ทั้งหมดและเปรียบเทียบวันที่ของพวกเขา

03:38.040 --> 03:40.710
อะไรคือเป้าหมายที่ยิ่งใหญ่ของการดำเนินการนี้

03:43.100 --> 03:49.690
ก็เพราะเรากำลังเปรียบเทียบแต่ละรายการในอาเรย์กับอีกอัน

03:49.700 --> 03:51.140
มันควรจะฟังดูคุ้นหู

03:51.140 --> 03:52.560
เรากำลังทำลูปซ้อนกัน

03:52.640 --> 04:00.870
ดังนั้นนี่จะใช้เวลาโอ้และเวลาอย่างน้อยก็ในขณะที่เรารู้อยู่ตอนนี้

04:01.060 --> 04:09.000
ดังนั้นเราจึงรู้ว่าสิ่งนี้จะต้องใช้เวลามากและเหมาะกับคนที่มีทวีตจำนวนมากมีอินพุตมากมายในอาเรย์

04:09.280 --> 04:12.420
การดำเนินการนี้อาจทำให้เราต้องใช้เงินจำนวนมากกับ Twitter

04:12.580 --> 04:16.100
ดังนั้นคุณอาจต้องการบอกหัวหน้าของคุณว่าเราอาจมีปัญหาอะไรที่นี่

04:16.120 --> 04:32.630
เราอาจต้องทำอย่างอื่นอาจจัดเก็บข้อมูลในรูปแบบที่ดีขึ้นหรือทำสิ่งที่แตกต่างจากโปรแกรมของเราเพื่อหลีกเลี่ยงสิ่งที่อาจไม่มีประสิทธิภาพ

04:33.290 --> 04:42.870
และเพียงแค่คิดแบบนี้ตอนนี้คุณมีความสามารถในการคิดระยะยาวคิดว่า Cote ที่ปรับขนาดได้ตามวิธีที่สนุก

04:43.190 --> 04:51.860
จะเกิดอะไรขึ้นถ้าฉันถามคุณว่าอะไรคือการผ่าตัดและอะไรจะทำให้เราเสียค่าใช้จ่าย

04:51.890 --> 04:59.850
ถ้าฉันมีสตริงและฉันทำ dot plenteous และ javascript นั่นหมายถึงความยาวของสตริงของเรา

05:00.690 --> 05:05.590
นั่นคือ 20 นั่นหมายความว่าเรามี 20 รายการในสตริง

05:05.610 --> 05:13.260
คุณคิดว่าสัญกรณ์

05:13.260 --> 05:22.430
O ที่ยิ่งใหญ่ของเรื่องนี้คืออะไรและนี่เป็นคำถามหลอกลวงและสิ่งที่คุณอาจถูกถามในการสัมภาษณ์เพราะคำตอบของเรื่องนี้ขึ้นอยู่กับภาษาที่คุณใช้

05:22.460 --> 05:37.100
เราจำเป็นต้องรู้ว่าวิธีการทำงานกับสตริงที่นี่และที่สร้างขึ้นในจาวาสคริปต์และคุณจะมีวิธีการในตัวที่แตกต่างกันสำหรับภาษาของคุณตามวิธีการสร้างภาษา

05:37.160 --> 05:47.510
LOD นี้อาจมีทีละหนึ่งและวนซ้ำแต่ละตัวอักษรและนับ 0 1 2 3 4 5 6 7

05:47.510 --> 05:57.680
8 9 10 ตลอดทางจนถึง 20 แต่จาวาสคริปต์จริง ๆ แล้วมีคุณสมบัติความยาวในตัวสตริง

05:58.030 --> 06:05.370
ดังนั้นสำหรับจาวาสคริปต์คุณสมบัติ Daleth นี้เป็นเพียงการค้นหาที่ง่าย

06:05.430 --> 06:07.970
มันไม่ใช่ฟังก์ชั่น

06:08.130 --> 06:10.830
เราไม่ได้ใช้ฟังก์ชันนี้เพื่อคำนวณสิ่งต่าง ๆ

06:10.830 --> 06:15.230
แต่มันเป็นเพียงคุณสมบัติของวัตถุ

06:15.450 --> 06:16.490
และเนื่องจากการที่

06:16.590 --> 06:22.340
และอีกครั้งหากคุณไม่คุ้นเคยกับจาวาสคริปต์อาจทำให้สับสนเล็กน้อย

06:22.410 --> 06:27.660
แนวคิดคือการดำเนินการใน javascript นี้เป็น 0

06:27.840 --> 06:38.240
คอนสแตนติน แต่ไม่รู้ว่าภาษาของคุณทำงานอย่างไรคุณไม่รู้ว่าคุณสมบัติของฉันทำงานอย่างไร

06:38.280 --> 06:50.240
บางทีถ้าคุณมีวิธีที่อาจใช้งานได้ แต่ตอนนี้คุณมีรากฐานที่ทรงพลังสำหรับเสาเพื่อเริ่มคิดเกี่ยวกับรหัสในวิธีที่แตกต่างกัน

06:50.310 --> 06:58.620
การเริ่มดูพื้นที่และเวลาเป็นสิ่งที่มีค่าสำหรับเราในฐานะวิศวกรในฐานะทรัพยากรที่เราต้องระวัง

06:58.620 --> 07:06.320
เราไม่มีทรัพยากรจำนวน จำกัด ที่เราต้องระวังเมื่อเราเขียนโค้ดว่าเราใช้ทรัพยากรเหล่านี้อย่างไร

07:06.450 --> 07:10.800
และนั่นทำให้คุณเป็นวิศวกรที่ดีขึ้น

07:10.820 --> 07:11.660
ฉันจะเห็นในไม่กี่ต่อไป
