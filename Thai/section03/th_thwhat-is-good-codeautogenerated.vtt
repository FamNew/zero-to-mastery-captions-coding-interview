WEBVTT

00:01.230 --> 00:06.800
มีสองสิ่งหลักที่เราพูดถึงเมื่อเราพูดว่านี่เป็นรหัสที่ดี

00:07.050 --> 00:10.890
แต่ก่อนที่ฉันจะแสดงให้คุณเห็นสิ่งที่คุณคิดว่ารหัสที่ดีคือ

00:10.950 --> 00:11.870
ลองคิดดู

00:11.940 --> 00:15.700
คุณจะบอกอะไรกับใครถ้าคุณกำลังขอให้พวกเขาเขียนรหัส

00:16.520 --> 00:24.180
เอาล่ะฉันจะให้คำตอบที่คุณเห็นว่าโค้ดที่ดีสามารถอธิบายได้ในสองสิ่งหรือสองจุด

00:24.410 --> 00:31.700
หนึ่งคือการอ่านคือรหัสของคุณสะอาดโดยทั่วไป

00:31.700 --> 00:33.850
คนอื่นสามารถเข้าใจรหัสของคุณได้หรือไม่

00:34.160 --> 00:37.580
จากนั้นเราก็มีโค้ดที่ปรับขนาดได้

00:37.760 --> 00:38.800
นั่นหมายความว่าอย่างไร.

00:39.140 --> 00:55.280
สัญลักษณ์ Big-O คือสิ่งที่ช่วยให้เราสามารถวัดความคิดของโค้ดที่ปรับขนาดได้นี้ซึ่งสามารถปรับขนาดบางสิ่งที่เรากำลังจะเข้าไปและคุณจะคุ้นเคยมากขึ้นเมื่อเราอ่านหัวข้อนี้

00:55.480 --> 01:03.090
เราจะพูดถึงโค้ดที่อ่านได้ตลอดทั้งหลักสูตรนี้ แต่ให้สัมผัสกับมันมากกว่านี้ในส่วนถัดไป

01:03.220 --> 01:09.240
แต่สำหรับตอนนี้เพราะนี่คือส่วนใหญ่ O เราจึงมุ่งเน้นไปที่แนวคิดของโค้ดที่ปรับขนาดได้

01:09.520 --> 01:12.510
ตกลงสิ่งนี้หมายความว่าจริงๆ

01:12.940 --> 01:17.600
ฉันอยากให้คุณจินตนาการว่าเรามีงานที่เราต้องการทำเค้ก

01:18.010 --> 01:27.030
เรามีสูตรตรงนี้และสูตรนี้เราจะใช้ในครัวของเราเพื่อทำเค้ก

01:27.250 --> 01:31.040
และมีวิธีที่ดีในการอบเค้กและวิธีที่ไม่ดี

01:31.080 --> 01:32.640
ขวา.

01:32.700 --> 01:34.450
เราให้คำแนะนำ

01:34.470 --> 01:35.690
นั่นคือสูตรของพวกเขา

01:35.880 --> 01:46.370
และหวังว่าสูตรและคำแนะนำนี้จะทำงานได้ดีกับห้องครัวของเราเพื่อให้เราสามารถอบเค้กได้อย่างรวดเร็วและเป็นเค้กที่ดี

01:46.680 --> 01:49.300
คอมพิวเตอร์เป็นเครื่องจักร

01:50.020 --> 01:54.180
และเครื่องจักรเหล่านี้ต้องทำงานเพื่อผลิตบางอย่างสำหรับเรา

01:54.370 --> 02:13.660
และคอมพิวเตอร์ทำงานในลักษณะเดียวกับที่เรามีคำแนะนำเหล่านี้ซึ่งเราให้ผ่านรหัสและคำแนะนำเหล่านี้ที่เรามอบให้กับเครื่องคอมพิวเตอร์ของเราคอมพิวเตอร์ของเราให้คำแนะนำเหล่านี้ที่ให้ผลลัพธ์บางอย่างแก่เราเช่นเปิดไฟ

02:13.660 --> 02:18.600
เราให้คำแนะนำคอมพิวเตอร์เพื่อบอกว่าเฮ้เปิดไฟในห้องของเรา

02:18.880 --> 02:33.060
coder คือคนที่ให้คำแนะนำเหล่านี้เหมือนมีหลายวิธีที่จะนำเค้กเข้าครัวหรือเหมือนมีหลายวิธีในการอบเค้กในครัวด้วยส่วนผสมสูตรและคำแนะนำมากมาย

02:33.070 --> 02:36.780
มีหลายวิธีในการแก้ปัญหาผ่านรหัส

02:37.000 --> 02:40.690
พวกมันมีประสิทธิภาพและไม่มีประสิทธิภาพในการให้คำแนะนำ

02:40.720 --> 02:42.950
ดังนั้นไปที่ตัวอย่างการเข้ารหัส

02:43.090 --> 02:49.540
ฉันจะใช้ REPL thudded

02:49.540 --> 02:54.930
และหากคุณไม่คุ้นเคยกับสิ่งนี้ตรวจสอบให้แน่ใจว่าคุณได้ตรวจสอบวิดีโอที่ฉันได้แสดงไว้ด้านล่างที่นี่ซึ่งจะอธิบายวิธีที่คุณสามารถเรียกใช้รหัสของคุณในหลักสูตรนี้

02:54.990 --> 03:02.680
คุณต้องการเพียงแค่เข้าสู่ระบบและฉันได้ตั้งค่าสภาพแวดล้อมจาวาสคริปต์ของฉันที่นี่

03:03.890 --> 03:07.020
และฉันชอบที่มีธีมมืด

03:07.030 --> 03:08.840
ฉันคิดว่ามันดูดีขึ้นสำหรับคุณ

03:09.590 --> 03:16.090
อย่างน้อยสำหรับคุณฉันหวังว่าคุณจะไม่สนใจความมืด แต่ฉันจะสาธิตความคิดนี้ได้อย่างไร

03:16.960 --> 03:18.660
มาทำอะไรสนุก ๆ กันที่นี่

03:18.910 --> 03:23.520
ใช้ javascript ฉันจะพูด Konst nimo

03:23.760 --> 03:36.890
เรามีอาร์เรย์ที่มีสตริง Nimo และเราต้องการสร้างฟังก์ชั่นที่นี่ที่เรียกว่า Find

03:36.890 --> 03:46.960
Nimo และฟังก์ชั่นนี้จะได้รับอาร์เรย์และมันจะเป็นฟังก์ชั่นที่ง่ายมาก

03:47.010 --> 03:52.890
เราจะสร้างวนซ้ำที่คุณจะเห็นในภาษาส่วนใหญ่ในจาวาสคริปต์

03:52.890 --> 04:01.290
เราทำได้อย่างง่ายดายโดยบอกว่า 4 และจะให้ฉันเท่ากับศูนย์

04:01.870 --> 04:15.230
และตราบใดที่ฉันยังเล็กกว่าอาเรย์ดอทจุดนั่นคือความยาวของอาเรย์ของเราแล้วเราจะเพิ่มขึ้นทุกครั้ง

04:16.810 --> 04:33.360
อีกครั้งนี่ไม่ใช่หลักสูตรจาวาสคริปต์ดังนั้นหวังว่านี่จะเป็นที่คุ้นเคยกับคุณทุกประเภทของวงที่คุณต้องการในภาษาของคุณและเราจะพูดง่ายๆว่า

04:33.470 --> 04:42.370
ดังนั้นถ้าเราพบ Nemo เราก็แค่ไปที่คอนโซล Daut log พบ Nemo

04:42.810 --> 04:43.570
เราตื่นเต้นมาก

04:43.620 --> 04:45.850
สนุก.

04:45.850 --> 04:46.500
เอาล่ะ

04:46.690 --> 04:47.560
แค่นั้นแหละ.

04:47.600 --> 04:56.420
และถ้าฉันเพียงแค่เรียกใช้ฟังก์ชั่นตอนนี้พบ Nemo และเราจะให้อาเรย์

04:57.780 --> 05:03.940
Nimo ตรงนี้และทำให้แน่ใจว่าฉันสะกดคำที่เหมาะสมแล้วเราคลิกเรียกใช้ที่นี่

05:05.370 --> 05:10.690
เราพบว่า Nimo อยู่บนเลนที่ถูกต้องทำให้นี่ใหญ่ขึ้นอีกนิดเพื่อให้คุณมองเห็นได้

05:10.730 --> 05:13.150
ดังนั้นเราจึงพบนีโม

05:13.280 --> 05:15.830
นี่คือคำสั่งที่เราให้คอมพิวเตอร์

05:16.130 --> 05:22.190
เราบอกว่าเรามีอาร์เรย์และเรามีฟังก์ชั่นการกระทำที่เราต้องการดำเนินการเรียกว่า find Nemo ที่ใช้อาร์เรย์ซึ่งเป็น

05:22.210 --> 05:25.950
nimo

05:26.130 --> 05:29.600
มันจะได้รับอาร์เรย์นี้

05:29.800 --> 05:32.030
จากนั้นมันจะวนรอบอาร์เรย์

05:32.560 --> 05:35.420
เราจะบอกว่าฉันจะเท่ากับศูนย์

05:35.860 --> 05:45.110
และเพราะตอนนี้ฉันมีค่าเป็นศูนย์และความยาวของอาเรย์คือสิ่งที่เราจะต้องผ่านลูป

05:45.370 --> 05:51.580
เราจะตรวจสอบว่าดัชนีอาร์เรย์ของ 0 ซึ่งเป็น Nimo ตรงนี้หรือไม่

05:51.580 --> 05:56.080
นี่จะกลายเป็นนิโม

05:56.350 --> 06:02.350
และเพราะนี่เป็นความจริงเราจะต่อต้าน บันทึกพบว่า nimo

06:02.380 --> 06:05.110
ตอนนี้ทำไมฉันถึงแสดงตัวอย่างนี้ให้คุณดู

06:05.140 --> 06:17.120
ขอผมนำสิ่งนี้กลับมาในแบบที่ฉันแสดงให้คุณเห็นตัวอย่างนี้เพราะนี่คือคำสั่งที่เราให้คอมพิวเตอร์ของเราเพื่อค้นหานิโม

06:17.260 --> 06:20.020
คุณเห็นเราเรียกสิ่งนี้ว่ารันไทม์

06:20.020 --> 06:26.200
ใช้เวลานานแค่ไหนในการรันปัญหาบางอย่างผ่านฟังก์ชั่นหรืองาน

06:26.260 --> 06:30.820
เราจะวัดโอใหญ่ได้อย่างไรเช่นนี้

06:30.880 --> 06:33.300
หรือประสิทธิภาพของรหัสนี้

06:34.970 --> 06:37.740
ในวิดีโอหน้าเราจะทำให้ลึกลงไปอีกหน่อย

06:37.770 --> 06:44.590
เราจะลองและวัดประสิทธิภาพของรหัสนี้และดูว่าเกิดอะไรขึ้นเมื่ออาร์เรย์มีขนาดใหญ่ขึ้นเรื่อย ๆ

06:45.440 --> 06:52.250
และเราจะเชื่อมโยงสิ่งต่าง ๆ เข้าด้วยกันกับวิธีที่สามารถปรับขนาดได้และวิธีการใหญ่ ๆ ของ

06:52.390 --> 06:56.180
O ช่วยให้เราสามารถวัดความสามารถในการปรับขนาดได้ในวิดีโอหน้า
