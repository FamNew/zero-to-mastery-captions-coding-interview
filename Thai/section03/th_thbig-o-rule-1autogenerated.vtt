WEBVTT

00:01.130 --> 00:02.120
ยินดีต้อนรับกลับ.

00:02.120 --> 00:09.440
มาพูดคุยเกี่ยวกับบทบาทแรกเมื่อพูดถึง big-O ซึ่งเป็นกรณีที่เลวร้ายที่สุดเมื่อคำนวณขนาดใหญ่

00:09.460 --> 00:14.040
โอ้เราคิดถึงกรณีที่แย่ที่สุดเสมอ

00:14.150 --> 00:18.120
ฉันหมายความว่ายังไงถ้าเรากลับไปหา Finding

00:20.940 --> 00:28.690
Nemo และค้นหาฟังก์ชั่น Nemo คุณอาจจะกรีดร้องที่ฉันขณะที่ฉันกำลังใช้งานฟังก์ชั่นบอกว่า Andre

00:28.690 --> 00:31.080
นี่ไม่มีประสิทธิภาพ

00:31.090 --> 00:32.190
คุณกำลังทำอะไร.

00:32.590 --> 00:40.230
เพราะถ้าคุณดูที่ฟังก์ชั่นนี้เราจะวนรอบอาร์เรย์ทั้งหมดเพื่อค้นหา Nemo

00:41.520 --> 00:49.170
จำไว้ว่าเรามีอาร์เรย์ทุกตัวที่มีตัวละครต่างกันประมาณ 10 ตัวจาก Finding Nemo

00:50.290 --> 00:56.980
นีโม่เป็นเพียงสมาชิกหนึ่งสองสามสี่ในอาเรย์นี้

00:57.400 --> 01:02.600
และเมื่อเราเรียกใช้ฟังก์ชันนี้เราพบ Nemo

01:03.020 --> 01:11.240
แต่สิ่งที่ตลกก็คือฟังก์ชั่นนี้วิ่งได้ 10 ครั้งไม่ใช่สี่เท่า

01:11.450 --> 01:30.120
ถ้าฉันทำบันทึกคอนโซลที่นี่และฉันบอกว่าทำงานและให้คลิกที่นี่เราจะเห็นว่าฟังก์ชั่นนี้วิ่งหนึ่งสองสามสี่ห้าหกเจ็ดแปดเก้าสิบ

01:30.380 --> 01:36.300
ฉันหมายความว่าเราได้พบ Nemo แล้วการวิ่งเหล่านี้ค่อนข้างสิ้นเปลือง

01:36.430 --> 01:41.390
ดังนั้นเราสามารถทำให้ฟังก์ชั่นนี้มีประสิทธิภาพมากขึ้นเล็กน้อยใน javascript

01:41.410 --> 01:48.050
เราสามารถมีสิ่งที่เรียกว่าแตก

01:48.210 --> 01:53.020
และภาษาที่แตกต่างกันมีวิธีการออกจากวงที่แตกต่างกัน

01:53.090 --> 02:04.330
หากพบเงื่อนไขในกรณีของเราหากเราพบว่า Nimo เพิ่งแตกออกจากลูปนี้ถ้าฉันทำและคลิกเรียกใช้จะได้รับ

02:04.400 --> 02:09.390
เมื่อเราพบ Nimo เราก็เสร็จแล้วเราจะไม่วนซ้ำรายการที่เหลือ

02:09.410 --> 02:10.450
ขอแสดงความยินดี

02:10.490 --> 02:13.970
เราเพิ่งทำให้โค้ดของเรามีประสิทธิภาพมากขึ้นเล็กน้อย

02:14.420 --> 02:15.430
นั่นเป็นสิ่งที่ดีที่ถูกต้อง

02:16.420 --> 02:19.050
เมื่อมาถึงโอใหญ่

02:19.570 --> 02:21.160
แม้ว่านี่จะเป็นสิ่งสำคัญ

02:21.220 --> 02:27.130
และเมื่อคุณเขียนโค้ดที่ดีนี่คือสิ่งที่เราต้องการทำในรูปแบบใหญ่ ๆ ของสิ่งต่าง ๆ

02:27.160 --> 02:32.520
Big-O สนใจเฉพาะกรณีที่เลวร้ายที่สุดสิ่งที่เป็นกรณีที่แย่ที่สุดที่นี่

02:32.680 --> 02:40.480
กรณีที่เลวร้ายที่สุดก็คือ Nimo ได้กำหนดให้รายการที่สี่อยู่ท้ายสุด

02:43.480 --> 02:51.730
ดังนั้นแม้ว่าเราจะมีคำสั่งแบ่งนี้เรายังคงทำงานเป็น 10 เท่าเพราะท้ายที่สุด

02:51.850 --> 02:56.450
กรณีที่ดีที่สุดคือถ้า Nemos ในตอนเริ่มต้นและเราต้องวนซ้ำครั้งเดียวเท่านั้น

02:56.590 --> 03:05.810
แต่กรณีที่แย่ที่สุดที่เรายังต้องผ่าน 10 ลูปยังคงเป็นเรื่องใหญ่

03:05.840 --> 03:20.990
และนี่คือกฎข้อแรกของเรากฎข้อแรกคือเราใส่ใจเสมอว่าอะไรคือสถานการณ์กรณีที่เลวร้ายที่สุดเพราะเมื่อเราพูดถึงความสามารถในการปรับขนาดเราไม่สามารถสรุปได้ว่าสิ่งต่าง ๆ จะไปได้ด้วยดีแม้ว่าฟังก์ชัน Find Nimo

03:21.140 --> 03:33.630
Nimo เป็นรายการแรกในอาร์เรย์ที่ไม่สำคัญในรูปแบบที่ยิ่งใหญ่ของสิ่งต่าง ๆ

03:33.840 --> 03:39.720
เพราะเราไม่สามารถมั่นใจได้ว่าข้อมูลจะเป็นอย่างไร

03:39.750 --> 03:54.160
เราจะสมมติว่าการเดินทางทั้งหมดเป็นเวลาเชิงเส้นอีกครั้งหากเราพบกล่องสีเหลืองและกล่องสีเหลืองอยู่ท้ายสุด

03:54.340 --> 03:58.060
เราต้องย้ำผ่านกล่องทั้งหมด

03:58.310 --> 04:07.360
ถ้ากล่องสีเหลืองที่จุดเริ่มต้นคุณเห็นว่าเราไม่ต้องทำซ้ำผ่านกล่องเหล่านี้ แต่บิ๊กโอไม่สนใจจริงๆ

04:07.360 --> 04:17.070
แม้ว่าฟังก์ชั่นนี้ใช่จะมีประสิทธิภาพมากขึ้นในตอนท้ายของวันเมื่อเราพูดถึง big-O เรากำลังพูดถึงกรณีที่เลวร้ายที่สุด

04:17.100 --> 04:19.300
เอาล่ะฉันหวังว่าคุณจะเข้าใจจุดนั้น

04:19.360 --> 04:24.950
ฉันรู้สึกเหมือนฉันถูกทุบตีจนเกินไปดังนั้นตอนนี้คุณควรจะรู้สึกดี

04:25.120 --> 04:27.530
มาพูดคุยเกี่ยวกับบทบาทต่อไปในวิดีโอหน้า
