WEBVTT

00:00.660 --> 00:01.810
ยินดีต้อนรับกลับ.

00:01.920 --> 00:07.860
ตอนนี้เราเข้าไปในส่วนโครงสร้างข้อมูลทรีตรงนี้

00:08.100 --> 00:17.980
และอย่างที่เราเห็นต้นไม้หรือรายการที่เชื่อมโยงเป็นต้นไม้ชนิดหนึ่งที่เราได้พูดคุยกันแล้ว แต่มีบางอย่างที่นี่ที่เรายังไม่ได้พูดถึง

00:18.800 --> 00:26.680
ดังนั้นเราจะพูดถึงเรื่องนี้และทำความคุ้นเคยกับค่าเฉลี่ยประเภทต่าง ๆ โดยเริ่มจากต้นไม้ไบนารี

00:27.080 --> 00:27.950
ลองเข้าไปดูกัน

00:29.710 --> 00:38.540
ต้นไม้ไบนารีเป็นสิ่งที่คุณเคยเห็นมาก่อนและเป็นต้นไม้ชนิดหนึ่งที่มีกฎบางอย่างที่ใช้กับมัน

00:39.040 --> 00:50.990
แต่พวกมันค่อนข้างตรงไปตรงมาแต่ละโหนดสามารถมี 0 1 หรือ 2 โหนดและเด็กแต่ละคนสามารถมีผู้ปกครองได้เพียงคนเดียว

00:51.010 --> 00:53.010
นี่คือต้นไม้ไบนารี

00:53.020 --> 01:01.230
อย่างไรก็ตามนี่ไม่ใช่ต้นไม้ไบนารีเพราะมีลูกสามคนหรืออย่างน้อยหนึ่งใน NOS มีลูกสามคน

01:02.340 --> 01:06.040
และแต่ละโหนดแสดงถึงสถานะที่แน่นอน

01:06.510 --> 01:14.360
และนี่คล้ายกับสิ่งที่เราทำในอดีตโดยเฉพาะกับรายการที่เชื่อมโยงถ้าเราดูตัวอย่างที่นี่

01:14.360 --> 01:44.780
เพื่อให้ฉันสร้างต้นไม้ไบนารีได้ฉันสามารถสร้างฟังก์ชั่นบอกว่าต้นไม้ไบนารีและต้นไม้ไบนารีนี้อาจจะได้รับค่าและต้นไม้ไบนารีหรือในกรณีของเราทำโหนดต้นไม้ไบนารีจะมีค่านี้เกี่ยวข้องกับมัน ซึ่งเป็นค่าที่เราให้ไว้ภายในฟังก์ชัน

01:44.780 --> 01:52.570
แล้วเรามีคุณสมบัติสองอย่างซึ่งเป็นตัวชี้ไปทางด้านซ้ายของต้นไม้

01:52.730 --> 02:11.410
และตัวชี้ไปทางด้านขวาของทรีนั่นคือสิ่งนี้ที่ถูกต้องและนั่นคือเราสามารถแสดงโหนดต้นไม้ไบนารีเพียงแค่มีค่าและจากนั้นคุณสมบัติด้านซ้ายและหรือขวาคล้ายกับสิ่งที่เราทำ

02:11.440 --> 02:14.920
หรือหลักการที่คล้ายกันมากกับสิ่งที่เราทำกับรายการที่เชื่อมโยง

02:15.840 --> 02:23.790
ตอนนี้เรากำลังจะเขียนรหัสต้นไม้และสร้างโครงสร้างข้อมูลแบบต้นไม้เหมือนกับที่เรามีสำหรับโครงสร้างข้อมูลในอดีต

02:24.060 --> 02:29.860
แต่ฉันต้องการชี้ให้เห็นคำศัพท์สองสามคำที่เราอาจเจอและนั่นก็สำคัญ

02:31.060 --> 02:36.960
ในกรณีนี้เรากำลังดูสิ่งที่เรียกว่าต้นไม้ที่เต็มสมบูรณ์

02:37.030 --> 02:40.930
นั่นหมายความว่าไม่มีช่องว่างในต้นไม้

02:40.930 --> 02:42.090
ให้ฉันแสดงให้คุณเห็นว่าฉันหมายถึงอะไร

02:43.010 --> 02:47.610
ต้นไม้ไบนารีสมบูรณ์แบบมีทุกสิ่งที่กรอก

02:47.660 --> 02:59.740
นั่นหมายความว่าโหนดใบไม้ทั้งหมดเต็มและไม่มีสิ่งใดมีลูกเพียงคนเดียวโหนดหนึ่งอาจมีลูกเป็นศูนย์หรือสองลูก

02:59.930 --> 03:05.700
และชั้นล่างของต้นไม้เต็มไปหมด

03:05.750 --> 03:17.090
ไม่มีอะไรหายไปเมื่อเทียบกับต้นไม้ไบนารีเต็มซึ่งเพียงแค่บอกว่าโหนดมีทั้งลูก 0 หรือ 2 แต่ไม่เคยมีลูกหนึ่งคน

03:17.090 --> 03:19.120
ตอนนี้เหตุใดจึงสำคัญ

03:19.250 --> 03:35.640
เนื่องจากต้นไม้ไบนารีประเภทนี้โดยเฉพาะต้นไม้ไบนารีที่สมบูรณ์แบบนั้นมีประสิทธิภาพจริงๆและมีบางสิ่งที่เป็นที่ต้องการเมื่อต้นไม้ไบนารีสมบูรณ์แบบเช่นนี้พวกเขามีคุณสมบัติที่น่าสนใจสองอย่าง

03:35.660 --> 03:43.590
อย่างแรกคือจำนวนโหนดทั้งหมดในแต่ละระดับเพิ่มขึ้นเป็นสองเท่าเมื่อเราเลื่อนต้นไม้

03:43.670 --> 03:48.080
ตัวอย่างเช่นที่นี่เรามีหนึ่งโหนดในระดับถัดไปที่เรามีสอง

03:48.170 --> 03:50.840
ดังนั้นเราจึงเพิ่มโหนดในระดับต่อไป

03:50.840 --> 03:53.490
เรามีหนึ่งสองสามสี่

03:53.570 --> 04:02.170
ดังนั้นเราจึงต้องทำสองเท่าถ้าเรามีระดับ nother นั่นคือต้นไม้ไบนารีที่สมบูรณ์แบบที่เรามี 1 2 3 4 5 6 7

04:02.170 --> 04:03.530
8

04:03.650 --> 04:06.510
ดังนั้นเราจึงเพิ่มเป็นสองเท่าทุกครั้ง

04:06.610 --> 04:18.430
คุณสมบัติที่สำคัญที่สองคือจำนวนโหนดในระดับสุดท้ายเท่ากับผลรวมของจำนวนโหนดในระดับอื่นทั้งหมดบวก 1

04:18.460 --> 04:18.700
เอาล่ะ

04:18.700 --> 04:20.380
นั่นทำให้สับสนในสิ่งที่ฉันหมายถึง

04:20.440 --> 04:30.220
ทีนี้ถ้าผมใช้ระดับล่างนั่นคือ 1 2 3 สำหรับคุณสมบัติที่สองระบุว่าโหนดทั้งหมดที่อยู่เหนือมันบวก 1

04:30.250 --> 04:33.990
จะเท่ากับระดับล่าง

04:34.000 --> 04:37.910
ดังนั้นหนึ่งสองสามบวกหนึ่งเท่ากับสี่

04:37.930 --> 04:46.870
นั่นคือสิ่งที่เรามีที่ด้านล่างซึ่งหมายความว่าอีกประมาณครึ่งหนึ่งของโหนดของเราอยู่ในระดับสุดท้าย

04:46.960 --> 04:52.920
และนี่เป็นจุดที่น่าสนใจมากโดยการจัดระเบียบข้อมูลของเราด้วยวิธีนี้

04:53.080 --> 04:56.830
เรามีข้อมูลครึ่งนี้ในระดับล่างสุด

04:56.950 --> 05:11.910
ถ้าอย่างใดเราสามารถหลีกเลี่ยงการเยี่ยมชมทุกโหนดแม้ว่าโหนดที่เรากำลังมองหาอยู่ที่ด้านล่างสุดบางทีอาจมีประสิทธิภาพบางอย่างที่เรามีและคุณจะถูกเพราะโครงสร้างประเภทนี้คุณจะเห็น สัญกรณ์ใหม่ของ big-O

05:12.540 --> 05:27.230
บางอย่างที่เรารอคอยมานานเป็นเวลานานและเมื่อเราเริ่มพูดถึงสิ่งที่เรียกว่าต้นไม้ค้นหาแบบไบนารีคุณจะเริ่มเห็นสัญลักษณ์นี้

05:27.570 --> 05:30.680
ใช่ในที่สุดเราก็ถึงสัญกรณ์ O ที่ยิ่งใหญ่อีกครั้ง

05:30.840 --> 05:34.090
แต่มันหมายความว่าอย่างไรในวิดีโอหน้า

05:34.110 --> 05:39.600
ฉันต้องการพูดคุยเกี่ยวกับการเข้าสู่ระบบทั้งหมดและทำไมต้นไม้ให้เรามีสิ่งนี้

05:39.690 --> 05:41.530
และสิ่งที่เกี่ยวข้องคืออะไร

05:42.250 --> 05:43.370
ฉันจะดูในถัดไป
