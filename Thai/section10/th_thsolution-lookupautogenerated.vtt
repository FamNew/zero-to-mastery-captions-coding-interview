WEBVTT

00:00.890 --> 00:01.750
ยินดีต้อนรับกลับ.

00:02.150 --> 00:06.040
ลองและใช้ฟังก์ชั่นค้นหาหรือฟังก์ชั่นการค้นหา

00:06.110 --> 00:12.440
เราต้องการตรวจสอบว่ามีรายการหรือโหนดอยู่ในแผนผังของเราหรือไม่

00:12.490 --> 00:14.920
เรามาดูกันว่าเราจะไปเกี่ยวกับเรื่องนี้อย่างไร

00:14.980 --> 00:19.930
สิ่งแรกที่ฉันอยากทำคือตรวจสอบว่ามีสิ่งเช่นโหนดรูทหรือไม่

00:19.960 --> 00:22.470
ถ้ามันว่างเปล่า

00:22.610 --> 00:25.280
ดังนั้นฉันใช้ฉันสามารถทำสิ่งนี้ได้

00:25.310 --> 00:27.650
เท่ากับเท่ากับเท่ากับ

00:27.980 --> 00:32.220
เพื่อตรวจสอบว่าเส้นทางว่างเปล่าหรือฉันสามารถใช้เครื่องหมายอัศเจรีย์ใน Javascript

00:34.070 --> 00:40.600
และเราจะบอกว่าคืนเท็จเพราะถ้าไม่มีรากมันก็ไม่สำคัญ

00:40.610 --> 00:43.470
เราจะไม่พบบันทึกย่อนั้น

00:44.680 --> 00:56.380
มิฉะนั้นเราจะพูดอีกครั้งให้โน้ตปัจจุบันเท่ากับจุดรากนี้คล้ายกับที่เราทำข้างบน

00:56.380 --> 01:03.780
จำเราไว้ที่นี่และคุณจะสังเกตเห็นความคล้ายคลึงกันกับสิ่งที่เราทำเมื่อเราตอบ

01:03.930 --> 01:12.390
เรายังคงต้องผ่านทรีของเรา

01:12.420 --> 01:26.390
แต่ขณะที่ลูปของเราจะหยุดเมื่อใดก็ตามที่โหนดปัจจุบันไม่มีอยู่อีกต่อไปหรือเราไม่มีโหนดที่ต้องผ่านอีกต่อไปเพราะเมื่อเราผ่านการค้นหาแบบไบนารี เราไม่พบสิ่งที่เรากำลังมองหา

01:27.180 --> 01:46.420
ดังนั้นในกรณีนี้ฉันแค่จะบอกว่าถ้าค่าที่เรากำลังมองหาน้อยกว่าค่าโหนดปัจจุบันในกรณีนั้นโหนดปัจจุบันจะเท่ากับปัจจุบัน

01:46.450 --> 01:52.670
สังเกตจุดที่เหลือเพราะตอนนี้เราอยากจะไปทางซ้ายถ้าค่านั้นน้อยกว่าค่าโหนดปัจจุบัน

01:52.720 --> 01:55.930
นั่นหมายความว่ามันไม่เหมือนกันไม่ใช่สิ่งที่เรากำลังมองหา

01:56.050 --> 02:02.170
ไปทางซ้ายเพราะนั่นคือสิ่งที่ฉันสามารถหาบางสิ่งที่อาจน้อยกว่าโน้ตปัจจุบัน

02:02.230 --> 02:07.120
และคุณจะใช้คำสั่ง ELSE IF ที่นี่ซึ่งระบุเงื่อนไขอื่น

02:07.150 --> 02:18.660
ดังนั้นหากสิ่งนั้นไม่ตรงกับกระแสถ้าค่ามากกว่าค่าปมปัจจุบันคุณคิดว่าเราทำอะไร

02:18.850 --> 02:20.600
ทีนี้เราไปทางขวา

02:20.890 --> 02:26.480
ดังนั้นเราจะบอกว่าโหนด Curren ตอนนี้จะเป็นโหนด Daut ปัจจุบัน

02:26.620 --> 02:31.520
ดังนั้นเราแค่ตรวจสอบทางด้านขวาของเราแล้วในที่สุด

02:31.520 --> 02:45.500
มิฉะนั้นถ้านั่นเป็นเงื่อนไขอื่นและเราไม่สามารถพูดได้ว่าโหนดปัจจุบันเป็นค่าเท่ากับมูลค่าจริงที่เรากำลังมองหา

02:45.500 --> 02:46.730
นั่นหมายถึงเราได้นัด

02:46.730 --> 02:48.680
นั่นหมายความว่าโหนดนั้นมีอยู่

02:48.770 --> 02:52.300
ดังนั้นเราจะส่งคืนโน้ตปัจจุบัน

02:52.610 --> 02:53.690
ดีและเรียบง่าย

02:54.000 --> 03:00.020
และในที่สุดเพราะเราไม่ได้คืนสิ่งใดเราเพียงแค่วนลูปในขณะที่จนกว่าเราจะพบโหนดปัจจุบันที่เราส่งคืนโหนดปัจจุบันหรือ

03:00.020 --> 03:10.070
Kerno กลายเป็นโมฆะเพราะเราหาอะไรไม่พบ

03:10.120 --> 03:12.470
เพียงแค่กลับเท็จ

03:12.520 --> 03:20.190
วิธีเดียวที่เราคืนสิ่งที่ไม่ใช่เท็จคือเมื่อเราพบบันทึกของเราด้วยค่าที่ตรงกัน

03:20.290 --> 03:21.240
ลองดูอันนี้กัน

03:21.460 --> 03:34.160
ถ้าตอนนี้ฉันเรียกใช้จุดต้นไม้ค้นหา 9 และฉันจะแสดงความคิดเห็นนี้เพราะเราไม่จำเป็นต้องตรวจสอบว่าต้นไม้ของเรากำลังทำ

03:34.260 --> 03:36.740
ถ้าฉันวิ่งไปที่นั่นคุณไป

03:36.750 --> 03:42.890
ฉันได้รับ 9 โหนดที่มีการอ้างอิงถึงโหนดอื่น ๆ ทั้งหมดที่อยู่ข้างใต้

03:42.930 --> 03:47.250
ถ้าฉันค้นหา 90 ฉันจะผิดเพราะไม่มีอยู่จริง

03:47.270 --> 03:51.000
มีประมาณ 20 อันที่มีอยู่แล้วเราพบว่า 20

03:51.000 --> 03:56.250
ประมาณ 170 ใช่แล้วเราพบ 170

03:56.250 --> 04:04.230
มันเป็นโหนด แต่ไม่มีการอ้างอิงทางซ้ายและขวาเพราะมันเป็น leafnode และสุดท้าย 171 ก็เป็นเท็จเพราะไม่มี

04:04.380 --> 04:07.850
Walden อยู่

04:07.930 --> 04:08.980
มาไกลขนาดนี้

04:08.980 --> 04:12.820
หวังว่าคุณจะสามารถใช้แผนภูมิการค้นหาแบบไบนารี่ของคุณเองได้

04:12.970 --> 04:16.150
เมื่อคุณได้รับมันก็ไม่เลว

04:17.650 --> 04:24.250
ในตอนท้ายของแต่ละบรรทัดควรมีเหตุผลและการผ่านต้นไม้ควรทำให้คุณเข้าใจ

04:24.250 --> 04:37.870
นอกจากนี้เรายังเข้าใจว่าทำไมเราจึงมีบันทึกจำนวนมากและแม้ว่าเราจะมีลูปที่นี่เช่นกันในขณะที่ลูปเราไม่ได้วนซ้ำทุกโหนดเดียวที่เราใช้ซ้ำเท่านั้น

04:37.900 --> 04:41.140
แบ่งและพิชิตสิ่งที่คุณจะได้ยินมากมาย

04:41.200 --> 04:46.910
หารและพิชิตก็หมายความว่าเราแบ่งกันเพื่อที่เราจะไม่ได้เข้าไปดูโน้ตทั้งหมด

04:46.960 --> 04:52.200
แต่ละโหนดที่เราเข้าชมเราตัดสินใจว่าจะไปทางซ้ายหรือขวา

04:52.270 --> 04:53.690
ฉันจะดูในถัดไป

04:53.920 --> 04:54.150
บ๊อบบี้.
