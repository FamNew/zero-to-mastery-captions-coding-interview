WEBVTT

00:00.520 --> 00:01.870
ยินดีต้อนรับกลับ.

00:01.870 --> 00:07.720
เราได้พูดคุยเกี่ยวกับต้นไม้ค้นหาแบบทวิภาคต้นไม้แล้วเราเรียนรู้เกี่ยวกับวิธีการสร้างสมดุลต้นไม้เหล่านั้นและความซับซ้อนของเวลาที่เกี่ยวข้องกับ

00:08.020 --> 00:18.540
BSD และฉันต้องการพูดคุยกับคุณเกี่ยวกับ Treece ทั่วไปสองชนิด

00:18.610 --> 00:24.560
หนึ่งคือฮีปและอีกอันคือทรีหรือทรีในวิดีโอนี้

00:24.640 --> 00:27.600
มาพูดถึงเรื่องแกะกัน

00:27.760 --> 00:34.060
ตอนนี้เมื่อพูดถึง heap เรามักจะพูดถึง binary binary เหมือนกับที่เรามีกับ binary

00:34.240 --> 00:35.390
tree

00:35.410 --> 00:41.070
นั่นหมายความว่าจะมีเพียงเด็กสองคนที่จะได้รับโน้ต

00:41.130 --> 00:46.230
ทีนี้ทำไมมันถึงมีประโยชน์และแตกต่างจากต้นไม้ไบนารี

00:46.230 --> 00:47.130
ไปดูกัน

00:48.570 --> 00:49.810
ต้นไม้ไบนารี

00:50.220 --> 00:52.430
เด็กทุกคนเป็นของผู้ปกครอง

00:52.440 --> 00:56.790
โปรดทราบว่ามีความสำคัญหรือความคุ้มค่ามากขึ้น

00:56.790 --> 01:16.420
หากคุณดูที่นี่เด็กทุกคนที่อายุเจ็ดสิบสองและสามสิบสามต่ำกว่าหนึ่งในเจ็ดสิบสองสูงกว่าสองและสี่สิบห้าและสามสิบสามสูงกว่าห้าและหนึ่งนี้เรียกว่ากองสูงสุด

01:16.440 --> 01:23.630
นอกจากนี้ยังมีบางสิ่งที่เรียกว่า min heap ซึ่งตรงกันข้ามกับที่โหนดรูทเล็กที่สุด

01:23.640 --> 01:25.680
ทีนี้ค่านี้สามารถเป็นอะไรก็ได้ที่คุณต้องการ

01:25.680 --> 01:27.720
มันอาจเป็นชื่อของบุคคล

01:27.720 --> 01:29.270
มันอาจเป็นตัวเลข

01:29.340 --> 01:31.960
มันสามารถเป็นอะไรก็ได้จริงๆเพราะเป็นโน้ต

01:32.240 --> 01:51.180
แต่อย่างที่คุณเห็นทั้งหมดที่เรากำลังทำอยู่นั่นคือในฮีปแบบไบนารีฮีปทุกโหนดในระดับบนสุดมีค่ามากกว่าทุกโหนดในระดับถัดลงและฮีปสามารถใช้ในอัลกอริทึมใดก็ได้ที่การสั่งซื้อมีความสำคัญ

01:51.180 --> 01:57.630
และในขณะที่เรากำลังจะพูดถึงมันมักจะใช้เมื่อมันมาถึงลำดับความสำคัญคิว

01:57.780 --> 02:07.770
ขณะนี้มีการแข่งขันที่เราเข้าถึงแบบสุ่มมันอนุญาตให้เราเข้าถึงองค์ประกอบใด ๆ ภายในพวกเขาโดยใช้ดัชนีในรายการที่เชื่อมโยง

02:07.770 --> 02:15.360
เราสามารถเปลี่ยนแปลงสิ่งต่าง ๆ แบบไดนามิกไม่เหมือนอาร์เรย์

02:15.360 --> 02:20.930
แต่การค้นหาบางอย่างภายในนั้นเป็นเวลาเชิงเส้นทั้งหมดเพราะเราต้องผ่านรายการลิงก์ที่นี่แตกต่างกันเล็กน้อย

02:20.970 --> 02:28.590
คุณไม่สามารถเข้าถึงแบบสุ่มทั้งหมดอย่างที่เราทำกับอาร์เรย์เป็นตารางแฮชได้เนื่องจากเรารู้เกี่ยวกับต้นไม้ที่เราต้องทำ traversals

02:28.600 --> 02:34.930
แบบใดตอนหนึ่งเมื่อเปรียบเทียบกับแผนภูมิการค้นหาแบบไบนารี

02:35.370 --> 02:38.420
เงยหน้าขึ้นมองคือ

02:38.580 --> 02:45.720
และมันไม่ใช่บันทึกทั้งหมดและเพราะมันสั่งน้อยกว่าแผนภูมิการค้นหาแบบไบนารีที่ถูกต้อง

02:45.930 --> 02:53.300
แผนภูมิการค้นหาแบบไบนารีมีจริงความหมายระหว่างซ้ายและขวาที่ด้านซ้ายจะน้อยกว่าขวาในฮีปไบนารีเสมอ

02:53.370 --> 02:54.590
ไม่เป็นไร

02:54.600 --> 02:59.230
ซ้ายและขวาสามารถเป็นค่าใดก็ได้ตราบเท่าที่มันน้อยกว่าค่าสูงสุด

02:59.700 --> 03:06.150
ดังนั้นหากเรากำลังมองหาสมมุติว่าเราต้องตรวจสอบโหนดหลักแล้วเราต้องตรวจสอบเพราะหนึ่งต่อหนึ่งหรือเพราะหนึ่งน้อยกว่า 1 ถึง

03:06.260 --> 03:09.580
1

03:09.630 --> 03:12.450
เราต้องตรวจสอบทั้งสองโหนดด้านล่าง

03:12.450 --> 03:19.050
แล้วเนื่องจากมีค่าน้อยกว่า 72 และ 33

03:19.050 --> 03:30.100
เราต้องตรวจสอบทุก ๆ โน้ตอีกครั้งและมองหา 1 กลายเป็น 0 ของบันทึกและกลายเป็นการค้นหาผ่านรายการที่เชื่อมโยงหรือวนซ้ำผ่านอาร์เรย์

03:30.110 --> 03:40.890
ดังนั้นทำไมเราถึงต้องการใช้ไบนารีฮีปมันกลับกลายเป็นว่าไบนารีฮีปนั้นยอดเยี่ยมมากในการทำการเปรียบเทียบ

03:41.140 --> 03:53.970
เช่นเดียวกับการบอกว่าฉันต้องการคนที่มีค่ามากกว่า 33 เพราะในกรณีนี้เราสามารถคว้ารายการเหล่านี้ได้อย่างง่ายดายแทนที่จะไปที่โน้ต

03:57.520 --> 04:03.590
จริง ๆ แล้วเขาใช้จำนวนมากในการจัดลำดับความสำคัญของคิวการจัดเก็บข้อมูล

04:03.690 --> 04:10.090
ดังนั้นเรามาดูกันว่ามีการนำไบนารีฮีปมาใช้อย่างไร

04:10.150 --> 04:13.150
เรามีเลขฐานสองที่นี่โดยใช้ visual go

04:13.360 --> 04:20.250
และถ้าเราต้องการที่จะเพิ่มสมมติว่าแทรก 26 เรากดไปเลย

04:20.250 --> 04:21.890
มันเร็วมาก

04:22.290 --> 04:27.320
แต่ถ้าเราต้องการแทรกสมมุติว่า 51 financer

04:30.230 --> 04:34.600
51

04:34.830 --> 04:44.740
ฉันต้องทำการสลับเพื่อดู heaps เพิ่มมูลค่าบนต้นไม้ตามลำดับจากซ้ายไปขวา

04:45.030 --> 04:50.780
ถ้ามันไม่อยู่ในลำดับเดียวกันหรือลำดับความสำคัญที่ครั้งหนึ่งเหมือนที่เราทำที่นี่

04:50.820 --> 04:56.780
ถ้าผมเพิ่มสมมุติว่า 70 หรือคุณรู้

04:56.850 --> 04:58.910
ลองเพิ่มหนึ่งร้อย

04:58.920 --> 05:00.130
คุณคิดว่าจะเกิดอะไรขึ้น

05:01.280 --> 05:07.540
ถ้าฉันไปคุณจะเห็นว่าฉันเพิ่มหนึ่งร้อยแล้วมันจะเพิ่มขึ้น

05:07.560 --> 05:19.460
ดังนั้นอย่างที่คุณเห็นเม็ดมีดแม้ว่ามันจะดูเร็ว แต่ก็สามารถบันทึกได้และนี่ก็เป็นกรณีเดียวกันกับการลบเช่นกัน

05:19.500 --> 05:20.690
มันคือบันทึกทั้งหมด

05:20.780 --> 05:27.900
และตอนนี้เพื่อที่จะเข้าใจอย่างแท้จริงว่าเหตุใดเราจึงต้องการบางสิ่งบางอย่างเช่นฮีปไบนารีทำไมจึงมีประโยชน์

05:27.900 --> 05:30.320
แตกต่างจากแผนภูมิการค้นหาแบบไบนารี่อย่างไร

05:30.570 --> 05:33.140
เราจำเป็นต้องพูดถึงคิวลำดับความสำคัญ

05:33.360 --> 05:35.220
ถ้าอย่างนั้นเรามาพูดถึงคิวลำดับความสำคัญ
