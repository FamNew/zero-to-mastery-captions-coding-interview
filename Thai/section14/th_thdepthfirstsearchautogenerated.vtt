WEBVTT

00:00.860 --> 00:12.700
ยินดีต้อนรับกลับมาใช้การค้นหาความลึกก่อนโดยใช้ในการสั่งซื้อล่วงหน้าและโพสต์คำสั่งซื้อและเราจะเริ่มด้วยการสั่งซื้อ

00:12.700 --> 00:21.560
ก่อนอื่นตอนนี้ลองตั้งชื่อกันก่อนว่าเรียกมันลึกก่อน

00:22.740 --> 00:28.490
สำรวจเส้นทางหรือค้นหาในกรณีนี้และเราจะพูดตามลำดับ

00:28.760 --> 00:39.190
ตอนนี้ภายในที่นี่เราจะใช้การเรียกซ้ำเนื่องจากในขณะที่การค้นหาครั้งแรกส่วนใหญ่ถูกนำมาใช้โดยการเรียกซ้ำเนื่องจากมันง่ายมากที่จะทำ

00:39.230 --> 00:48.030
ดังที่คุณจะเห็น แต่ถ้าคุณจำได้จากการใช้การค้นหาแบบกว้างครั้งแรกด้วยการเรียกซ้ำเนื่องจากเราจะเรียกฟังก์ชันนี้ซ้ำแล้วซ้ำอีก

00:48.030 --> 00:52.690
เราไม่สามารถประกาศตัวแปรที่อยู่ภายในเพราะจะถูกรีเซ็ต

00:52.800 --> 00:59.870
ดังนั้นเราจะทำสิ่งเดียวกันกับที่เราทำที่นี่ แต่เพื่อรักษาความสะอาดและเพื่อแสดงให้คุณเห็นว่า def

00:59.990 --> 01:06.300
ที่สั่งซื้อแตกต่างกันอย่างไรสำหรับการค้นหาเพราะเราจะมีสามอย่าง

01:06.560 --> 01:20.500
เราจะมีการเรียงลำดับการโพสต์และการสั่งซื้อล่วงหน้าฉันจะสร้างสามฟังก์ชันแยกจากกันที่นี่อธิบายสิ่งเหล่านี้

01:20.520 --> 01:29.240
ดังนั้นฉันจะบอกว่าที่นี่คือเราจะได้กลับไปย้อนกลับในฟังก์ชั่นการสั่งซื้อ

01:29.340 --> 01:40.220
นี่จะเป็นฟังก์ชันแบบเรียกซ้ำและ DFS ตามลำดับเพียงแค่ส่งคืนสิ่งใดก็ตามที่ให้ผลลัพธ์นี้กับเรา

01:40.530 --> 01:44.130
ดังนั้นในกรณีของเราเราจะเพิ่มเส้นทาง Daut นี้

01:44.130 --> 02:00.420
เริ่มต้นด้วยรูทโหนดของเราและเราจะให้รายการหรือคำตอบของเราจะถูกป้อนและเราจะทำสิ่งเดียวกันสำหรับการสั่งซื้อโพสต์และสั่งซื้อล่วงหน้าเพียงแค่ตั้งชื่อพวกเขา

02:00.700 --> 02:05.530
มีวิธีการที่เหมาะสม

02:05.640 --> 02:08.910
งั้นลองเขียนฟังก์ชันแรกของ Cerveris

02:09.060 --> 02:14.350
ถ้าฉันสามารถสะกดคำสั่งโพสต์การสำรวจและ preorder คุณ

02:14.640 --> 02:16.280
มาเริ่มด้วยอันแรกกัน

02:16.500 --> 02:21.920
มันจะเป็นฟังก์ชั่นที่เรียกว่าการสำรวจตามลำดับที่เราสร้างขึ้นด้านบน

02:21.960 --> 02:30.810
นั่นจะเป็นโหนดและข้อมูลบางประเภทหรือเราสามารถเรียกมันว่าลิสต์

02:30.830 --> 02:40.410
ในกรณีนี้ให้จำไว้ว่าในการสั่งซื้อนั้นจะให้รายชื่อของโหนดตามลำดับที่เรียงถ้าเราดูแผนผังของเราเราต้องการที่จะมี 1 4 6 9

02:41.100 --> 02:49.390
15 20 170

02:49.830 --> 02:58.690
และวิธีที่เราดำเนินการเกี่ยวกับสิ่งนั้นก่อนอื่นเราต้องตรวจสอบว่าโหนดมีสับซ้ายหรือไม่

02:58.950 --> 03:14.890
ถ้าทำได้ดีแล้วเราจะไปที่ข้อโบสถ์โดยใช้การเรียกซ้ำไปยังโหนดดอทหัวเราะและส่งผ่านข้อมูลอีกครั้ง

03:14.950 --> 03:31.380
ฉันรู้ว่าการเรียกซ้ำอาจเป็นเรื่องยากที่จะเข้าใจในตอนแรก แต่สิ่งที่เราพูดที่นี่คือถ้าโหนดโดยเฉพาะอย่างยิ่งโหนดรูทเมื่อเราเริ่มต้นมันเป็นครั้งแรกถ้ามันมีลูกซ้าย มันจะเรียกฟังก์ชั่นนี้และจะยังคงเดินต่อไปจนกว่าโหนดจะไม่มีลูกอีกและเราจะสิ้นสุดที่หนึ่งเมื่อเราจบที่

03:31.380 --> 03:44.170
1

03:44.190 --> 03:52.840
ฉันต้องการจุดสุดท้ายผลักดันค่าจุดคำตอบของเรา

03:52.980 --> 04:04.090
ดังนั้นเมื่อไม่มีโหนดเหลืออีกแล้วที่ซึ่งสิ่งหนึ่งไปยังขั้นตอนถัดไปซึ่งเป็นการผลักดันค่านี้หนึ่งไปยังรายการ

04:04.110 --> 04:08.910
หลังจากนั้นเราจะทำสิ่งเดียวกันกับที่เราทำไปทางขวา

04:09.270 --> 04:16.600
นั่นคือเราต้องการที่จะไปตรวจสอบในตอนนี้และบอกว่าเฮ้ไปทางขวาจนกว่าจะไม่มีเด็กอีก

04:17.690 --> 04:26.450
และตอนนี้เรามีหกแล้วเราก็ผ่านฟังก์ชันนี้อีกครั้งเมื่อเรามีหก

04:26.600 --> 04:39.250
ไม่มีลูกเหลืออยู่และมันจะผลักดันค่าปมปัจจุบันซึ่งเป็น 6 ไปทางขวาดังนั้นเรามาดูกันจริง

04:39.530 --> 04:41.440
และโดยวิธีที่เราต้องการกลับมา

04:41.480 --> 04:45.920
จำไว้ว่าเราต้องการกลับรายการในตอนท้าย

04:46.160 --> 04:57.840
ดังนั้นฉันจะปลอบใจโหนดล็อกจุด

05:01.110 --> 05:21.670
dot thali และถ้าฉันคลิกเรียกใช้ที่นี่หรือตรวจสอบให้แน่ใจว่างานนี้ฉันจะบอกว่าทราเวิร์สเพื่อฉันจะออกความเห็นทั้งสองนี้ คำสั่งซื้อและเราจะเรียกใช้ไฟล์นี้โดยที่ฉันไม่ได้รับข้อมูล

05:21.670 --> 05:27.130
เพราะสิ่งนี้จะต้องมีรายการที่นี่ผ่านรายการ

05:27.340 --> 05:29.880
เฮ้ลองดูแล้วกัน

05:29.890 --> 05:39.040
เรามี 1 4 6 9 15 20 170 และเราเห็นที่นี่เส้นทางที่เราใช้เพราะฉันมองไปทางขวาของคุณ

05:39.130 --> 05:43.990
เรามี 9 4 1 จาก 6

05:44.160 --> 05:54.970
จากนั้นเรากลับไปที่ 20 15 จากนั้น 170

05:54.970 --> 06:01.560
แต่เพราะเราผลักดันคำตอบของเราไปยังรายการหลังจากที่เราตรวจสอบบันทึกด้านซ้ายและสำรวจไปเรื่อย ๆ จนถึงจำนวนต่ำสุดที่จะใส่เข้าไปในรายการ

06:01.570 --> 06:12.040
ตอนนี้ความสวยงามของสิ่งนี้คือการติดตั้งอีกสองตอนนี้กลายเป็นเรื่องง่ายมากเพราะมันคล้ายกัน

06:12.040 --> 06:13.860
เพียงแค่การเปลี่ยนแปลงคำสั่ง

06:14.260 --> 06:22.660
ดังนั้นอันถัดไปที่เป็นทราเวิร์สมมุติว่า preorder

06:22.820 --> 06:29.720
ความแตกต่างเพียงอย่างเดียวในตอนนี้ก็คือคุณต้องทำให้แน่ใจว่าเราเรียกชื่อที่ถูกต้องซ้ำ ๆ

06:30.950 --> 06:43.360
ความแตกต่างเพียงอย่างเดียวคือเมื่อสั่งซื้อล่วงหน้าเราต้องการผลักดันตั้งแต่เริ่มแรกก่อนที่จะถึงโน้ตที่เหลือ

06:43.930 --> 06:54.330
เพราะจำไว้ในการสำรวจเส้นทางก่อนเราไป 9 4 1 6 แล้ว 20 15 170

06:54.340 --> 06:57.200
เราเริ่มต้นด้วยผู้ปกครองก่อนและนั่นคือคำสั่ง

06:57.640 --> 07:01.820
ดังนั้นเราจึงผลักผู้ปกครองก่อนซึ่งก็คือ 9

07:01.960 --> 07:07.740
จากนั้นเราได้สี่แล้วหนึ่งแล้วเราได้หกและ 20 และ 50 กว่า 170

07:08.630 --> 07:10.040
ลองดูว่ามันใช้งานได้ไหม

07:10.160 --> 07:16.240
ฉันจะเปลี่ยนสิ่งนี้เป็นคำสั่งซื้อล่วงหน้าเพื่อให้แน่ใจว่าฉันสะกดถูกต้อง

07:17.170 --> 07:22.420
พรีเฟ็คของพรีเฟ็คล่วงหน้าจากนั้นก็วิ่งไปที่หัวแล้วดูว่า

07:22.560 --> 07:32.830
เราไป 9 4 1 6 20:15 170 ตามลำดับในรายการ

07:32.840 --> 07:37.360
ตอนนี้ที่นี่คุณสามารถหยุดวิดีโอชั่วคราวและดูว่าเราสามารถใช้วิดีโอล่าสุดด้วยตัวเองได้ไหม

07:37.370 --> 07:39.060
มันควรจะค่อนข้างง่าย

07:39.170 --> 07:40.160
ขวา.

07:40.250 --> 07:40.510
เอาล่ะ

07:40.520 --> 07:41.630
ฉันกำลังจะไป

07:42.330 --> 07:45.700
ลำดับการโพสต์จะคล้ายกันมาก

07:46.940 --> 07:57.360
เราจะบอกว่าโพสต์ทราเวิร์สโพสต์เราจะมีการผลักดันครั้งสุดท้ายในตอนท้าย

07:59.330 --> 08:01.000
และทำไมเป็นอย่างนั้น

08:01.190 --> 08:14.260
เพราะเราตรวจสอบ 1 6 ทางซ้ายและขวาแล้วด้านบนสี่แล้ว 15 170 20 แล้ว 9

08:14.320 --> 08:18.410
ดังนั้นคำสั่งซื้อตามชื่อที่แนะนำก็คือโพสต์จะสิ้นสุด

08:18.940 --> 08:22.140
ดังนั้นถ้าฉันเปลี่ยนเพียงเพื่อโพสต์สั่งซื้อตอนนี้

08:24.370 --> 08:25.850
และฉันก็โดนรอน

08:26.200 --> 08:31.950
เรามีคำสั่งที่ไม่ถูกต้องของเธอเพราะฉันต้องทำให้แน่ใจว่าฉันเปลี่ยนชื่อดังนั้นมันจึงเป็นคำสาปแช่งของเธอ

08:32.020 --> 08:37.970
ดังนั้นเราจึงบอกว่าการสำรวจขอบโพสต์มีรูพรุนจะไม่ทำการสั่งซื้อล่วงหน้า

08:38.080 --> 08:40.860
และถ้าฉันวิ่งได้ดีขึ้นมาก

08:40.930 --> 08:44.650
เราไปเก้าต่อหนึ่ง

08:45.420 --> 08:47.220
และเราเริ่มเพิ่มสิ่งนี้ลงในรายการ

08:47.330 --> 09:03.630
ฉันไป 1 6 4 แล้ว 15 170 20 แล้ว 9

09:03.630 --> 09:06.090
และถ้าเราพิมพ์ทั้งหมดนี้และฉันคลิกทำงานได้ดีเรามาลบบันทึกคอนโซลจากที่นี่

09:09.930 --> 09:19.610
และเพียงคอนโซลบันทึกแต่ละรายการเหล่านี้เพื่อเรียกใช้หัว

09:19.770 --> 09:20.710
มีบันทึกของเรา

09:20.740 --> 09:30.220
ขณะนี้มีการสั่งซื้อโพสต์เรามีการสั่งซื้อล่วงหน้าและตอนนี้เรามีในการสั่งซื้อ

09:30.430 --> 09:36.370
พวกเขาทั้งหมดมีความลึกก่อนการค้นหาจะทำในคำสั่งที่แตกต่างกัน

09:36.530 --> 09:41.750
ตอนนี้ฉันจะทิ้งรหัสไว้ให้คุณสำรวจที่นี่เพราะมันเป็นการเรียกซ้ำ

09:42.020 --> 09:50.060
อาจต้องใช้เวลาสักครู่เพื่อให้ใจคุณห่อหุ้มอยู่ แต่คุณเห็นว่ามันไม่ยาก

09:50.130 --> 09:56.850
เราใช้การค้นหาแบบกว้างทั้ง atre Tivoli

09:57.090 --> 10:00.830
และแบบเรียกซ้ำและเรายังใช้ความลึกในการค้นหาตามลำดับโพสต์คำสั่งซื้อ

10:01.100 --> 10:04.440
และถ้าคุณคิดเกี่ยวกับมันมันจะเริ่มชัดเจนมากขึ้น

10:04.740 --> 10:06.830
โดยเฉพาะอย่างยิ่งเมื่อมันมาถึงความตายสำหรับการค้นหา

10:06.990 --> 10:13.150
สิ่งที่เราทำคือเรากำลังตรวจสอบองค์ประกอบด้านซ้ายและองค์ประกอบที่ถูกต้องหรือหมายเหตุที่ถูกต้อง

10:13.200 --> 10:16.780
นั่นคือการอ้างอิงทางซ้ายและการอ้างอิงที่ถูกต้องของแต่ละโน้ต

10:17.340 --> 10:25.410
และแน่นอนว่าเรากำลังดำเนินการตามลำดับที่แตกต่างกันในบางครั้งขึ้นอยู่กับกลยุทธ์การสั่งซื้อที่เราเลือก

10:25.500 --> 10:28.310
แต่เรายังคงทำสามสิ่งเดียวกัน

10:28.410 --> 10:35.470
เรากำลังตรวจสอบด้านซ้ายกำลังตรวจสอบสิ่งที่ถูกต้องหรือเราเพียงแค่กดปมไปยังรายการของเราเพื่อตอบ

10:35.790 --> 10:42.300
และสำหรับพวกคุณที่อาจจะรู้ว่าเรากำลังใช้โครงสร้างข้อมูลสแต็กตรงนี้กับการสอบถามซ้ำ

10:42.300 --> 10:50.620
แต่ละฟังก์ชั่นเหล่านี้จะถูกเพิ่มเข้าไปในสแต็คการโทรของเราและเราจะเริ่มกลับคืนมาเมื่อถึงจุดสิ้นสุด

10:51.930 --> 10:55.990
นั่นคือไม่มีเด็กซ้ายและขวาอีกต่อไป

10:56.610 --> 11:02.860
และนี่เป็นสิ่งสำคัญที่ต้องเข้าใจเพราะมันแสดงให้เห็นถึงความซับซ้อนของพื้นที่แห่งความตายเพื่อการค้นหา

11:03.030 --> 11:11.260
จำนวนพื้นที่ที่เราต้องการในแง่ของหน่วยความจำซึ่งแตกต่างจากการค้นหากว้างครั้งแรกซึ่งใช้ Q

11:11.260 --> 11:17.650
ความสูงของต้นไม้จะบอกเราว่าเราต้องใช้หน่วยความจำเท่าใดเพราะความสูงของต้นไม้จะตรงกับฟังก์ชัน recursive

11:17.710 --> 11:23.770
เพื่อเพิ่มลงในสแต็กเป็นหน่วยความจำ

11:23.770 --> 11:34.570
ดังนั้นการใช้หน่วยความจำของเราคือความสูงของต้นไม้ซึ่งจะให้สถานการณ์กรณีที่เลวร้ายที่สุดเมื่อใช้การค้นหาเชิงลึกครั้งแรก

11:34.650 --> 11:47.080
ดังนั้นตอนนี้คุณจึงเข้าใจได้ดีขึ้นว่าการค้นหาหรือการสำรวจเส้นทางเหล่านี้ฉันแนะนำให้คุณดำเนินการทีละขั้นตอนด้วยตัวคุณเอง

11:47.080 --> 11:50.800
ดูว่าคุณสามารถเพิ่มสิ่งนี้ลงในโครงสร้างข้อมูลทรีของคุณได้หรือไม่

11:50.800 --> 11:59.470
เพราะความงามนั้นครั้งหนึ่งคุณรู้ว่ามันทำงานอย่างไรคุณเพียงแค่เรียนรู้วิธีการท่องผ่านกราฟ

11:59.580 --> 12:02.000
ขอแสดงความยินดีและฉันจะพบคุณในวิดีโอถัดไป
