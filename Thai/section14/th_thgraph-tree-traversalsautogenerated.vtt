WEBVTT

00:00.850 --> 00:13.800
มีบางครั้งที่เราต้องการทำสิ่งที่เรียกว่าการแวะผ่านและการสำรวจเส้นทางและการค้นหามักจะใช้แทนกันได้บางครั้งหมายถึงสิ่งเดียวกันบางครั้งไม่

00:14.080 --> 00:19.320
จนถึงตอนนี้เราได้พูดคุยเกี่ยวกับแผนภูมิการค้นหาแบบไบนารีและเรารู้ว่าเรากำลังมองหาอะไร

00:19.330 --> 00:32.410
และเรามักจะรู้ว่าจะไปทางซ้ายหรือขวา แต่ครั้งอื่นเราต้องการดำเนินการบางอย่างในบันทึกเดียวกันกับที่ฉันพูดถึงก่อนที่เราอาจต้องการเพิ่มคุณสมบัติสีลงในบันทึกนี้

00:32.690 --> 00:41.090
บางทีถ้าเรามีโหนดผู้ใช้เราต้องการเพิ่มคุณสมบัติ H ให้กับผู้ใช้ทั้งหมดของเราที่อยู่ในโครงสร้างแบบต้นไม้

00:41.210 --> 00:45.700
Brewhouse คุณต้องการเพิ่มคุณสมบัติรูปร่างให้กับโหนดเหล่านี้

00:45.900 --> 00:51.020
หรือบางทีเราไม่มีต้นไม้เรียง

00:51.120 --> 00:59.650
มันไม่ใช่แผนผังการค้นหาแบบไบนารีหรือเรามีกราฟที่ไม่มีคำสั่งให้ในกรณีนี้เราต้องไปที่โหนด

00:59.910 --> 01:06.420
หรือบางทีเรากำลังทำงานบน

01:06.990 --> 01:16.410
google และหัวหน้าของเราขอให้เราช่วยให้เราตรวจสอบได้ว่ากระแสการค้นหาแบบไบนารีที่เราป้อนเข้าไปในฐานข้อมูลของเรานั้นถูกต้องหรือไม่

01:17.330 --> 01:24.840
และเพื่อให้เราตรวจสอบว่าเราต้องแตะโน้ตทุกอัน แต่เราจะทำสิ่งนี้อย่างไร

01:24.870 --> 01:32.250
คุณสามารถคิดถึง traversals เป็นการเยี่ยมชมทุก ๆ โน้ตและอย่างที่คุณจินตนาการได้เพราะเรากำลังเยี่ยมชมทุก

01:32.250 --> 01:36.930
ๆ โหนดนั่นคือเจ้าของการดำเนินการเชิงเส้นตรงเวลา

01:36.930 --> 01:48.310
จนถึงตอนนี้เราได้วนรอบเพื่อเยี่ยมชมโครงสร้างข้อมูลอื่น ๆ ทั้งหมดของเราเช่นอาร์เรย์ที่เชื่อมโยงรายการแฮชตารางคิวซ้อนกัน

01:48.330 --> 01:57.260
แล้วเราจะทำสิ่งนี้ในโครงสร้างข้อมูลเช่นต้นไม้หรือกราฟได้อย่างไร

01:57.290 --> 02:01.510
โชคดีสำหรับเรามีสองวิธีในการทำสิ่งนี้ที่เราต้องเรียนรู้

02:01.740 --> 02:05.230
หนึ่งอันตรงนี้

02:05.390 --> 02:12.050
เราต้องทำการสำรวจเส้นทางต้นไม้หรือไม่หรือเราต้องทำกราฟสำรวจเส้นทาง

02:12.160 --> 02:18.480
ในกรณีนี้เรามีสองตัวเลือกเหมือนกัน

02:18.590 --> 02:29.840
เรามีการค้นหาแบบกว้างและลึกในการค้นหาครั้งแรกและบางครั้งสิ่งนี้เรียกว่าการสำรวจเส้นทางแทนการค้นหาอย่างที่คุณเห็นทั้งต้นไม้และงานฝีมือ

02:29.870 --> 02:31.710
มันเป็นสิ่งเดียวกัน

02:31.900 --> 02:39.790
O ใหญ่นั้นเป็นของและเพราะเราต้องไปที่โหนดทุกอันโดยใช้เทคนิคทั้งสองนี้

02:39.790 --> 02:47.440
แต่เรามาทบทวนกันว่าทำไมเรื่องนี้ถึงสำคัญและทำไมเราถึงไม่เก็บทุกอย่างและรายการที่ง่ายต่อการเข้าใจ

02:48.250 --> 02:57.060
ประโยชน์หลักที่ว่าทำไมเราไม่ใส่ข้อมูลที่ซับซ้อนลงไปในรายการเช่นอาร์เรย์ที่เรียงลำดับคือเราได้รับการค้นหา O ของ log

02:57.060 --> 03:02.430
n

03:02.580 --> 03:04.110
สิ่งที่เกี่ยวกับตารางแฮช

03:04.110 --> 03:05.130
มันง่ายมาก

03:05.370 --> 03:19.110
โปรดจำไว้ว่าตารางแฮชไม่ได้มีการสั่งซื้อและในตอนท้ายของวันที่คุณแสดงข้อมูลด้วยโครงสร้างข้อมูลที่แตกต่างกันตามความต้องการและต้นไม้และหญ้าทำงานได้ดีมากในหลายกรณีที่เราได้พูดคุยกันแล้ว สิ่งที่เรามีประโยชน์

03:19.200 --> 03:31.180
แต่เมื่อเราใส่หรือลบรายการเรามีประสิทธิภาพที่ดีกว่าบางอย่างเช่นอาร์เรย์

03:31.410 --> 03:46.920
แต่เรายังคงรักษาลำดับที่เราจะไม่ใช้กับแผนภูมิต้นไม้และกราฟที่ใช้เป็นจำนวนมากเมื่อเราต้องการค้นหาโหนดหรือเยี่ยมชมทุกโหนดและมันแสดงข้อมูลจำนวนมากที่จำลองโลกแห่งความจริง

03:46.920 --> 03:52.160
ตอนนี้เรามาดูกันว่าเทคนิคการสำรวจเส้นทางทั้งสองทำงานอย่างไร

03:52.890 --> 03:53.840
ฉันจะดูในถัดไป
