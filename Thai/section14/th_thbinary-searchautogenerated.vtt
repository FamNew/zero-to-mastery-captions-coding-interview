WEBVTT

00:01.430 --> 00:15.340
เดินฉันกลับมาในวิดีโอสุดท้ายที่เราถามคำถามว่ามีวิธีที่ดีกว่าในการค้นหาตัวเลขในรายการที่เรียงลำดับแล้วและสำหรับตัวอย่างนี้เราจะเพิ่มหมายเลขพิเศษลงในรายการของเรา

00:18.620 --> 00:19.640
มันดีกว่า.

00:19.730 --> 00:26.340
สมมติว่าฉันกำลังมองหา 34 และฉันรู้ว่ารายการของฉันสมมติว่าอาร์เรย์ถูกเรียง

00:26.360 --> 00:33.350
เป็นวิธีที่ดีกว่าไปเกี่ยวกับมันแทนที่จะตรวจสอบทุกรายการหนึ่งโดยหนึ่งจากซ้ายไปขวาคืออะไร

00:34.230 --> 00:41.290
ทีนี้เราสามารถใช้สิ่งที่เรียกว่าการค้นหาแบบไบนารีเพราะเรารู้ว่ารายการนั้นเรียงลำดับแล้ว

00:41.460 --> 00:45.870
เราสามารถละทิ้งรายการครึ่งหนึ่งแทนทีละรายการ

00:46.750 --> 00:52.490
ให้ฉันแสดงให้คุณเห็นว่าเราสามารถเริ่มต้นในกลางรายการและพูดคือ 9

00:52.630 --> 00:59.520
สูงกว่าหรือต่ำกว่า 34 กำแพง 34 สูงกว่า 9 ดังนั้นให้ทิ้งทุกอย่างทางซ้ายของมัน

01:01.040 --> 01:03.870
จากนั้นเราไปที่ดัชนีกลางอีกครั้ง

01:03.980 --> 01:06.350
ในกรณีนี้ไม่มีเทคนิคในการเป็นสื่อ

01:06.350 --> 01:08.030
ลองเลือก 12 กัน

01:08.130 --> 01:13.430
ไปที่ด้านซ้ายของสื่อคือ 12 สูงกว่าต่ำกว่า 34

01:13.530 --> 01:17.960
ในขณะที่มันลดลงอย่างแน่นอนดังนั้นเราจะลบทุกอย่างทางด้านซ้ายของมัน

01:19.120 --> 01:27.100
แล้วหาดัชนีตรงกลางแล้วเราพบ 34 แทนการผ่านรายการทีละตัว

01:27.190 --> 01:29.900
เราทำอย่างนั้นในสามการปฏิบัติการ

01:30.220 --> 01:32.020
และนี่ดูคุ้นเคย

01:32.050 --> 01:32.560
ขวา.

01:34.180 --> 01:51.120
และเป็นสิ่งที่เราเรียนรู้เมื่อเราพูดถึงต้นไม้โดยเฉพาะต้นไม้ค้นหาแบบไบนารีเพราะถ้าข้อมูลของเราถูกจัดเรียงเราสามารถทำได้ดีกว่าเตาอบ

01:51.120 --> 02:14.880
O หรือเวลาเชิงเส้นเพราะรายการที่เรียงลำดับนี้อาจเตือนคุณถึงสิ่งที่เรากำลังสร้างต้นไม้ค้นหาแบบไบนารี การค้นหาเชิงเส้นเราสามารถทิ้งรายการครึ่งหนึ่งแทนที่จะเป็นรายการละครั้งและคุณอาจคิดว่านั่นเป็นสิ่งที่ไร้สาระอังเดรเพราะเพื่อให้เราสามารถค้นหาได้เราต้องเรียงลำดับรายการก่อนและใช้พลังการคำนวณ

02:14.910 --> 02:15.640
ขวา.

02:15.870 --> 02:27.450
แต่การจัดเก็บข้อมูลในโครงสร้างข้อมูลเช่นต้นไม้แทนที่จะเป็นโครงสร้างข้อมูลเชิงเส้นเช่นอาร์เรย์นั้นมีประสิทธิภาพมากกว่า

02:27.540 --> 02:35.150
และนี่คือสิ่งที่เราได้พูดคุยกับโครงสร้างข้อมูลทรีในขณะที่เราแทรกรายการถ้าเราเรียงลำดับ

02:35.150 --> 02:48.230
มันทำให้เรามีประสิทธิภาพที่ดีขึ้นแล้วเพิ่มลงในรายการที่เรียงลำดับที่เราต้องค้นหาผ่านหนึ่งวันและเพราะในต้นไม้ที่เราตัดสินใจถ้าเราไปทางซ้ายหรือขวา

02:48.340 --> 03:10.260
เราควรไปทางซ้ายหรือขวาและเราละครึ่งรายการทุกขั้นตอนนี้ควรกระตุ้นบางสิ่งในสมองของคุณว่าโอ้นี่เป็นวิธีการแบ่งและพิชิตซึ่งทำให้เราบันทึกเวลาและเวลาเพราะบันทึกนั้นมาจากข้อเท็จจริงที่ว่าเราอยู่ การเยี่ยมชมโหนดทั้งหมดในแต่ละขั้นตอนลงต้นไม้เรากำลังกำจัดโหนด

03:10.720 --> 03:21.580
ดังนั้นนี่คือการจัดการกับการค้นหาแบบไบนารีที่คุณแบ่งรายการผ่านรายการที่เรียงลำดับและตัดสินใจจากที่นั่นว่ารายการที่คุณกำลังมองหานั้นอยู่ทางซ้ายหรือขวาของรายการ

03:22.440 --> 03:26.180
และเนื่องจากรายการเรียงลำดับคุณสามารถตัดสินใจได้ง่ายมาก

03:26.220 --> 03:27.750
แต่เพียงแค่เปรียบเทียบสิ่งต่าง ๆ

03:27.960 --> 03:32.410
และเราจะไปเรื่อย ๆ จนกว่าเราจะพบสิ่งที่เราต้องการในกรณีนี้

03:32.490 --> 03:40.120
หมายเลข 34 เราตัดสินใจ 1 2 3

03:40.370 --> 03:55.070
และนี่ก็สมเหตุสมผลเพราะถ้าคุณเป็นครูที่กำลังดูเรียงความเรียงความและกระดาษจากนักเรียนหากกระดาษไม่จัดเรียงกันคุณก็ต้องค้นหามันทีละคนเพื่อค้นหา

03:55.100 --> 03:56.380
สมมติว่าทิมมี

03:56.750 --> 04:06.660
แต่ถ้าเรียงกระดาษตามลำดับตัวอักษรคุณสามารถหาฉันได้โดยแบ่งกระดาษออกครึ่งหนึ่งทุกครั้งจนกว่าคุณจะไปถึงอุณหภูมิ

04:06.800 --> 04:09.380
เหมือนสมุดโทรศัพท์

04:09.540 --> 04:18.320
เราเริ่มต้นด้วยองค์ประกอบจากนั้นเมื่อเราก้าวลงเราจะมีการหารด้วยสององค์ประกอบที่เหลือ

04:18.420 --> 04:24.300
และเมื่อเราก้าวลงเราก็มีและหารด้วยองค์ประกอบที่เหลืออีกสี่ตัวและเราจะดำเนินต่อไปเรื่อย ๆ

04:24.300 --> 04:27.820
จนกว่าเราจะพบองค์ประกอบของเรา

04:27.830 --> 04:34.070
และในส่วนการเรียงลำดับเราเรียนรู้ว่าการรวมการเรียงและการเรียงลำดับอย่างรวดเร็วกำลังทำสิ่งเดียวกัน

04:34.290 --> 04:42.000
และเรายังได้เรียนรู้วิธีการค้นหาทรีนี้ในอัตราส่วนโครงสร้างข้อมูลของเราด้วยการค้นหาเชิงเส้น

04:42.000 --> 04:46.710
เรามีสี่ลูปที่มีแผนภูมิการค้นหาแบบไบนารีเช่นนี้

04:46.770 --> 04:58.720
เรามีวิธีการล็อคที่เราตรวจสอบโหนดด้านซ้ายและโหนดด้านขวาและแบ่งรายการโดยใช้ขณะที่วนครึ่งแต่ละครั้ง

04:58.830 --> 05:03.480
ดังนั้นเราจึงรู้วิธีทำการค้นหาเชิงเส้นและการค้นหาแบบไบนารี

05:03.480 --> 05:11.400
เรารู้ว่าการค้นหาแบบไบนารี่จะเป็น log of และความซับซ้อนของเวลาเทียบกับการค้นหาแบบ

05:11.490 --> 05:20.780
linear ซึ่งเป็น 0 และสิ่งที่ทั้งสองนี้ดีขึ้นจนถึงจุดนี้เราได้พูดถึงเมื่อเราค้นหาไอเท็มที่เรารู้ว่า 34

05:20.780 --> 05:25.100
ที่มีอยู่

05:25.100 --> 05:38.010
รายการของเราถูกจัดเรียงในแผนผังการค้นหาแบบไบนารีและเรารู้ว่าจะไปทางซ้ายหรือขวา แต่บางครั้งเราต้องทำสิ่งที่เรียกว่าการสำรวจเส้นทางและการสำรวจเส้นทางนั้นหมายถึง

05:38.330 --> 05:46.040
เริ่มจากไม่ไปที่โหนดเพื่อค้นหาสิ่งที่เฉพาะเจาะจงหรือให้แน่ใจว่าคุณแตะทุก ๆ

05:46.040 --> 05:53.270
โหนดบางทีเราอาจไม่ต้องการเพิ่มคุณสมบัติสีลงในแต่ละโน้ต

05:53.380 --> 05:57.330
บางทีเราต้องการอัปเดตตัวเลขเหล่านี้และคูณสองด้วย

05:57.370 --> 06:01.420
ในกรณีนั้นเราต้องไปเยี่ยมชมทุก ๆ โน้ต

06:01.420 --> 06:02.980
เราจะทำอย่างนั้นได้อย่างไร.

06:03.100 --> 06:04.470
ลองค้นหาในวิดีโอถัดไป
