WEBVTT

00:01.030 --> 00:08.340
ตกลงตกลงจริง ๆ

00:08.340 --> 00:13.980
แล้วฉันเริ่มต้นด้วยเคล็ดลับเล็กน้อยที่นี่การสอบถามซ้ำซึ่งเราจะพูดถึงในวิดีโอต่อไปไม่ได้เป็นอัลกอริทึม

00:14.050 --> 00:27.350
เป็นแนวคิดที่เราจะใช้ทั่วทั้งส่วนของหลักสูตรนี้เพื่อเขียนอัลกอริทึมที่น่าสนใจเมื่อเราทำการเรียงลำดับและค้นหาผ่านแผนผังการค้นหาแบบไบนารี่

00:27.370 --> 00:30.040
เราจะใช้การสอบถามซ้ำบ่อยครั้งมาก

00:30.040 --> 00:32.140
ดังนั้นฉันต้องการเตรียมคุณ

00:32.390 --> 00:37.040
และแน่นอนว่ามันเป็นหัวข้อทั่วไปในการสัมภาษณ์

00:37.040 --> 00:41.950
จริงๆแล้วนี่เป็นหนึ่งในหัวข้อที่ได้รับความนิยมมากที่สุดที่ฉันจะบอกเมื่อพูดถึงการสัมภาษณ์

00:42.030 --> 00:49.160
ตอนนี้การเรียกซ้ำคืออะไรจริงๆเมื่อคุณค้นหาไฟล์ในคอมพิวเตอร์

00:49.200 --> 00:54.450
ตัวอย่างเช่นหากคุณอยู่บนเดสก์ท็อปของคุณและคุณต้องการค้นหาไฟล์เพลงทั้งหมดของคุณคุณมีไฟล์

00:54.690 --> 01:03.980
MP สามไฟล์ในคอมพิวเตอร์ของคุณคุณสามารถทำได้โดยดูที่โฟลเดอร์หนึ่งที่คุณต้องการดูโฟลเดอร์ซ้ำ ๆ เพื่อค้นหาเพลงทั้งหมดของคุณ

01:04.020 --> 01:06.600
ให้ฉันแสดงให้คุณเห็นว่าฉันหมายถึงอะไร

01:06.750 --> 01:14.120
ฉันมีโครงการที่นี่ที่เราใช้สำหรับหลักสูตรอื่นของฉันและเป็น back end API ในดาการ์

01:14.400 --> 01:19.770
ตอนนี้ชีวิตโคลนที่เก็บนี้และฉันมีที่นี่บนเดสก์ทอปของฉัน

01:19.870 --> 01:28.120
ตอนนี้ถ้าฉันต้องการค้นหาไฟล์ทั้งหมดในโครงการนี้ฉันสามารถพิมพ์ LS เพื่อแสดงไฟล์ให้ฉันได้

01:28.540 --> 01:35.440
แต่อย่างที่คุณเห็นเป็นสีน้ำเงินที่นี่เรายังมีโฟลเดอร์ที่อยู่ข้างในมีไฟล์ด้วย

01:35.520 --> 01:38.800
พวกเขาสามารถดูไฟล์ในโฟลเดอร์นี้ได้อย่างไร

01:39.270 --> 01:44.260
ฉันสามารถทำสิ่งที่เรียกว่า LS dash R และ R ได้

01:44.280 --> 01:47.170
คาดเดาสิ่งที่หมายถึงการเรียกซ้ำ

01:47.700 --> 01:55.850
ถ้าฉันทำเช่นนี้และฉันกด Enter ดูที่ฉันยังได้รับไฟล์ที่อยู่ในโฟลเดอร์

01:56.150 --> 02:02.930
คุณเห็นว่าฉันมีโฟลเดอร์ควบคุมที่มีไฟล์จาวาสคริปต์ฉันมีโฟลเดอร์

02:03.020 --> 02:10.520
postgresql ที่มีไฟล์

02:10.520 --> 02:19.800
doc บางไฟล์แยกไฟล์ทั้งหมดและในนั้นฉันมีโฟลเดอร์อื่นที่มีไฟล์ต่างกัน แต่ละโฟลเดอร์และพิมพ์ไฟล์

02:19.800 --> 02:34.670
ดังนั้นการเรียกซ้ำคือการเรียกซ้ำที่ดีคือเมื่อคุณกำหนดบางสิ่งในแง่ของตัวเองมันเป็นฟังก์ชั่นที่อ้างถึงตัวมันเองภายในฟังก์ชั่น

02:34.680 --> 02:35.050
เอาล่ะ

02:35.090 --> 02:36.960
ไม่มีทางที่คุณจะพูดถูก

02:37.200 --> 02:40.560
นั่นอาจเป็นคำนิยามที่สับสนที่สุดอีกครั้ง

02:40.620 --> 02:51.090
ให้ฉันแสดงตัวอย่างถ้าฉันเปิดคอนโซลที่นี่ฟังก์ชั่นวนซ้ำเป็นฟังก์ชั่นที่อ้างถึงตัวเอง

02:51.410 --> 02:59.680
ดังนั้นฉันสามารถสร้างฟังก์ชั่นที่เรียกว่าสมมติว่าเริ่มและฟังก์ชันนี้ซ้ำ

02:59.700 --> 03:04.000
ถ้าฉันพูดถึงตัวเองข้างใน

03:04.200 --> 03:09.870
ลองอีกครั้งถ้าฉันบอกว่าลงทะเบียนที่นี่

03:10.880 --> 03:20.200
นี่คือฟังก์ชั่นวนซ้ำเพราะเมื่อฟังก์ชั่นนี้ทำงานมันจะเรียกตัวเองและทำงานอีกครั้ง

03:20.240 --> 03:30.230
ปัญหาเกี่ยวกับการเรียกซ้ำและสาเหตุที่ผู้คนพบว่ามันยากเหลือเกินคือมันเป็นหัวข้อที่น่ากลัวเมื่อผู้คนเริ่มพูดถึงคณิตศาสตร์และแอปพลิเคชันเชิงทฤษฎี

03:30.350 --> 03:36.240
ให้เราจดจ่อที่นี่ว่าการเรียกซ้ำช่วยเราแก้ปัญหาได้อย่างไร

03:36.410 --> 03:43.590
การเรียกซ้ำเป็นสิ่งที่ดีจริงๆสำหรับงานที่มีภารกิจย่อยซ้ำ ๆ

03:43.640 --> 03:48.110
มันเหมือนกับว่าเมื่อเราดูโฟลเดอร์ภายในโครงการ

03:48.110 --> 04:01.940
และเหตุผลการเรียกซ้ำเป็นสิ่งที่สำคัญมากและเหตุผลที่ฉันพูดถึงมันก่อนในส่วนนี้ก่อนที่เราจะดำดิ่งสู่อัลกอริธึมอื่น ๆ ทั้งหมดนั่นก็คือแนวคิดนี้จะถูกใช้ในการค้นหา

04:02.120 --> 04:12.960
เช่นการสำรวจต้นไม้ถ้าคุณคิดว่ามันเป็นงานเดียวกันที่เราทำซ้ำแล้วซ้ำอีก

04:13.430 --> 04:18.830
จำไว้ว่าเมื่อเราสร้างโครงสร้างข้อมูลแผนภูมิของเราเองแผนภูมิการค้นหาแบบไบนารีของเรา

04:19.400 --> 04:22.350
และฉันให้คุณฟังก์ชั่นเล็กน้อยในตอนท้าย

04:23.190 --> 04:29.940
เรียกว่าการสำรวจที่อนุญาตให้เราพิมพ์แผนผังของเราเพื่อให้เราสามารถตรวจสอบคำตอบของเรา

04:30.940 --> 04:35.240
ถ้าเราดูที่นี่ให้มากขึ้นเราจะเห็นว่าเราใช้การสอบถามซ้ำที่นี่

04:35.320 --> 04:48.500
ฉันมีฟังก์ชั่นการสำรวจที่เรียกตัวเองว่าภายในตัวคุณและนี่คือสิ่งที่เราจะแสดงให้เห็นมากมายเมื่อเราพูดถึงการค้นหาและการเรียงลำดับในส่วนที่กำลังจะมา

04:48.500 --> 04:50.840
การเรียกซ้ำมีอยู่ทั่วไป

04:50.840 --> 04:57.760
เมื่อเราทำการสำรวจเส้นทาง

04:57.770 --> 05:09.610
DOM บนเว็บไซต์ถ้าเราไปที่องค์ประกอบที่นี่เมื่อเราทำการสำรวจเส้นทางนี้และเขาทุกรุ่นวัตถุเอกสารเรากำลังใช้การเรียกซ้ำใน javascript เมื่อเรามีวัตถุซ้อนกันเพื่อให้วัตถุภายในวัตถุ

05:10.040 --> 05:17.930
ทีนี้เราใช้การเรียกซ้ำ แต่กุญแจสำคัญในการเรียกซ้ำคือการเข้าใจว่ามันไม่ซับซ้อน

05:17.930 --> 05:25.940
ตราบใดที่คุณฝึกฝนนิดหน่อยก็อยากจะได้มันมาก่อนแล้วก็กลายเป็นธรรมชาติที่สอง

05:26.190 --> 05:31.750
และเป้าหมายของฉันคือตอนท้ายของวิดีโอเหล่านี้ที่คุณจะได้รับการเรียกซ้ำ

05:31.820 --> 05:33.200
ดังนั้นเรามาเริ่มกันเลย

05:33.710 --> 05:34.620
ฉันจะพบคุณในอีกหนึ่ง
