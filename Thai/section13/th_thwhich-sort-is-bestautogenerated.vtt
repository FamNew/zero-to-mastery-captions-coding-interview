WEBVTT

00:01.130 --> 00:02.270
ยินดีต้อนรับกลับ.

00:02.270 --> 00:06.890
เราได้เรียนรู้อัลกอริทึมการเรียงลำดับโดยคุณอาจถามตัวเอง

00:06.990 --> 00:17.470
อังเดรฉันยังคงสับสนเกี่ยวกับเวลาที่จะใช้สิ่งที่เกี่ยวกับถ้าฉันถูกถามในการสัมภาษณ์คำถามเกี่ยวกับอัลกอริทึมการเรียงลำดับที่จะดีที่สุด

00:17.480 --> 00:26.810
ถ้าฉันมีข้อมูลของผู้ใช้ 100 ล้านชื่อที่ต้องเรียงลำดับลองมาดูกฎบางอย่างกันดีกว่า

00:27.300 --> 00:28.070
1

00:28.380 --> 00:31.380
เมื่อใดที่คุณควรใช้การเรียงลำดับการแทรก

00:31.800 --> 00:41.480
การเรียงลำดับการแทรกที่ดีควรใช้กับรายการเพียงไม่กี่รายการหากอินพุตของคุณมีขนาดเล็กหรือรายการส่วนใหญ่จะเรียงลำดับ

00:41.730 --> 00:43.880
มันเร็วมากจริงๆ

00:44.800 --> 00:52.030
มันใช้พื้นที่น้อยมากและที่สำคัญที่สุดมันง่ายในการติดตั้งโค้ด

00:52.350 --> 01:01.860
ดังนั้นโปรดจำไว้ว่ามีเพียงไม่กี่ไอเท็มและข้อมูลที่เรียงลำดับส่วนใหญ่คุณควรใช้การเรียงลำดับการเรียงของการจัดเรียงฟอง

01:02.100 --> 01:04.690
ความจริงแล้วคุณไม่เคยใช้การจัดเรียงฟอง

01:05.500 --> 01:10.740
มันใช้เพื่อจุดประสงค์ทางการศึกษาเป็นวิธีสอนเรียงเท่านั้น

01:10.840 --> 01:17.520
แต่มันหายากมากที่คุณจะพบสิ่งนี้ในชีวิตจริงเพราะไม่มีประสิทธิภาพมากนัก

01:18.380 --> 01:21.020
สิ่งที่เกี่ยวกับการเลือกเรียงลำดับอีกครั้ง

01:21.050 --> 01:26.070
สิ่งเดียวกันกับการเลือกการเรียงลำดับที่คุณเห็นว่าตัวเลขนั้นไม่ค่อยดี

01:26.120 --> 01:28.700
ดังนั้นส่วนใหญ่คุณจะไม่ใช้มัน

01:28.790 --> 01:32.200
ส่วนใหญ่มันถูกใช้เป็นกลไกการสอนที่ฉันทำ

01:32.250 --> 01:38.630
ขออภัยไม่ได้หมายความว่าจะเสียเวลากับการเลือกการเรียนรู้ขออภัย แต่สิ่งสำคัญคือการสร้างรากฐาน

01:39.750 --> 01:41.510
สิ่งที่เกี่ยวกับการจัดเรียงผสาน

01:42.120 --> 01:44.260
และนี่คือสิ่งที่ฉันโปรดปราน

01:44.390 --> 01:50.120
เหตุใด Merced สั้น ๆ ก็ดีจริงๆเพราะการแบ่งแยก

01:50.160 --> 01:54.580
เรามีบันทึกทั้งหมดและมันก็รวดเร็ว

01:54.660 --> 02:03.320
และเนื่องจากค่าเฉลี่ยที่ดีที่สุดในกรณีที่เลวร้ายที่สุดคือ 0 เสมอและล็อกอินเราจึงแบ่งที่นั่งอย่างสม่ำเสมอ

02:03.330 --> 02:07.580
คุณสามารถรับประกันได้ว่านี่จะเป็นกรณี

02:07.830 --> 02:10.520
ซึ่งไม่ใช่กรณีสำหรับอัลกอริทึมอื่น ๆ ส่วนใหญ่

02:10.740 --> 02:15.080
ดังนั้นหากคุณกังวลเกี่ยวกับสถานการณ์กรณีที่เลวร้ายที่สุดคุณควรใช้ Mirch sort

02:15.360 --> 02:28.540
แต่ถ้าคุณต้องการจัดเรียงหน่วยความจำบนเครื่องของคุณและคุณกังวลเกี่ยวกับความซับซ้อนของพื้นที่จัดเรียงการผสานจะมีราคาแพงมากความซับซ้อนของพื้นที่ผู้ใช้ของทั้งหมดนั้น

02:28.700 --> 02:36.190
อย่างไรก็ตามถ้าเขามีไฟล์ขนาดใหญ่ที่สามารถจัดเรียงในหน่วยความจำได้ดังนั้นคุณมีการเรียงลำดับภายนอกที่คุณต้องการอาจจะเหมือนกับกระบวนการที่อยู่นอกหน่วยความจำมันเหมาะสำหรับการจัดเรียงภายนอกแล้วการเรียงแบบผสานนั้นดี

02:36.200 --> 02:50.830
อะไรคือ quicksort

02:51.740 --> 02:59.390
Quicksort นั้นดีกว่า Mirch sort rate โดยเฉลี่ยและความซับซ้อนของพื้นที่

02:59.390 --> 03:05.120
ฉันหมายถึงมันมีความเร็วเท่ากันกับเวลาที่ Merse สั้น แต่มีความซับซ้อนน้อยกว่า

03:05.120 --> 03:12.740
อาจเป็นหนึ่งในอัลกอริทึมการเรียงลำดับที่ได้รับความนิยมมากที่สุด แต่ข้อเสียอย่างหนึ่งคือกรณีที่แย่กว่านี้ถ้าคุณไม่เลือกกระดาษอย่างถูกต้องคุณอาจมีการเรียงลำดับช้ามาก

03:12.740 --> 03:18.260
ๆ

03:18.350 --> 03:26.330
ดังนั้นคุณต้องระวังและถ้าคุณกังวลเกี่ยวกับกรณีที่เลวร้ายที่สุดคุณควรเลือกอย่างอื่น

03:27.410 --> 03:32.250
ตอนนี้คุณอาจถามตัวเองว่าอังเดรจะทำอะไรกับฮีปพอร์ต

03:32.420 --> 03:34.130
คุณไม่ได้พูดถึงเรื่องนั้นจริงๆ

03:34.960 --> 03:39.550
ฉันจะปล่อยทรัพยากรให้คุณเพื่อให้คุณสามารถเรียนรู้เกี่ยวกับ heapsort เช่นกัน

03:39.580 --> 03:46.360
มันคล้ายกับ quicksort และ merge sort แต่คุณเห็นตรงนี้ว่ามันมีความซับซ้อนของพื้นที่ทั้งหมด

03:46.360 --> 03:49.260
นี่ไม่ได้ดีไปกว่าทั้งหมดที่กล่าวมา

03:49.640 --> 03:56.860
เขาสามารถจัดเรียงและไม่มีพฤติกรรมกำลังสองกรณีที่เลวร้ายที่สุดที่ quicksort มีหรือการใช้หน่วยความจำที่ Mirch

03:56.860 --> 04:04.940
sort มี แต่โดยเฉลี่ยแล้วช้ากว่า quicksort โดยส่วนใหญ่

04:04.990 --> 04:12.340
เป็นหนึ่งในสิ่งเหล่านั้นที่มี heapsort เว้นแต่คุณจะกังวลเกี่ยวกับกรณีและหน่วยความจำที่แย่ที่สุดจริง ๆ แล้วคุณอาจใช้ แต่ส่วนใหญ่ฉันจะบอกว่าคุณใช้

04:12.340 --> 04:18.250
quicksort หรือ Murchadh OK แต่คุณกำลังพูดอะไร

04:20.020 --> 04:24.200
คนที่นี่ที่ Swansdown

04:24.220 --> 04:26.250
การเรียงลำดับ radix ของ Bucket

04:26.250 --> 04:29.180
หรือเรียงลำดับ radix และการเรียงลำดับการนับ

04:29.380 --> 04:31.050
ทำไมคุณไม่พูดถึงสิ่งเหล่านี้

04:31.060 --> 04:32.200
ทำไมเราสามารถใช้สิ่งเหล่านี้ได้

04:32.200 --> 04:37.910
พวกเขาดูดีกว่าคนอื่นโดยเฉพาะอย่างยิ่งเมื่อมันมาถึงเวลาที่ซับซ้อน

04:37.910 --> 04:38.660
คำถามที่ดี.

04:38.780 --> 04:40.240
เรามาพูดถึงเรื่องนี้กันต่อไป
