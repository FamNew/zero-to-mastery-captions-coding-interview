WEBVTT

00:01.660 --> 00:15.350
อีกส่วนหนึ่งเสร็จแล้วและเราครอบคลุมการเรียงลำดับอัลกอริทึมการเรียงลำดับโดยเฉพาะในส่วนนี้ส่วนใหญ่เวลาพูดถึงการเรียงลำดับอัลกอริทึมที่เรากำลังจะพูดถึงทั้งหมดและบันทึก

00:15.370 --> 00:20.770
และเราเรียนรู้ว่ามีการเรียงลำดับอัลกอริธึมมากมายและเราครอบคลุมขั้นตอนหลัก

00:20.770 --> 00:22.240
พวกเขาใช้บ่อยขึ้น

00:22.450 --> 00:28.120
หากคุณตื่นเต้นกับหัวข้อและคุณพบว่าสิ่งนี้น่าสนใจและดีสำหรับคุณ

00:28.150 --> 00:29.330
คุณเป็นหนึ่งในไม่กี่คน

00:29.410 --> 00:37.060
ฉันขอแนะนำให้คุณค้นหาอัลกอริทึมการเรียงลำดับที่แตกต่างกัน แต่เพื่อทบทวน quicksort ที่คุณต้องการใช้เมื่อประสิทธิภาพการทำงานของเคสโดยเฉลี่ยมีความสำคัญมากกว่าประสิทธิภาพของเคสที่แย่ที่สุดเนื่องจาก

00:37.450 --> 00:43.720
quicksort ช่วยให้เราสามารถเรียงลำดับ O

00:43.720 --> 00:46.280
และล็อกอิน

00:46.420 --> 00:51.490
แต่ในกรณีที่เลวร้ายที่สุดการเรียงตัวของเตาอบจะรวมกัน

00:51.490 --> 00:59.690
ในทางตรงกันข้ามเป็นสิ่งที่ดีมากเพราะมันเป็น O และ

00:59.690 --> 01:10.460
log เสมอและมันก็มีความเสถียรซึ่งหมายความว่ามันจะให้ผลลัพธ์ที่เหมือนกันเสมอหากมีสองรายการเหมือนกันแม้ว่าความซับซ้อนของพื้นที่จะสูงกว่า quicksort เล็กน้อย

01:10.550 --> 01:12.980
มันเป็นประโยชน์อย่างแน่นอน

01:13.030 --> 01:19.630
นอกจากนี้เรายังพูดคุยเกี่ยวกับการเรียงลำดับการเลือกการแทรกและการเรียงลำดับฟอง

01:19.630 --> 01:24.740
สิ่งเหล่านี้สนุกเมื่อคุณทำอะไรที่รวดเร็วและสกปรกและคุณต้องการทดสอบด้วยการจัดเรียง

01:24.790 --> 01:44.340
แต่ในชีวิตจริงคุณจะไม่ใช้มันและเป็นไปได้มากที่สุดในชีวิตจริงที่คุณใช้เฟรมเวิร์กหรือภาษาหรือการเรียงลำดับอัลกอริธึมข้อดีของพวกเขาคือพวกมันค่อนข้างง่ายต่อการนำไปใช้ อย่างนี้.

01:44.410 --> 01:50.740
ในกรณีที่หายากเหล่านั้นที่พวกเขาขอให้คุณใช้อัลกอริทึมการเรียงลำดับคุณจะพูดได้ดีเพราะเรามีข้อ

01:50.740 --> 02:02.170
จำกัด เวลาที่ฉันชอบใช้สิ่งที่ไร้เดียงสาและไม่มีประสิทธิภาพเช่นการเรียงฟองซึ่งช้าในชีวิตจริง ไม่เป็นไรกับคุณเพราะ

02:02.380 --> 02:16.200
เนื่องจากเราสามารถสันนิษฐานได้ว่าการเรียงลำดับนั้นเป็นสิ่งที่เราสามารถนำไปใช้กับไลบรารีหรือค่อนข้างง่ายด้วยเอกสารประกอบหรือคุณสามารถพูดอะไรบางอย่างเช่นเราสามารถใช้ผสานการเรียงลำดับเพื่อแบ่งและพิชิตรหัสเพื่อให้มีประสิทธิภาพมากขึ้น

02:16.400 --> 02:21.620
และวิธีนี้คุณแสดงผู้สัมภาษณ์ว่าใช่คุณสามารถใช้การจัดเรียงเช่นการเรียงลำดับฟอง แต่คุณยังรู้เกี่ยวกับสิ่งต่าง ๆ เช่น

02:21.620 --> 02:26.690
Merceron เพื่อทำให้มีประสิทธิภาพมากขึ้น

02:28.330 --> 02:44.000
ดังนั้นในตอนท้ายของทั้งหมดนี้ฉันหวังว่าคุณจะเข้าใจการแลกเปลี่ยนที่คุณสามารถดูอัลกอริธึมการเรียงลำดับและตัดสินใจตามความเสถียรของความเร็วและความสามารถในการอ่านได้ของพวกเขาไม่ว่าอินพุตจะเรียงลำดับแล้ว

02:44.050 --> 02:50.090
อินพุทนั้นมีขนาดใหญ่เพียงใดคุณสามารถตัดสินใจได้อย่างถูกต้องในการจัดเรียง

02:50.220 --> 02:51.620
ฉันจะดูในถัดไป

02:51.950 --> 02:52.190
ผมบ๊อบ
