WEBVTT

00:01.310 --> 00:02.160
ยินดีต้อนรับกลับ.

00:02.270 --> 00:08.540
เราได้พูดถึงอัลกอริธึมการเรียงลำดับห้าข้อเหล่านี้และตอนนี้คุณควรรู้ว่าการเรียงลำดับ Merse

00:08.540 --> 00:16.040
และการเรียงลำดับอย่างรวดเร็วแม้ว่าพวกเขาจะใช้ยากกว่านั้นเป็นอัลกอริทึมที่ใช้บ่อยที่สุดในชีวิตจริง การเพิ่มประสิทธิภาพของ

00:16.040 --> 00:21.710
Lagann

00:21.950 --> 00:26.340
แต่เราไม่สามารถเอาชนะโอ้จากและเข้าสู่ระบบและ

00:26.520 --> 00:27.960
และนี่คือสิ่งที่

00:28.020 --> 00:33.980
ในทางคณิตศาสตร์มันเป็นไปไม่ได้ที่จะปรับปรุงในเรื่องนี้

00:34.170 --> 00:41.080
ถ้าใครมากับอัลกอริทึมที่เร็วกว่านี้พวกเขาจะไปได้ดีพวกเขาจะรวยมาก

00:41.130 --> 00:49.680
ในทางคณิตศาสตร์มันเป็นไปไม่ได้เพราะทั้งหมดและ Lagann

00:49.680 --> 00:56.510
หมายความว่าเราต้องเรียงลำดับโดยการเปรียบเทียบอัลกอริธึมการเรียงลำดับทั้งหมดเหล่านี้ต้องเปรียบเทียบทุกจำนวนกับกัน

00:56.790 --> 01:00.290
แต่มีข้อยกเว้นหนึ่งข้อสำหรับกฎนี้

01:00.510 --> 01:05.920
คุณสามารถปรับปรุงสิ่งนี้หากคุณไม่ทำการเปรียบเทียบ

01:06.780 --> 01:07.160
ฮะ.

01:07.350 --> 01:08.760
นั่นหมายความว่าอย่างไร.

01:08.850 --> 01:18.330
มีอินพุตส่วนเล็ก ๆ ที่เราสามารถเอาชนะและบันทึกได้และสิ่งเหล่านี้เรียกว่าไม่ใช่การเปรียบเทียบประเภทและคุณจะเห็นการเรียงลำดับการนับและการเรียง

01:18.750 --> 01:25.930
radix

01:26.010 --> 01:33.130
แต่นั่นหมายความว่าการเรียงลำดับการนับในการเรียง Radix เป็นวิธีคิดการเรียงลำดับที่แตกต่างกันโดยสิ้นเชิง

01:34.200 --> 01:44.290
ด้วยการเรียงลำดับแบบเปรียบเทียบเราตัดสินใจลำดับของตัวเลขโดยการถามคำถามเฮ้ว่าอาหารนี้มีค่ามากกว่าที่นั่น

01:44.610 --> 01:46.600
แล้วอันที่นั่นตรงนั้น

01:46.710 --> 01:54.400
และเราเพิ่งทำไปเรื่อย ๆ ว่าตัวเลขทุกตัวถูกเปรียบเทียบกับการเรียงลำดับแบบไม่เปรียบเทียบอื่น ๆ มันแตกต่างกันเล็กน้อย

01:54.480 --> 02:06.320
เราจะใช้วิธีการจัดเก็บตัวเลขและข้อมูลในคอมพิวเตอร์ของเราเป็นศูนย์และเก็บและใช้ประโยชน์จากข้อเท็จจริงเพื่อจัดเรียงสิ่งของ

02:06.490 --> 02:08.960
ตอนนี้สิ่งนี้จะซับซ้อนขึ้น

02:09.130 --> 02:16.960
และอย่างที่คุณเห็นในบทความนี้แค่ดูไดอะแกรมและตัวอย่างเช่น

02:16.960 --> 02:25.600
Radix เรียงลำดับตรงนี้ในวิธีที่เราเก็บตัวเลขในศูนย์และอันที่เราสามารถใช้ความรู้นี้เพื่อเรียงลำดับบางสิ่ง

02:25.600 --> 02:30.980
ฉันจะปล่อยให้ทรัพยากรสำหรับคุณถ้าคุณต้องการได้รับทางเทคนิคจริง ๆ และในหัวข้อนี้

02:31.150 --> 02:38.770
ฉันขอเตือนคุณว่าคุณจะได้เลขเล็กน้อย แต่สิ่งหนึ่งที่ควรทราบที่นี่คืออัลกอริธึมการเรียงลำดับการนับเรียงเหล่านี้และการเรียงลำดับของ

02:38.770 --> 02:48.980
Radix จะทำงานกับตัวเลขจำนวนเต็มในช่วง จำกัด เท่านั้น

02:49.060 --> 02:54.730
ดังนั้นถ้าคุณมีตัวเลขเพียงอย่างเดียวที่คุณต้องการแก้ปัญหาการเรียงลำดับและช่วงของตัวเลขเหล่านี้เริ่มจากสมมุติว่าศูนย์ถึง 100 นั่นคือช่วงเล็ก

02:54.730 --> 03:02.370
ๆ คุณจะใช้สิ่งนี้เพื่อทำให้สิ่งต่าง ๆ เร็วขึ้น

03:03.310 --> 03:06.220
ประเภทของข้อมูล

03:06.370 --> 03:12.340
ใช้งานได้จริงกับตัวเลขเท่านั้นเนื่องจากวิธีการจัดเก็บหมายเลขในหน่วยความจำ

03:12.360 --> 03:17.150
คุณเห็นว่าฉันชอบบางสิ่งบางอย่างเช่นการผสานการเรียงลำดับหรือ quicksort ที่เป็นสากล

03:17.250 --> 03:26.090
นั่นคือพวกเขาสามารถเรียงลำดับข้อมูลประเภทใดก็ได้เช่นการเรียงลำดับการนับและการเรียง Radix จะมีประโยชน์สำหรับจำนวนเต็มความยาวคงที่

03:27.140 --> 03:32.080
แต่พวกเขาสามารถเอาชนะความเร็วของทุกคนเมื่อเข้าสู่ระบบ

03:32.270 --> 03:40.640
และอย่างที่คุณเห็นนี่คือเรเดียนของการจัดเรียงเรเดียนของการจัดเรียงในกรณีเฉลี่ยของพวกมันทั้งหมดและบวก K ของและ K ของและ

03:40.820 --> 03:48.640
k อะไรและ k หมายถึงอะไรเกินขอบเขตของหลักสูตรนี้

03:48.830 --> 03:54.570
และบางคนก็โต้แย้งว่าในที่สุดสิ่งนี้จริง ๆ แล้วยังช้าอยู่

03:54.920 --> 03:56.800
ฉันจะปล่อยทรัพยากรให้คุณอย่างที่ฉันพูด

03:56.900 --> 04:02.570
ดังนั้นคุณสามารถอ่านได้ แต่สิ่งเดียวที่คุณต้องรู้เกี่ยวกับเรื่องนี้คือบางครั้งถ้าคุณมีตัวเลขที่อยู่ในช่วงที่กำหนดมันอาจเร็วกว่า

04:02.570 --> 04:09.900
quicksort หรือ Murcer

04:09.980 --> 04:16.940
ตอนนี้เราก็รู้แล้วเรามาทำแบบฝึกหัดการสัมภาษณ์โดยเรียงลำดับเพื่อเสริมความแข็งแกร่งให้กับสิ่งที่เราเพิ่งเรียน
