WEBVTT

00:01.630 --> 00:08.320
Implementiamo la nostra struttura dei due dati, la prima cosa che faremo è la

00:08.350 --> 00:15.300
semplice e semplice panoramica che ci dice semplicemente qual è il primo elemento della nostra coda.

00:15.340 --> 00:28.020
Quindi questo è il primo punto in cui vogliamo dare una sbirciatina se eseguo la mia sbirciatina da puntino che dovrei ottenere.

00:28.340 --> 00:36.560
No perché mentre non c'è assolutamente nulla nella nostra coda Che dire su Cue o Anke.

00:36.810 --> 00:37.980
Non sono sicuro di come pronunciarlo.

00:37.980 --> 00:40.670
Andiamo con te lì dentro.

00:40.890 --> 00:47.070
Vogliamo aggiungere alla nostra lista d'attesa di nuovo simile a quello che abbiamo fatto con gli stack.

00:47.070 --> 00:53.790
Creeremo un nuovo nodo e creeremo un'istanza di questa nuova nota con un valore.

00:53.790 --> 00:55.960
Ricorda che abbiamo la lezione qui.

00:57.700 --> 01:04.330
E questo valore verrà aggiunto a un nodo che ha questo valore e questo punto dopo.

01:04.620 --> 01:14.130
Vogliamo quindi controllare e dire hey se questo DOD lenth è chiamato a zero.

01:14.160 --> 01:16.970
Ciò significa che non c'è nulla nella nostra coda.

01:17.430 --> 01:28.930
Quindi, basta dire che questa roba prima equivale al nuovo nodo e lo stesso vale per questo punto perché c'è solo

01:28.940 --> 01:32.040
un nodo nella nostra lista.

01:32.050 --> 01:38.410
Questo è molto simile a ciò che abbiamo implementato nello stack.

01:38.510 --> 01:50.120
Altrimenti possiamo dire che non può durare questo punto dopo.

01:50.130 --> 01:53.200
Quindi questo è tutto all'ultima riga.

01:53.520 --> 01:59.860
E qualunque sia il valore successivo, quale inizialmente è l'ultima volta punta a no.

01:59.970 --> 02:07.880
Ma vogliamo aggiornarlo per dire questa volta invece che Point No Point, quindi annoti come l'ultimo in linea.

02:08.550 --> 02:19.010
E vogliamo aggiornare questo fatto l'ultimo due ora uguale al nuovo nodo in modo che qualsiasi cosa fosse l'ultima in

02:19.010 --> 02:25.490
linea ora punta al nuovo nodo e il nuovo nodo è ora l'ultimo

02:25.730 --> 02:38.640
che si accerterà che questo ultimo punti a no Finalmente possiamo dimentica di aumentare la lunghezza di 1 e quindi possiamo semplicemente restituire questa nostra

02:38.930 --> 02:40.390
struttura dati.

02:40.470 --> 02:41.640
Quindi diamo un'occhiata.

02:41.640 --> 02:45.270
Vogliamo creare questa linea.

02:45.370 --> 02:52.840
Q Quindi tutto ciò che faremo è dire che vogliamo avere la stecca della gioia.

02:53.090 --> 02:57.520
In effetti, come prima nota di Ron, mi rallegro del prossimo.

02:57.740 --> 03:02.620
E l'ultimo nodo è di nuovo Gioia con il prossimo no e la lunghezza di uno.

03:02.630 --> 03:03.820
Fin qui tutto bene.

03:04.010 --> 03:08.130
Cosa succede se Matt arriva e si mette in fila pure.

03:08.340 --> 03:13.010
Noi Matt abbiamo ora la prima nota che è la gioia e l'ultimo nodo.

03:13.070 --> 03:14.020
Quello è Matt.

03:14.090 --> 03:21.210
E qui puoi vedere che la prima nota di gioia punta al nodo successivo che non lo è.

03:21.340 --> 03:23.360
Bene, aggiungiamone altri aggiungeranno Pawel che

03:26.050 --> 03:27.910
è appena entrato in linea.

03:28.040 --> 03:32.220
E poi, finalmente, è arrivato un po 'in ritardo, ma si è anche messo in fila.

03:32.310 --> 03:36.700
Se clicco su Run perfect, la nostra ultima nota è sumir.

03:36.760 --> 03:45.480
Abbiamo una lenticchia e abbiamo il nodo di join che è il primo elemento della nostra coda. Ora diciamo che apriamo la porta

03:45.480 --> 03:48.510
e iniziamo a lasciar entrare la gente.

03:48.600 --> 03:55.430
Vogliamo deselezionare questa lista e andare dal primo al primo in tutto il modo fino alla fine, ancora

03:56.480 --> 04:03.740
una volta è molto simile a una pila, tranne per il fatto che prendiamo il nodo dall'inizio anziché da esso.

04:03.750 --> 04:13.520
E quindi diremo innanzitutto se non c'è questo primo caso se non c'è il primo oggetto, possiamo anche controllare la Leontine

04:13.520 --> 04:14.810
se vogliamo.

04:14.810 --> 04:17.330
Quindi la lista è vuota.

04:17.330 --> 04:20.010
In tal caso, basta restituire no.

04:20.480 --> 04:26.270
E per lista intendo la coda se la coda è vuota quindi restituire no.

04:26.390 --> 04:33.950
Vogliamo anche verificare se questo è l'ultimo nodo della nostra coda in modo che possiamo fare

04:33.950 --> 04:44.120
qualcosa di simile con il motivo per cui non abbiamo instax, possiamo dire che se all'inizio partiamo per primi equivale a questo, possiamo

04:44.130 --> 04:54.160
solo controllare gli anni lenth se vogliamo, ma per ora questo andrebbe bene se questo è il caso che voglio che questo punto

04:54.880 --> 05:05.590
duri uguale a Knol, ricordati di assicurarti che ora gli ultimi punti a tutti e, a prescindere dal momento in cui deselezioniamo, vogliamo dire questo.

05:05.800 --> 05:16.950
Primo equivale a questo punto primo punto successivo che è chiunque sia il primo ora perché stiamo per rimuovere la gioia che vogliamo chi

05:17.280 --> 05:24.490
è sempre dopo la gioia che è opaco per essere in prima priorità ora.

05:25.380 --> 05:35.090
Quindi diciamo semplicemente questo lenth minus minus per diminuire la lunghezza e possiamo tornare.

05:35.320 --> 05:40.310
Se gestisco bene, è la stessa cosa perché non l'abbiamo eseguito qui.

05:40.450 --> 05:42.060
Quindi andiamo avanti e farlo.

05:42.580 --> 05:52.710
Facciamo prima di tutto la mia sbirciatina puntino per vedere chi dovrebbe uscire dalla coda e questa è gioia.

05:52.720 --> 06:03.110
Quindi, se faccio il mio dequadro Q Dot e faccio clic su run, vediamo che ora Matt è il primo in linea.

06:03.110 --> 06:08.900
La gioia è stata rimossa e lenth è di tre e una cosa da sottolineare qui.

06:09.090 --> 06:19.500
Una volta eseguito il dequeue qui abbiamo completamente perso il nodo gioia dalla nostra memoria perché non abbiamo più riferimenti

06:19.590 --> 06:20.660
ad esso.

06:20.670 --> 06:27.420
Niente sta puntando a quello spazio di memoria e Javascript come funziona sta andando a raccogliere

06:27.750 --> 06:33.930
i rifiuti e rimuovere la gioia se volessimo tenere un puntatore alla gioia.

06:33.970 --> 06:36.490
Quindi potremmo dire Konst tenendo

06:39.240 --> 06:51.080
il puntatore e pronunciamo questo punto per primo, in modo che prima di aggiornare chi è il primo, possiamo fare riferimento a questa variabile in modo

06:51.080 --> 06:57.550
che potremmo potenzialmente se vogliamo ancora usare la gioia, ad esempio in una lista di

06:57.590 --> 07:00.950
attesa, forse vogliamo ancora fare qualcosa all'utente.

07:01.160 --> 07:07.130
Possiamo farlo e avere ancora accesso al nodo di join.

07:07.130 --> 07:08.350
Bene, finiamo l'inclinazione.

07:08.370 --> 07:14.810
Abbandoniamo tutti da qui se faccio la dequeue e restituiamo questo a questo.

07:14.810 --> 07:16.330
Quindi vediamo cosa sta succedendo.

07:16.850 --> 07:22.960
Se corro adesso, Pavel è il primo in fila e il sumir è l'ultimo della fila.

07:22.970 --> 07:32.400
Se clicco o se ho nuovamente dequeue e faccio clic su Esegui sumir è l'ultima persona nell'elenco.

07:32.400 --> 07:34.810
Ma poi possiamo finalmente lasciarlo entrare.

07:35.690 --> 07:36.950
Eccoci.

07:37.010 --> 07:45.640
Ora abbiamo un cubo vuoto e abbiamo appena implementato la nostra struttura dati Q ben fatta.

07:45.660 --> 07:47.190
Spero ti sia divertito.

07:47.190 --> 07:48.730
Vedrò nel prossimo video.

07:49.040 --> 07:49.270
Babai.
