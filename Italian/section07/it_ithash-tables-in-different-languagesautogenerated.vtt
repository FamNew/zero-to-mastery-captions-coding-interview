WEBVTT

00:01.800 --> 00:02.960
Ben tornato.

00:03.090 --> 00:10.560
Ora le tabelle di hash vengono implementate in modo diverso in lingue diverse, ma la maggior parte delle volte la

00:10.560 --> 00:14.940
chiave e il valore possono essere qualsiasi tipo di struttura dati.

00:15.240 --> 00:23.010
Abbiamo visto qui che possiamo avere una funzione come valore possiamo avere un altro oggetto se vogliamo come valore

00:23.790 --> 00:27.340
possiamo avere un array come valore se vogliamo.

00:27.590 --> 00:30.760
E voglio dire che puoi farlo anche negli array.

00:30.830 --> 00:33.950
Non abbiamo solo numeri e stringhe in una gara.

00:34.040 --> 00:42.790
Possiamo avere matrici di oggetti, ma a volte puoi anche avere chiavi che sono più che semplici stringhe.

00:43.190 --> 00:52.890
Potresti potenzialmente avere funzioni come chiavi e un valore che è anche una funzione o forse un numero

00:52.890 --> 00:56.540
o un array qualunque tu voglia.

00:56.620 --> 01:04.900
Ora in Javascript in un oggetto come questo se passi una chiave che è un numero o una

01:04.900 --> 01:13.540
funzione ottiene effettivamente una stringa che trovi e consente solo stringhe di chiavi ma con la nuova versione di javascript

01:14.440 --> 01:19.330
ed E6 hai effettivamente qualcosa chiamato Map e set .

01:20.250 --> 01:23.460
Che potrebbe anche essere familiare in altre lingue.

01:23.460 --> 01:28.650
Una mappa è creata in questo modo.

01:29.730 --> 01:38.170
E la differenza tra una mappa e un oggetto è il fatto che una mappa ti consente di salvare qualsiasi tipo di

01:38.940 --> 01:40.230
dati come chiave.

01:40.240 --> 01:46.740
Ricorda con un oggetto che puoi salvare solo la chiave come una stringa con una mappa.

01:46.740 --> 01:53.700
Ci permette se vogliamo anche avere funzioni come chiavi o matrici come chiavi.

01:53.790 --> 02:00.150
E un altro vantaggio della mappa è che mantiene l'ordine di inserimento.

02:00.210 --> 02:01.010
Cosa significa.

02:02.070 --> 02:07.140
Bene con un oggetto non c'è ordine c'è.

02:07.140 --> 02:14.900
Se torniamo al nostro diagramma, i nostri dati vengono inseriti casualmente in luoghi diversi.

02:15.830 --> 02:26.180
Se torniamo all'esempio dei nostri utenti, vediamo che non c'è assolutamente alcun ordine quando prendiamo tutti i valori di

02:26.180 --> 02:27.420
un oggetto.

02:27.770 --> 02:35.390
Iniziamo con, diciamo, Lisa Smith, che è stata inserita per seconda, poi John Smith, quindi forse Sandra Dee

02:36.020 --> 02:38.930
Sam Doe viene selezionata per ultima.

02:38.960 --> 02:47.770
Non esiste un ordine come quello che c'era in gara ma ci sono alcune versioni di hash come mappe

02:47.860 --> 02:56.050
e javascript che mantengono questo ordine di inserimento in modo tale che quando passiamo in loop gli

02:56.590 --> 03:04.670
oggetti in un oggetto abbiamo questo set di ordini mantenuto è una caratteristica molto simile mappare.

03:04.740 --> 03:10.050
L'unica differenza è che memorizza solo le chiavi senza valori.

03:10.050 --> 03:17.670
Quindi vedi qui ogni lingua, come abbiamo accennato, con le sue versioni predefinite di strutture dati.

03:17.940 --> 03:21.270
Ma alla fine della giornata tutti sono tavoli hash.

03:21.270 --> 03:28.920
Ma per capire veramente come funzionano i tavoli hash penso che dovremmo crearne uno nel prossimo video che faremo

03:29.090 --> 03:30.000
proprio questo.
