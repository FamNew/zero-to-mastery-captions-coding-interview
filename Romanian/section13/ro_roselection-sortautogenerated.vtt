WEBVTT

00:01.240 --> 00:01.910
Bine ai revenit.

00:02.080 --> 00:06.990
Să vorbim despre al doilea algoritm de sortare și se numește selecție.

00:07.080 --> 00:17.000
Sortați acum sortarea selecției este din nou una dintre cele mai simple moduri posibile de sortare a listei și algoritmul funcționează scanând o

00:17.000 --> 00:23.510
listă de elemente pentru elementul cel mai mic și apoi schimbând acel element pentru cel

00:23.510 --> 00:25.300
din prima poziție.

00:26.160 --> 00:28.790
Permiteți-mi să vă arăt aici cu această animație.

00:29.160 --> 00:32.430
Am început cu primul element și apoi cu al doilea element.

00:32.430 --> 00:40.740
Roșu aici indică faptul că este cel mai mic element pe care îl vedeți și albastrul scanează înainte pentru a găsi cel

00:40.740 --> 00:41.960
mai mic element.

00:42.000 --> 00:47.700
Deci, acum opt este cel mai mic element, dar întâlnim cinci, astfel încât cinci comută la cel mai mic element pe

00:48.090 --> 00:49.100
care l-am întâlnit.

00:49.170 --> 00:52.650
Deci doi devin un element mic.

00:52.810 --> 00:59.650
Continuăm să mergem șase nu este mai mic decât două nouă nu este trei nu ne întâlnim unul.

00:59.680 --> 01:01.400
Unul devine cel mai mic element.

01:01.540 --> 01:02.350
Continuăm.

01:02.380 --> 01:03.300
Noi găsim zero.

01:03.310 --> 01:08.670
Deci 0 devine cel mai mic element și tocmai am terminat lista.

01:08.730 --> 01:14.660
Deci, acum ne mutăm la primul index din lista noastră.

01:14.790 --> 01:23.980
Așa că am schimbat-o și apoi continuăm să ne întoarcem la început pentru a găsi cel mai mic element.

01:24.730 --> 01:32.340
Prin lista care este una și apoi plasarea acelui în cel de-al doilea index și continuăm să mergem așa până când

01:33.960 --> 01:37.810
găsim cel mai mic element, îl plasăm în lista următoare.

01:37.890 --> 01:47.420
Următoarea listă din lista următoare până când lista noastră este complet sortită, după cum puteți vedea sortarea

01:47.430 --> 01:48.160
selecției.

01:48.310 --> 01:55.510
Încă vom vedea o complexitate de timp a tuturor și pătrat dacă ne uităm la graficul de complexitate pe

01:56.350 --> 02:00.340
care îl vedem atunci selecția sortimentului nu este foarte rapidă.

02:00.580 --> 02:02.830
Similar cu sortarea cu bule.

02:03.100 --> 02:09.940
Avem cele imbricate pentru bucle, dar utilizarea este o complexitate spațială a unuia.

02:09.940 --> 02:14.250
Nu adaugă nici un fel de date suplimentare pe lângă intrare.

02:14.290 --> 02:22.660
Acum, folosind animația pe care tocmai ați văzut-o puteți implementa propriile dvs. selecții sau am de gând să las acest lucru pentru tine

02:22.660 --> 02:28.750
ca un exercițiu folosind De ce știți din sortarea bubble și de ce tocmai ați văzut

02:29.010 --> 02:36.370
sort selecție cum puteți utiliza aceste informații pentru a sorta lista folosind acest algoritm și vă vom arăta soluția în

02:36.460 --> 02:37.430
următorul videoclip.
