WEBVTT

00:01.630 --> 00:08.320
Să implementăm structura noastră de date, primul lucru pe care o vom face este o

00:08.350 --> 00:15.300
privire frumoasă și simplă care ne spune pur și simplu care este primul element din coada noastră.

00:15.340 --> 00:28.020
Deci, acest lucru este mai întâi în cazul în care vrem să ne uităm în cazul în care am alerga punctul meu de vedere cue ar trebui să obțin.

00:28.340 --> 00:36.560
Nu, pentru că nu există absolut nimic în coada noastră. Ce zici de tac sau de Anke.

00:36.810 --> 00:37.980
Nu sunt sigur cum să pronunți asta.

00:37.980 --> 00:40.670
Să mergem cu tine acolo.

00:40.890 --> 00:47.070
Vrem să adăugăm în lista de așteptare din nou, similar cu ceea ce am făcut cu stivele.

00:47.070 --> 00:53.790
Vom crea un nou nod și vom institui această notă nouă cu o valoare.

00:53.790 --> 00:55.960
Ține minte că avem clasa aici.

00:57.700 --> 01:04.330
Și această valoare va fi adăugată la un nod care are această valoare și la acest punct următor.

01:04.620 --> 01:14.130
Apoi dorim să verificăm și să spunem hei dacă acest DOD lenth este apelat la zero.

01:14.160 --> 01:16.970
Asta înseamnă că nu există nimic în coada noastră.

01:17.430 --> 01:28.930
Apoi pur și simplu spunem că aceste lucruri vor fi egale cu noul nod și același cu acest punct pentru că există doar

01:28.940 --> 01:32.040
un nod în lista noastră.

01:32.050 --> 01:38.410
Acest lucru este foarte similar cu ceea ce am implementat în stack.

01:38.510 --> 01:50.120
În caz contrar, putem spune că acest lucru nu poate dura punct următor.

01:50.130 --> 01:53.200
Așa este ceea ce este la ultima linie.

01:53.520 --> 01:59.860
Și indiferent de valoarea următoare este ceea ce inițial, indiferent care este ultimul, arată că nu.

01:59.970 --> 02:07.880
Dar vrem să actualizăm acest lucru pentru a spune acest moment în loc de Punctul No Point, atunci vă notați ca ultima în linie.

02:08.550 --> 02:19.010
Și vrem să actualizăm acest lucru făcut ultimele două acum egale cu noul nod, astfel încât ceea ce a fost ultima în linie

02:19.010 --> 02:25.490
este acum indică la noul nod și nodul nou este acum ultimul care se

02:25.730 --> 02:38.640
va asigura că acest ultim punct de a nu În cele din urmă putem uitați să măriți lungimea cu 1 și apoi să revenim pur și simplu această structură

02:38.930 --> 02:40.390
a datelor noastre.

02:40.470 --> 02:41.640
Să aruncăm o privire.

02:41.640 --> 02:45.270
Vrem să creăm această linie.

02:45.370 --> 02:52.840
Q Deci tot ce vom face este să spunem că vrem să ne bucurăm de bucurie.

02:53.090 --> 02:57.520
De fapt, ca și prima notă a lui Ron, mă bucur cu următoarea.

02:57.740 --> 03:02.620
Și ultimul nod este din nou Joy cu următorul nr și lungimea unuia.

03:02.630 --> 03:03.820
Până acum, bine.

03:04.010 --> 03:08.130
Ce se întâmplă dacă vine și Matt?

03:08.340 --> 03:13.010
Noi Matt avem acum prima notă care este bucuria și ultimul nod.

03:13.070 --> 03:14.020
Acesta este Matt.

03:14.090 --> 03:21.210
Și puteți vedea aici că prima notă de bucurie indică următorul nod care nu este.

03:21.340 --> 03:23.360
În regulă, să adăugăm încă câteva, va adăuga

03:26.050 --> 03:27.910
Pawel, care tocmai a ajuns în linie.

03:28.040 --> 03:32.220
Apoi, în cele din urmă, a început să se întoarcă puțin, dar a intrat și în linie.

03:32.310 --> 03:36.700
Dacă fac clic pe Executare perfectă, ultima noastră notă este sumir.

03:36.760 --> 03:45.480
Avem o linte și avem nodul care este primul element din coada noastră Acum să spunem că deschidem ușa

03:45.480 --> 03:48.510
și începem să lăsăm oamenii înăuntru.

03:48.600 --> 03:55.430
Vrem să scapăm de această listă și să mergem de la prima dată în prima, până la final,

03:56.480 --> 04:03.740
din nou, este foarte asemănător cu un stiblu, cu excepția faptului că luăm nodul de la început în loc de acesta.

04:03.750 --> 04:13.520
Și așa vom începe să spunem dacă nu mai e primul, dacă nu este primul element pe care îl putem verifica și pe

04:13.520 --> 04:14.810
Leontine dacă vrem.

04:14.810 --> 04:17.330
Deci lista este goală.

04:17.330 --> 04:20.010
În acest caz, întoarceți doar nr.

04:20.480 --> 04:26.270
Și după listă vreau să spun coada dacă coada este goală, apoi întoarceți nu.

04:26.390 --> 04:33.950
De asemenea, vrem să verificăm dacă acesta este ultimul nod din coada noastră, astfel încât să

04:33.950 --> 04:44.120
putem face ceva asemănător cu motivul pentru care nu am instalat. Putem spune că dacă începe mai întâi să fie egal cu ultimul,

04:44.130 --> 04:54.160
din nou, putem verifica ani cât mai bine dacă vrem, acum ar fi bine dacă asta e situația Vreau ca ultimul punct să

04:54.880 --> 05:05.590
fie egal Knol amintiți-vă că vă asigurați că ultimul punct pentru toți și, indiferent cât de curând vom dequeue vrem să spunem acest lucru.

05:05.800 --> 05:16.950
Mai întâi este egal cu acest punct primul punct care este cel care este primul pentru că acum vom elimina bucuria pe care o

05:17.280 --> 05:24.490
dorim, care este vreodată după bucurie care este mată să fie în primă prioritate acum.

05:25.380 --> 05:35.090
Apoi pur și simplu spunem că această lent minus minus pentru a micșora lungimea și ne putem întoarce.

05:35.320 --> 05:40.310
Dacă conduc bine acest lucru este același lucru pentru că nu l-am rulați aici.

05:40.450 --> 05:42.060
Să mergem mai departe și să facem asta.

05:42.580 --> 05:52.710
Mai întâi de toate, să vedem punctul meu de vedere pentru a vedea cine ar trebui să iasă din coadă și aceasta este bucuria.

05:52.720 --> 06:03.110
Deci, dacă fac un Q Q Dot dequeue și fac clic pe Run, vedem că acum Matt este primul în linie.

06:03.110 --> 06:08.900
Bucuria a fost eliminată și lenth este de trei și un lucru pentru a sublinia aici.

06:09.090 --> 06:19.500
Odată ce am rula dequeue aici am pierdut complet nod bucurie din memoria noastră pentru că nu mai avem de referință

06:19.590 --> 06:20.660
la ea.

06:20.670 --> 06:27.420
Nimic nu indică faptul că spațiul de memorie și Javascript așa cum funcționează, se va colecta

06:27.750 --> 06:33.930
gunoi și va elimina bucuria dacă vrem să ținem un pointer în bucurie.

06:33.970 --> 06:36.490
Apoi am putea spune că

06:39.240 --> 06:51.080
Konst deține pointerul și spune acest punct mai întâi, astfel încât înainte de a actualiza pe oricine este primul, îl putem referi la această variabilă, astfel

06:51.080 --> 06:57.550
încât să putem potențial dacă dorim să folosim bucurie, de exemplu, într-o aplicație pe

06:57.590 --> 07:00.950
lista de așteptare. faceți ceva pentru utilizator.

07:01.160 --> 07:07.130
Putem face acest lucru și avem încă acces la nodul de conectare.

07:07.130 --> 07:08.350
În regulă, să terminăm oblicul.

07:08.370 --> 07:14.810
Hai să scăpăm pe toți de aici, dacă mă rătăcesc Și să revenim la asta.

07:14.810 --> 07:16.330
Deci vedem ce se întâmplă.

07:16.850 --> 07:22.960
Dacă eu alerg acum Pavel este primul în linie și sumir este ultima în linie.

07:22.970 --> 07:32.400
Dacă dau clic sau dacă am scăpat din nou și dau clic pe Executare sumir este ultima persoană din listă.

07:32.400 --> 07:34.810
Dar apoi putem să-l lăsăm în final.

07:35.690 --> 07:36.950
Vom merge acolo.

07:37.010 --> 07:45.640
Acum avem un cub gol și tocmai am implementat propria noastră structură de date Q bine făcută.

07:45.660 --> 07:47.190
Sper ca te-ai distrat.

07:47.190 --> 07:48.730
Voi vedea în următorul videoclip.

07:49.040 --> 07:49.270
Babai.
