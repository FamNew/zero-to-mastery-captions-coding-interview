WEBVTT

00:00.910 --> 00:07.810
Witamy ponownie, jak wspomniałem w poprzednim filmie, w rzeczywistości istnieją dwa rodzaje wyścigów.

00:07.830 --> 00:13.820
Jeden nazywa się statyczny, a drugi dynamiczny wyścig.

00:13.830 --> 00:16.940
Jaka jest różnica między tymi dwoma.

00:16.940 --> 00:26.950
Cóż, jedynym ograniczeniem statycznym lub rasowym jest to, że mają one określony rozmiar, co oznacza, że musisz określić liczbę elementów,

00:26.950 --> 00:30.940
które Twoja tablica będzie zawierała z wyprzedzeniem.

00:31.810 --> 00:39.490
Więc w tym przypadku, gdyby to była tablica statyczna, powiedziałbym, że utworzyłem tablicę siedmiu elementów,

00:39.760 --> 00:50.740
wiedząc z góry, że na mojej liście zakupów będę miał tylko siedem pozycji, ponieważ tablice są przydzielane w sąsiednich blokach pamięci,

00:50.740 --> 00:53.390
gdy są tworzone .

00:53.720 --> 01:01.810
Nie ma gwarancji, że po przydzieleniu 7 półek pamięci, które można nadal dodawać,

01:02.680 --> 01:10.830
zwłaszcza w celu rozwiązania tego problemu z tablicami statycznymi, które wymagają nam powiedzieć z wyprzedzeniem.

01:10.910 --> 01:21.500
Hej, chcę tylko 7 półek pamięci z dynamicznymi tablicami wyścigowymi i dynamicznymi pozwala nam kopiować i odbudowywać

01:21.560 --> 01:26.690
tablicę w nowej lokalizacji, która ma więcej pamięci.

01:26.690 --> 01:34.590
Jeśli potrzebowaliśmy więcej pamięci, na przykład z naszą statyczną tablicą, jeśli zdamy sobie sprawę, że zapomnieliśmy o innym elemencie z naszej

01:34.590 --> 01:36.820
listy i potrzebujemy 8 elementów.

01:37.050 --> 01:42.080
Co się stanie, skopiujemy całą tę tablicę.

01:42.180 --> 01:53.380
Przydzielamy 14 bloków pamięci i wklejamy tę listę oraz ósmy element do tej nowej lokalizacji.

01:53.460 --> 02:00.130
Pozwól mi pokazać, jak to działa z kodem wyświetlanym w językach takich jak C ++.

02:00.180 --> 02:08.130
Pozwól mi przewinąć tutaj w C ++, który ma statyczne tablice do utworzenia tablicy.

02:08.130 --> 02:09.770
Robisz coś takiego.

02:11.360 --> 02:18.460
Powiedziałbyś, że int.

02:18.560 --> 02:24.900
A to mówi, że chcę nowej tablicy, która ma przestrzeń 20 elementów.

02:26.690 --> 02:28.180
Lub możemy zrobić coś takiego.

02:28.240 --> 02:33.140
Int b.

02:33.290 --> 02:40.750
A następnie uzupełnij tablicę pięciu przedmiotów o 1 2 3 4 5 liczb całkowitych.

02:40.850 --> 02:42.830
To właśnie oznacza liczby.

02:43.770 --> 02:51.420
I z tego powodu oraz ze względu na to, że jest to statyczna tablica, abyśmy

02:51.510 --> 03:00.560
mogli dodać tutaj sześć elementów, musielibyśmy skopiować całą tę tablicę i przenieść ją do zupełnie innego obszaru pamięci.

03:01.220 --> 03:03.680
Aby stworzyć dla niego miejsce.

03:03.830 --> 03:11.460
Szczęśliwie dla nas, kiedy pokazałem wam z javascriptem, jak to zrobić dobrze, nigdy nie musimy się martwić,

03:11.460 --> 03:18.640
że w naszym przykładzie na javascript nigdy tak naprawdę nie przydzieliliśmy pamięci, a to dlatego,

03:18.700 --> 03:27.850
że w javascript i innych językach, takich jak Python, gdzie masz listy i listę tablic w Javie działają jak dynamiczne tablice.

03:28.060 --> 03:35.070
Automatycznie przydzielają pamięć zgodnie ze wzrostem rozmiaru tablicy.

03:35.500 --> 03:40.470
Więc od samego początku myślicie, że dynamiczne tablice są o wiele łatwiejsze.

03:40.480 --> 03:46.800
Nie muszę myśleć o pamięci z powodu automatycznej zmiany rozmiaru, która wchodzi w dyskusję o zarządzaniu

03:46.800 --> 03:51.570
pamięcią, na którą pozwalają języki niskiego poziomu, takie jak C ++.

03:51.750 --> 03:57.780
Podczas gdy języki wyższego rzędu, takie jak javascript, pozwalają nam nie myśleć o pamięci i pozwolić maszynie

03:57.780 --> 03:59.790
zająć się nią za Ciebie.

03:59.790 --> 04:06.750
Są chwile, w których być może chcesz zarządzać pamięcią i czasem, w którym nie musisz bazować na

04:06.750 --> 04:07.970
swoich potrzebach.

04:08.280 --> 04:13.950
Oczywiście posiadanie większej kontroli nad pamięcią pozwala naprawdę poprawić i przyspieszyć działanie, dlatego języki

04:13.950 --> 04:18.420
takie jak C ++ mogą być znacznie szybsze niż wyższe języki.

04:18.420 --> 04:23.820
Języki wyższego poziomu, takie jak javascript, ale nie musimy tego robić.

04:24.170 --> 04:29.230
Chcemy wydostać się z tej lekcji, ponieważ dynamiczna macierz rozszerza się wraz z dodawaniem kolejnych elementów.

04:29.330 --> 04:35.660
Nie musisz więc określać rozmiaru z wyprzedzeniem, ale być może zauważyłeś coś z dynamicznymi

04:35.660 --> 04:36.270
tablicami.

04:37.810 --> 04:45.130
Widzisz tutaj, jak mam punkt w jednym, który jest taki sam jak polecenie push, które zrobiliśmy

04:45.130 --> 04:46.660
w poprzedniej lekcji.

04:46.930 --> 04:52.670
Ale mam tutaj gwiazdę, która mówi, że może być 0 z tego, dlaczego tak jest.

04:53.030 --> 05:01.560
Cóż, jeśli zapamiętamy naszą tablicę i usuniemy dodatkowe elementy tutaj, których nie

05:01.560 --> 05:15.460
potrzebujemy, po prostu powiedz abcd, jeśli pod maską javascript i nasza maszyna stworzyła tylko cztery bloki pamięci dla tej tablicy

05:15.460 --> 05:23.170
i dodamy kolejną literę pod maską, ponieważ jest tablicą dynamiczną.

05:23.270 --> 05:26.140
Zapętli się nad tymi przedmiotami.

05:26.330 --> 05:31.360
Skopiuj je i przenieś do innej lokalizacji za pomocą.

05:31.390 --> 05:34.310
Teraz osiem bloków przestrzeni.

05:35.200 --> 05:37.660
Abyśmy mogli dalej dodawać tutaj.

05:39.450 --> 05:47.850
Widzisz tutaj, ponieważ wykonaliśmy tę pętlę, operacja się skończyła i dlatego warto o tym pamiętać,

05:47.850 --> 05:50.750
chociaż jest to drobny szczegół.

05:51.030 --> 05:56.070
Dobrze wiedzieć, jak działa pod maską i przez większość czasu z

05:56.070 --> 06:03.330
językami, które pracujesz, a podczas wywiadów będziesz mówił o dynamicznych tablicach i nie będziesz musiał się

06:03.660 --> 06:10.020
martwić o przydzielanie pamięci i myślenie o możliwości, że może być konieczne skopiowanie tablicy.

06:10.110 --> 06:16.830
To naprawdę niski poziom, ale chciałem ci pokazać, jak działają, abyś miał te

06:16.850 --> 06:17.400
podstawy.

06:17.670 --> 06:24.180
Rozumiem, że jeśli chodzi o podbicie tylko dlatego, że dodajesz na końcu za pomocą polecenia

06:24.180 --> 06:31.770
push, możesz przyjąć, że jest to 0 z 1 przez większość czasu lub stały czas, ale co pewien

06:31.830 --> 06:37.190
czas możesz napotkać sytuację, w której to wszystko to czas liniowy.

06:37.300 --> 06:38.290
Zobaczę w następnym filmie.
