WEBVTT

00:01.800 --> 00:02.960
Witamy spowrotem.

00:03.090 --> 00:10.560
Teraz tablice skrótów są implementowane inaczej w różnych językach, ale w większości przypadków klucz

00:10.560 --> 00:14.940
i wartość mogą być dowolnymi typami struktur danych.

00:15.240 --> 00:23.010
Widzieliśmy tutaj, że możemy mieć funkcję jako wartość, możemy mieć inny obiekt, jeśli chcemy jako wartość

00:23.790 --> 00:27.340
możemy mieć tablicę jako wartość, jeśli chcemy.

00:27.590 --> 00:30.760
I mam na myśli, że możesz to zrobić również w tablicach.

00:30.830 --> 00:33.950
W wyścigu nie mamy tylko liczb i ciągów.

00:34.040 --> 00:42.790
Możemy mieć tablice obiektów, ale czasami możesz mieć klucze, które są czymś więcej niż tylko ciągami.

00:43.190 --> 00:52.890
Możesz potencjalnie mieć funkcje jako klucze i wartość, która jest również funkcją, a może liczbą

00:52.890 --> 00:56.540
lub tablicą, jak tylko chcesz.

00:56.620 --> 01:04.900
Teraz w JavaScript w obiekcie takim jak ten, jeśli przekazujesz klucz, który jest liczbą lub funkcją,

01:04.900 --> 01:13.540
w rzeczywistości dostaje ciąg, który znajdziesz i pozwala tylko na klucze strunowe, ale w nowej wersji javascript i

01:14.440 --> 01:19.330
E6 masz coś o nazwie Map i zestawy .

01:20.250 --> 01:23.460
Które mogą być również znane w innych językach.

01:23.460 --> 01:28.650
Mapa jest tworzona w ten sposób.

01:29.730 --> 01:38.170
Różnica między mapą a obiektem polega na tym, że mapa pozwala zapisać dowolny typ danych

01:38.940 --> 01:40.230
jako klucz.

01:40.240 --> 01:46.740
Pamiętaj, że z obiektem możesz zapisać klucz tylko jako ciąg znaków z mapą.

01:46.740 --> 01:53.700
Pozwala nam to, jeśli chcemy mieć funkcje jako klucze lub tablice jako klucze.

01:53.790 --> 02:00.150
Kolejną zaletą mapy jest to, że zachowuje kolejność reklam.

02:00.210 --> 02:01.010
Co to znaczy.

02:02.070 --> 02:07.140
Przy obiekcie nie ma porządku.

02:07.140 --> 02:14.900
Jeśli wrócimy do naszego diagramu, nasze dane są wstawiane losowo w różnych miejscach.

02:15.830 --> 02:26.180
Jeśli wrócimy do przykładu użytkowników, widzimy, że zdecydowanie nie ma porządku, gdy pobieramy wszystkie wartości

02:26.180 --> 02:27.420
obiektu.

02:27.770 --> 02:35.390
Zaczynamy od powiedzmy Lisa Smith, która zajęła drugie miejsce, a następnie John Smith, a następnie prawdopodobnie Sandra Dee

02:36.020 --> 02:38.930
Sam Doe zostaje wybrana jako ostatnia.

02:38.960 --> 02:47.770
Nie ma takiego porządku, jak w przypadku wyścigu, ale istnieją pewne wersje tabel mieszających,

02:47.860 --> 02:56.050
takich jak mapy i javascript, które zachowują tę kolejność wstawiania, więc gdy przechodzimy

02:56.590 --> 03:04.670
przez elementy obiektu, mamy utrzymywane zestawy porządkowe, które są bardzo podobne mapować.

03:04.740 --> 03:10.050
Jedyna różnica polega na tym, że przechowuje ona tylko klucze bez wartości.

03:10.050 --> 03:17.670
Widzisz więc, że każdy język, o którym wspomnieliśmy, ma wbudowane wersje struktur danych.

03:17.940 --> 03:21.270
Ale na koniec dnia wszystkie z nich są tabelami mieszającymi.

03:21.270 --> 03:28.920
Ale żeby naprawdę zrozumieć, jak działają tabele mieszania, myślę, że powinniśmy je zbudować w kolejnym filmie, który

03:29.090 --> 03:30.000
właśnie zrobimy.
