WEBVTT

00:01.180 --> 00:04.250
Womack Jak to się dzieje?

00:04.470 --> 00:09.220
Pójdźmy krok po kroku i zobaczmy, jak twoje odpowiedzi pasują do siebie.

00:09.300 --> 00:10.720
Najpierw jeden rodzaj.

00:10.740 --> 00:14.030
Dziesięć szkół wokół domu na odległość.

00:14.310 --> 00:16.370
Więc dane wejściowe to tylko 10.

00:16.410 --> 00:18.430
Jest dość mały.

00:18.450 --> 00:20.370
Potrzebujemy czegoś prostego.

00:20.550 --> 00:23.860
W tym przypadku prawdopodobnie użyję sortowania wstawiania.

00:25.530 --> 00:28.750
Jest naprawdę szybki w małych kategoriach.

00:28.800 --> 00:37.280
Łatwo jest kodować i ma on złożoność jednego z nich.

00:37.300 --> 00:44.860
Możliwe też, że te 10 szkół zostało już posortowane lub prawie posortowane na naszej liście.

00:44.920 --> 00:48.460
Więc wstawianie jest najprostsze dla tego typu małych danych.

00:48.570 --> 00:52.090
Lubię sortowanie dla tego typu rzeczy.

00:52.140 --> 00:53.120
A co z tym.

00:53.130 --> 01:01.920
Ten jest trudny jeden rodzaj aukcji w serwisie eBay na swojej stronie internetowej o aktualną kwotę oferty.

01:01.940 --> 01:05.750
Więc do tego używałbyś tej ściany.

01:05.750 --> 01:15.710
W rzeczywistości używałbym czegoś takiego jak radix lub sortowanie zliczania, ponieważ stawka jest zwykle

01:16.310 --> 01:21.600
liczbą między powiedzmy 1 $, powiedzmy 50000.

01:21.710 --> 01:23.550
Prawdopodobnie jeszcze mniej.

01:23.690 --> 01:28.040
Jeśli chodzi o płatności w serwisie eBay, powiedzmy od 1 do 100 USD.

01:28.040 --> 01:31.190
Są to liczby, które należy posortować.

01:31.310 --> 01:31.730
Dobrze.

01:31.850 --> 01:35.900
A ponieważ jest to stała długość liczb całkowitych.

01:35.930 --> 01:42.050
Liczby całkowite najprawdopodobniej nie wyniosą stu milionów, ponieważ, mam nadzieję, nikt nie licytuje tak wiele

01:42.050 --> 01:43.250
na eBayu.

01:43.250 --> 01:46.800
Więc jak używać radix lub sortowanie zliczania, aby je pokonać.

01:46.820 --> 01:55.110
Wszystkie i dziennik i czas wiedząc, że stawki zawsze będą numerami w określonym zakresie.

01:55.270 --> 01:56.920
A co z tego rodzaju?

01:56.920 --> 02:02.190
Wyniki sportowe w wynikach sportowych ESPN mogą się różnić.

02:02.190 --> 02:09.560
Są miejsca dziesiętne, czasami istnieją różne formaty, takie jak tenis i piłka nożna, i różne rzeczy,

02:09.560 --> 02:14.650
a na pewno jest wiele sportów i wiele wyników do obsłużenia.

02:14.880 --> 02:18.100
W tym przypadku użyję szybkiego sortowania.

02:18.810 --> 02:25.170
Będzie to najskuteczniejsze i choć możemy mieć najgorszy przypadek, wątpię, aby wyniki zostały

02:25.170 --> 02:28.690
posortowane, ponieważ istnieje tylko tyle różnych rodzajów.

02:28.770 --> 02:33.070
Ale martwię się również sortowaniem w pamięci.

02:33.330 --> 02:40.740
Więc jeśli zastosowałem sortowanie Myrt, może to być trochę za dużo z powodu naszej zwiększonej złożoności

02:41.250 --> 02:47.500
przestrzeni w porównaniu do quicksort, która, jeśli pamiętasz, ma lepszą złożoność przestrzeni.

02:47.650 --> 02:50.410
A tak przy okazji, możesz mieć na to własną odpowiedź.

02:50.410 --> 02:56.330
Być może myślałeś, że wyniki sportowe na ESPN będą takie, że wkład będzie trochę inny.

02:56.380 --> 02:58.780
Możesz mieć różne typy odpowiedzi.

02:58.780 --> 03:05.350
Pomysł tutaj w sytuacji wywiadu ma na celu wyjaśnienie samego siebie i jeśli znasz zasady, to oni przeprowadzą rozmowę z

03:05.350 --> 03:09.030
tobą, powiedzą, że on lub ona wie, o czym mówią.

03:09.130 --> 03:14.980
Numer cztery masywna baza danych, dzięki czemu możemy wypełnić wszystkie te dane w pamięci, aby je posortować.

03:15.040 --> 03:22.400
Dlatego prawdopodobnie musimy rozwiązać to na zewnątrz i załóżmy, że musimy posortować dane z ostatnich lat.

03:22.450 --> 03:27.950
Jest to mnóstwo danych i musimy go jakoś uporządkować, powiedzmy, według pewnego rodzaju daty.

03:28.470 --> 03:33.100
Co na podstawie informacji, które tu dostałem, brzmi, jakbym musiał zrobić coś, co nazywa

03:35.990 --> 03:38.480
się Mertz lub mój ulubiony rodzaj sortowania.

03:39.990 --> 03:47.010
I powód, dla którego wybrałbym to, ponieważ dobrze brzmi, że teraz zaczniemy naprawdę w pamięci, ponieważ dane

03:47.010 --> 03:53.260
są tak duże, ale ponieważ dane są tak duże, naprawdę martwię się o wydajność.

03:53.280 --> 03:56.920
Nie chcę najgorszego przypadku wszystkich quicksortów i kwadratu.

03:57.000 --> 04:01.720
Chcę się upewnić, że bez względu na to, co zamierzam uzyskać i zalogować się.

04:01.980 --> 04:03.510
A co z piątym.

04:03.700 --> 04:10.370
Istnieje prawie posortowane dane z przeglądu Danny, które trzeba zaktualizować i dodać dwie nowe recenzje.

04:10.530 --> 04:13.670
Mamy więc ogromną listę twoich recenzji.

04:13.880 --> 04:21.650
Załóżmy, że dokonałeś napadu na kurs, a ten wynik mówi, że bierzesz 500 opinii, a Ty i Twój znajomy

04:21.660 --> 04:25.050
właśnie dodaliście dwie nowe recenzje do wyników.

04:25.230 --> 04:30.100
W tym przypadku użyję sortowania wstawiania.

04:30.130 --> 04:33.090
I dlaczego tak jest.

04:33.140 --> 04:37.870
Chociaż te dane mogą być ogromne i być może mam wiele opinii.

04:39.010 --> 04:47.030
Zakładam, że większość poprzednich danych jest już posortowana i wszystko, co robię, to dodawanie dwóch nowych opinii do

04:47.570 --> 04:48.600
tych danych.

04:49.490 --> 04:56.730
Sortowanie w trybie wstawiania dla list uporządkowanych wcześniej działa lepiej niż jakikolwiek inny typ wybrany wcześniej.

04:56.880 --> 05:01.730
Numer sześć rekordów temperatury z ostatnich 50 lat w Kanadzie.

05:01.920 --> 05:04.240
Och, chłopcze, co powinniśmy zrobić z tym.

05:04.300 --> 05:06.080
I to jest trochę trudne.

05:06.360 --> 05:13.450
Powiedziałbym, że nasz pierwszy użyłbym czegoś takiego jak radix lub sortowanie zliczające, jeśli temperatury nie mają

05:13.450 --> 05:14.520
miejsc dziesiętnych.

05:14.530 --> 05:25.240
Jeśli mówimy, że wiesz, że jest minus 30, powiedzmy 40 stopni, to liczba całkowita między małym zakresem w dół mojej pracy, ale

05:25.300 --> 05:32.050
jeśli chcę sortować dane, które mogą mieć również temperatury, które są naprawdę dokładne i

05:32.050 --> 05:38.290
mają miejsca dziesiętne, które można Zrobić z radix lub sortowania zliczania, więc prawdopodobnie

05:38.290 --> 05:47.340
będę używać szybkiego sortowania ponownie, tak abyśmy mogli zrobić niektóre w sortowaniu pamięci i miejmy nadzieję, zaoszczędzić na tej

05:47.340 --> 05:48.880
złożoności przestrzeni.

05:48.900 --> 05:54.930
W porządku od ostatniej do większej bazy danych użytkowników lub dużej bazy danych o nazwach użytkowników wymagających sortowania.

05:55.130 --> 05:57.890
Dane są bardzo losowe.

05:59.120 --> 06:03.110
W porządku, więc mamy bazę danych o nazwie użytkownika, którą należy posortować.

06:03.140 --> 06:07.090
Nie jestem pewien, czy nie mam wystarczających informacji, aby podjąć decyzję tutaj.

06:07.160 --> 06:17.130
Może użyłbym sortowania scalonego, jeśli mamy wystarczająco dużo pamięci i pamięć nie jest zbyt droga na maszynie.

06:17.130 --> 06:25.040
A może użyję quicksort, jeśli nie martwię się zbytnio o najgorszy przypadek i że duże bazy

06:25.210 --> 06:26.760
danych nazw użytkownika.

06:26.810 --> 06:33.750
Może po prostu użyję funkcji quicksort, aby zaoszczędzić miejsce w pamięci, a następnie na końcu 8.

06:33.930 --> 06:38.490
Chcesz nauczyć sortowania Sir po raz pierwszy, więc jest trochę zabawne pytanie.

06:38.520 --> 06:43.780
Powiedziałem, że sortowanie bąbelków tylko po to, abym mógł dodać sortowanie bąbelkowe do tej listy i sortowanie sortowania.

06:45.770 --> 06:46.420
Nienawidzić.

06:46.740 --> 06:49.270
Mam nadzieję, że dobrze się bawiłeś z tymi pytaniami.

06:49.440 --> 06:50.900
Algorytmy sortowania.

06:50.970 --> 06:52.710
To jest prawdopodobnie najlepsze, co mogę dostać.

06:52.710 --> 06:58.290
Właściwie to nie lubię węgierskiego tańca, zbyt częste sortowanie jest zabawne, jak możesz mieć przy sortowaniu, ale

06:58.290 --> 07:03.710
mam nadzieję, że masz dobry pomysł, jak odpowiedzieć na te pytania, gdy przyjdą na rozmowę.

07:04.290 --> 07:05.800
Zobaczę w następnym filmie.

07:06.130 --> 07:06.400
Babay.
